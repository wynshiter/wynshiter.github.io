<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/07/02/%E3%80%8A%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AF%BB%E6%87%8224%E7%A7%8D%E4%BA%92%E8%81%94%E7%BD%91%E6%80%9D%E7%BB%B4%E3%80%8B%20%E6%91%98%E6%8A%84/"/>
      <url>/2019/07/02/%E3%80%8A%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AF%BB%E6%87%8224%E7%A7%8D%E4%BA%92%E8%81%94%E7%BD%91%E6%80%9D%E7%BB%B4%E3%80%8B%20%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<hr><p>title: 《一本书读懂24种互联网思维》摘抄<br>date: 2019-07-03 00:00:00<br>tags: [oldITWANG]<br>categories: </p><ul><li>老王和他的IT界朋友们</li></ul><hr><hr><p>虽然书中很多内容，在IT 老司机来看都是老生常谈，但对于我们每个有互联网思维的小伙伴来说还是常读常新的。</p><p>很多我摘抄的内容，没有上下文语境不是很好理解，推荐花5个小时左右时间把书读一遍，算是温习一遍互联网思维。</p><p><img src="https://img-blog.csdnimg.cn/20190701230321805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h1 id="第1章-前-言"><a href="#第1章-前-言" class="headerlink" title="第1章 前 言"></a>第1章 前 言</h1><p>雷军以简单的7 个字表达他对互联网思维的理解：“<strong>专注、极致、口碑、快</strong>”；</p><p>周鸿祎认为，互联网思维的关键词有四个，<br>一是用户至上，<br>二是体验为王，<br>三是免费，<br>四是跨界。</p><p>而在张瑞敏看来，“互联网思维”包含两层含义：<br>一是并行生产，即消费者、品牌商、渠道、上游供应商利用互联网技术全流程参与；<br>二是经营用户而非经营产品，传统制造业以产品为中心，而未来的制造业以用户为中心。</p><h1 id="第2章-用户思维"><a href="#第2章-用户思维" class="headerlink" title="第2章 用户思维"></a>第2章 用户思维</h1><p>华为的高层领导们20多年来变着法子、换着花样不断重复一个老掉牙的真理—— <strong>以客户为中心</strong>。华为一位顾问，曾经写过一篇文章叫《客户是华为存在的理由》，任正非在改这篇稿子的时候加了两个字—— 《客户是华为存在的<strong>唯一</strong>理由》。</p><p>今天所有的营销驱动不是你在新浪花多少钱，而是你能够占领用户多少时间，是你内容本身的运作能力。做内容营销，我认为最核心的是创造话题，包括要有一些配套活动的策划。</p><p>我们正要进入并快速拥抱每个消费者的时代，人人都是设计师，人人都是创意师，人人都是裁缝，人人都是销售，人人都是消费者。他们越来越追求个性化，越来越追求自己的消费自己作主，这是一个新的改变。</p><hr><h1 id="第5章-服务思维"><a href="#第5章-服务思维" class="headerlink" title="第5章 服务思维"></a>第5章 服务思维</h1><p>在2010年的一次会议上，<strong>任正非进一步指出：在华为，坚决提拔那些眼睛盯着客户，屁股对着老板的员工；坚决淘汰那些眼睛盯着老板，屁股对着客户的干部。</strong></p><p>华为四大战略内容中，第一条就是：“为客户服务是华为存在的唯一理由；客户需求是华为发展的原动力。”</p><p>百年西方管理学的核心思想，绕来绕去还是离不开一个根本：如何围绕消费者的需求，为公司定位，为管理者定位，为公司的产品定位。</p><h1 id="第6章-爆点思维"><a href="#第6章-爆点思维" class="headerlink" title="第6章 爆点思维"></a>第6章 爆点思维</h1><p>优衣库的所有发展策略都集中指向一点：从非标准化的服装行业里面挖掘出标准化的品类，借助全球供应链，利用品牌号召力和研发投入降低产品开发失败的风险，将效率发挥到极致，从而也把价格降低到极致。</p><p>雷军还坚持认为，在今天浮躁的移动互联网世界里，如果你想做成点事，<strong>最好静悄悄地低调去做</strong>，做出超出用户预期的东西。如果你做了很多广告吹嘘产品，把用户的胃口吊得很高，而实际产品达不到预期，最后用户一定会很失望的。</p><hr><h1 id="第7章-社交化思维"><a href="#第7章-社交化思维" class="headerlink" title="第7章 社交化思维"></a>第7章 社交化思维</h1><p>黄太吉CEO赫畅认为，今天在互联网营销的时代就是创建共振，因为每个人都是独立的个体，一个品牌也是独特的个体，如何建立相同的价值观、相同的兴趣取向，相同的社群，才是最关键的。</p><h1 id="第8章-产品经理思维"><a href="#第8章-产品经理思维" class="headerlink" title="第8章 产品经理思维"></a>第8章 产品经理思维</h1><p><strong>那些风云企业的CEO们，哪个不是在亲自抓产品。</strong><br>乔布斯从创办苹果之始，就在亲自抓产品，亲自举办产品发布会。谷歌的创始人一直在研发最新产品的“×实验室”工作。比尔·盖茨是编程起家的，辞掉CEO后，还在兼任CTO。中国的IT精英们，多数是搞技术出身，关注点也在产品，这些企业的崛起，不是营销的成功，而是产品的成功。</p><p><strong>如果一个人把自己看得太小，只把自己看成一个打工的，如果你是这样的层次和胸怀，你不可能成为一个真正能做好产品的产品经理，所以我希望各位听了我的心得，回去在公司上班的时候，也不用管公司是不是你自己的，你拿出一点儿创业精神。</strong></p><p>做产品经理，首先要研究产品，了解市场，并能准确把握市场需求和用户的心理，这样才能宏观掌控一个产品。在这个过程中，产品经理的工作由于要横跨开发、测试、运营、市场等多个环节，因此产品经理的沟通能力就显得至关重要。傅盛甚至认为，在产品设计工作中，80%的问题都是沟通问题。 关注细节问题也是一名优秀的产品经理必备的能力。</p><hr><h1 id="第9章-极致思维"><a href="#第9章-极致思维" class="headerlink" title="第9章 极致思维"></a>第9章 极致思维</h1><p>要理解极致思维，不妨从两位企业家的座右铭开始。一句是乔布斯的：Stay Hungry，Stay Foolish. 直译是保持饥饿，保持愚蠢，但中国的企业家田溯宁将这一句式翻译成国人耳熟能详的“<strong>求知若渴，处事若愚</strong>”。另一句是雷军推崇的：“做到极致就是把自己逼疯，把别人逼死！” 产品的核心能力要做到极致</p><h1 id="第10章-痛点思维"><a href="#第10章-痛点思维" class="headerlink" title="第10章 痛点思维"></a>第10章 痛点思维</h1><p>乔布斯所言：“我们的任务是读懂还没落到纸面上的东西。” <strong>实际上就是对客户隐性需求的深度挖掘，就是客户需求分析。</strong></p><hr><h1 id="第11章-简约思维"><a href="#第11章-简约思维" class="headerlink" title="第11章 简约思维"></a>第11章 简约思维</h1><p>专注：少即是多 <strong>练书法其实只要写好一个“永”字就够了</strong>，就能把所有汉字都写得很好看。“永字八法”，一个“永”字就涵盖了所有汉字的笔法精意，这不就是‘大道至简’吗？ 大道至简，少就是多。只有足够专注，才能将一件事情做到极致。</p><h1 id="第12章-微创新思维"><a href="#第12章-微创新思维" class="headerlink" title="第12章 微创新思维"></a>第12章 微创新思维</h1><p>360董事长周鸿祎这样诠释微创新：“从用户体验的角度，不断地去做各种微小的改进。可能微小的改进一夜之间没有效果，但是你坚持做，每天都改善1%，甚至0.1%，一个季度下来，改善就很大。”</p><hr><h1 id="第13章-迭代思维"><a href="#第13章-迭代思维" class="headerlink" title="第13章 迭代思维"></a>第13章 迭代思维</h1><p>在飞速发展的互联网行业里，产品是以用户为导向在随时演进的。因此，在推出一个产品之后要迅速收集用户需求进行产品的迭代， 在演进的过程中注入用户需求的基因，完成快速的升级换代裂变成长，才能让你的用户体验保持在最高水平。不要闭门造车以图一步到位，否则你的研发速度永远也赶不上需求的变化。</p><p>百度的工程师已经习惯了一个叫“AB test”的开发模式，即如果我们不确定A、B两种结果哪一个更符合用户的需求，就让用户来为我们test，得到结论后迅速调整。</p><p>“天下武功，唯快不破。互联网创业，速度一定要跟上去。” “要死也要死得快，早死早超生！” 这是雷军做投资那几年常说的话。 在雷军看来，“快”就是互联网创业的利器。一旦速度跟不上，就会面临一系列解决不完的问题。</p><hr><h1 id="第14章-颠覆式创新思维"><a href="#第14章-颠覆式创新思维" class="headerlink" title="第14章 颠覆式创新思维"></a>第14章 颠覆式创新思维</h1><p>周鸿祎说：打败微信的不可能是另一个微信。无论是来往还是易信，在核心功能上都与微信基本相似，均采用相同的移动社交产品架构，以“智能通讯录”为核心获取好友，实现语音、文字的即时通讯。既然现有的产品已经完全能够满足使用，那么对于用户来讲，来往就没有存在的必要性了。</p><h1 id="第16章-免费思维"><a href="#第16章-免费思维" class="headerlink" title="第16章 免费思维"></a>第16章 免费思维</h1><p>硬件免费，服务收费 雷军得出一个结论：在互联网时代，<strong>唯一不会被打败的生意，就是胆敢做不赚钱的生意。</strong> 于是，他从一开始就不指望小米能在三五年之内盈利。</p><hr><h1 id="第18章-跨界思维"><a href="#第18章-跨界思维" class="headerlink" title="第18章 跨界思维"></a>第18章 跨界思维</h1><p>……由于跨界思维，未来真正会消失的是互联网企业，因为所有的企业都是互联网企业了。 最大的机遇来源于跨界融合</p><p>2013年11月6日，国内首家互联网保险公司—— 众安保险正式开业。 这家公司从筹备之初就备受关注，不仅是因为国内首家互联网保险公司，更因为其背后的股东光环：小微金融服务集团、腾讯、平安参股为前三大股东，业界戏称为马云、马化腾、马明哲“三马卖保险”。</p><h1 id="第19章-整合思维"><a href="#第19章-整合思维" class="headerlink" title="第19章 整合思维"></a>第19章 整合思维</h1><p>众包：让用户制造产品 《连线》杂志记者杰夫·豪威（Jeff Howe）提出，他认为，众包（Crowdsourcing）就是“把内部员工或外部承包商所做的工作外包给一个大型的没有清晰界限的社会群体去完成”。</p><hr><h1 id="第20章-开放思维"><a href="#第20章-开放思维" class="headerlink" title="第20章 开放思维"></a>第20章 开放思维</h1><p>每一个从业者必须认识到，如果你不能学会主动迎接，不对这种网民自由参与分享的精神保持敬畏之心，你就会被炸得粉碎。</p><h1 id="第21章-平台思维"><a href="#第21章-平台思维" class="headerlink" title="第21章 平台思维"></a>第21章 平台思维</h1><p>所谓扁平化的管理模式，就是尽量减少公司内部的管理层次，压缩职能部门和机构，使企业的决策层和操作层之间的中间管理层级尽可能地减少，以便使企业快速地将决策权延至企业生产、营销的最前线，从而提高企业效率的管理模式。</p><p>雷军自有心得，他曾经打过一个“小餐馆理论”的比喻。<strong>一个小餐馆成不成功一看便知，这个标志就是有没有人排队。</strong> 第一，小餐馆一般大厨就是老板自己，饭菜好不好他自己最清楚，而且大厨每天在店里盯着，跟来的很多熟客都是朋友，也最能了解客人的需求。第二，他有很强的定力，每天只研究一件事情，就是怎么把菜做好，虽然赚钱重要，但是做好菜比赚更多的钱更重要。这就是为什么客人要排队的原因。</p><p><strong>透明的利益分享机制正是对他们付出的劳动保证。</strong></p><p>雷军作为天使投资人投资多玩YY，李学凌曾经因为得力干将张帆带领团队集体离职另立门户而向雷军大倒苦水。雷军对李学凌说：“你找到一帮人一起创业，为什么干了两三年人家会离开？这是个标准问题，很多创业公司都在发生。你带着以前的子弟兵一起创业，给了人家很高的预期，但是从内心深处，你却没有准备和人家一起分享未来的成果，总觉得人家是打工的。别人利益方面得不到保障，精神层面得不到认同，自然会选择离开。”</p><p>小米内部有个“卖嫁妆”的段子，说的就是这次全员持股的事情。作为小米公司创始的14人之一，当时唯一的女员工小管，承担了小米公司创业初期从人力资源到行政，从后勤到前台的全部工作。虽然她不是技术人却像其他人一样付出了自己的劳动，虽然她不懂得科技的发展趋势，却对小米的未来充满了信心。 听说公司要全员持股，她是很兴奋了一段时间的。但是毕竟自己工作时间太短，没有什么积蓄，家里也没有什么能力帮她。她认真思考再三，便和未婚夫商议，决定先把自己的嫁妆卖掉，投资小米。等将来公司股份涨了，再买嫁妆也不迟。当然，这部分嫁妆现在已成天价。 要建立一个企业的不易，更知道要让一个团队能持久保持凝聚力，只有目标一致，利益清晰，才能做到上下一心，无往而不利。</p><hr><h1 id="第22章-顺势思维"><a href="#第22章-顺势思维" class="headerlink" title="第22章 顺势思维"></a>第22章 顺势思维</h1><p>几乎所有的成功企业，都是注重危机意识的企业。比如，海尔集团以“永远战战兢兢，永远如履薄冰”为生存理念；小天鹅公司实行的“末日管理”战略，坚守“企业最好的时候，也就是最危险的时候”的理念；还有已经成为“全球最好的中文搜索引擎”的百度，其创始人李彦宏却始终在公司上下传达“百度离灭亡只有30天”的警示……这些强大的企业无时不保持着居安思危的警惕性，在各方面注重防患于未然，使企业保持蓬勃向上的发展势头。</p><h1 id="第23章-连接思维"><a href="#第23章-连接思维" class="headerlink" title="第23章 连接思维"></a>第23章 连接思维</h1><p>马化腾认为，这两年移动互联网手机成为人的一个电子器官的延伸，这个特征越来越明显，摄像头、感应器，人的器官延伸增强了，而且通过互联网连在一起了，这是前所未有的。</p><p>上世纪90年代中期，丰田公司（Toyota）的一家子公司为了追踪汽车配件而发明了二维码。2002年，二维码技术在日本开始商业应用，2003年二维码在韩国商业应用。日韩在全球范围都是二维码应用最早且最成功的国家。2006年中国移动率先在国内推出二维码业务，通过手机上网的WAP方式应用二维码业务。</p><hr><h1 id="第24章-大数据思维"><a href="#第24章-大数据思维" class="headerlink" title="第24章 大数据思维"></a>第24章 大数据思维</h1><p>大数据思维带来三个革新：不是分析随机样本，而是分析全体数据；不是执迷于数据的精确性，而是执迷于数据的混杂性；知道“是什么”就够了，没必要知道“为什么”。 数据就是资产</p><p>IDC预测全球数据量大约每两年翻一番，2015年全球数据量将达到近8ZB，到2020年，全球将达到35ZB。</p><p>孕妇在怀孕头3个月过后会购买大量无味的润肤露；有时在头20周，孕妇会补充如钙、镁、锌等营养素；许多顾客都会购买肥皂和棉球，但当有人除了购买洗手液和毛巾以外，还突然开始大量采购无味肥皂和特大包装的棉球时，说明她们的预产期要来了。在塔吉特的数据库资料里，统计师们根据顾客内在需求数据，精准地选出其中的25种商品，对这25种商品进行同步分析，基本上可以判断出哪些顾客是孕妇，甚至还可以进一步估算出她们的预产期，在最恰当的时候给她们寄去最符合她们需要的优惠券，满足她们最实际的需求。</p><hr><h1 id="第25章-物联网思维"><a href="#第25章-物联网思维" class="headerlink" title="第25章 物联网思维"></a>第25章 物联网思维</h1><p>什么叫体验？举个例子，华夏银行请我吃饭，假设说。我打开一瓶矿泉水，喝完之后，它确实是矿泉水，这叫体验吗？这不叫体验。<strong>只有把一个东西做到极致，超出预期才叫体验。比如，有人递过一个矿泉水瓶子，我一喝里面全是50度的茅台，这个就超出我的体验嘛。我就会到处讲我到哪儿吃饭，我以为是矿泉水，结果里面是茅台，我要写一个微博，绝对转发500次以上。</strong></p><p>互联网时代、移动互联网时代，一个企业看似好像牢不可破，其实都有大的危机，稍微把握不住这个趋势的话，其实就非常危险，之前积累的东西就可能灰飞烟灭了……</p><p>酒店做好产品和服务，餐厅做出美味的菜品，永远都是我们线下企业最重要的核心价值，线上平台永远无法替代这种体验式服务。移动互联网，提供了我们跟用户沟通和交易的更有效手段，不需要或者极少需要任何第三者插足其间。我们将自己的核心价值，直接和最终用户对接，使得他们方便、迅捷、不贵。</p><p><strong>有焦虑，才会有思考；有思考，才会有突破；有突破，才会有璀璨的未来。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>连续血糖监测(CGM) 初探</title>
      <link href="/2019/06/17/%E8%BF%9E%E7%BB%AD%E8%A1%80%E7%B3%96%E7%9B%91%E6%B5%8B(CGM)%20%E5%88%9D%E6%8E%A2/"/>
      <url>/2019/06/17/%E8%BF%9E%E7%BB%AD%E8%A1%80%E7%B3%96%E7%9B%91%E6%B5%8B(CGM)%20%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<p>@<a href="文章大纲">toc</a></p><hr><p>作者：王雅宁</p><p>注，文章仅代表个人观点，由网络资料搜集及个人经验汇聚而成，也不涉及相关产品的广告推销。医疗相关内容是非常严肃的内容，本文仅在一定程度上按照个人经验给予参考和分享，并没有经过详细论证，如有侵权或不准确的地方请联系删除或改正，如购买相关产品产生医疗事故本人不负责任。</p><p>本文主要介绍了试用雅培瞬感CGM 设备进行持续血糖检测的背景及糖尿病相关知识。</p><hr><h1 id="1-全球糖尿病背景"><a href="#1-全球糖尿病背景" class="headerlink" title="1. 全球糖尿病背景"></a>1. 全球糖尿病背景</h1><p>2017年及2045年世界各地区糖尿病患病人数及增长率（20-79岁）<a href="速速围观丨2017年IDF全球糖尿病地图（第八版）发布！">^1</a><br><img src="https://img-blog.csdnimg.cn/20190616211750285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>成年糖尿病患病人数前十国家及相应医疗支出（2017）</strong>。值得注意的是，我国成年糖尿病（20-79岁）患病人数达到1.14亿，仍是全球糖尿病患病人数最多的国家。<br><img src="https://img-blog.csdnimg.cn/20190616211900581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h1 id="2-中国糖尿病问题现状"><a href="#2-中国糖尿病问题现状" class="headerlink" title="2. 中国糖尿病问题现状"></a>2. 中国糖尿病问题现状</h1><p>糖尿病目前已成为我国的常见病，根据国际糖尿病联盟统计数据，2017年中国是世界第一大糖尿病患者国，<strong>全球约有4.25亿成人患糖尿病，其中中国糖尿病患者达1.14亿人，约占全球糖尿病人数的1/4居世界首位</strong>。</p><p>与庞大的糖尿病人群形成鲜明对比的是，我国糖尿病治疗现状堪忧。糖尿病知晓率低，治疗率低，治疗达标率低，并发症却高。不仅血糖达标率低，体重、血压等达标率也不尽如人意：52.3%患者血糖控制不达标，58.3%患者超重，71.6%患者血压控制不达标。</p><p>我国糖尿病流行的4个因素<br>1.老龄化<br>2.城市化<br>3.超重肥胖患病率增加<br>4.中国人的遗传易感性：2型</p><p><img src="https://img-blog.csdnimg.cn/20190616212626289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h1 id="3-持续血糖检测及其背景简介"><a href="#3-持续血糖检测及其背景简介" class="headerlink" title="3. 持续血糖检测及其背景简介"></a>3. 持续血糖检测及其背景简介</h1><p>Continuous Glucose Monitoring简称CGM，即连续血糖监测系统，是指通过葡萄糖感应器监测皮下组织间液的葡萄糖浓度而间接反映血糖水平的监测技术。</p><h2 id="3-1-CGM-原理"><a href="#3-1-CGM-原理" class="headerlink" title="3.1 CGM 原理"></a>3.1 CGM 原理</h2><p>连续血糖监测系统和传统指尖采血测试相比较，指尖采血好比是照相，得到的是某个时间点的血糖值。而CGM好比是录像，获得的是连续血糖值。<strong>一个是点，一个是面。</strong></p><p><img src="https://img-blog.csdnimg.cn/20190616214651842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617001530187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>从我个人佩戴的感受来说，基本是完全没有任何感觉的，带着这种CGM 系统的贴片可以游泳，洗澡，完全不影响个人的生活。</p><p><img src="https://img-blog.csdnimg.cn/20190616214703771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>CGM设备行业按产品可分为传感器、发射器、接收器和胰岛素泵<a href="长期保持40%以上的增长率，Dexcom专注的CGM领域刚开始爆发">^2</a>。通过一个刺入皮下的传感器，在患者的组织液与体内葡萄糖发生氧化反应时形成电信号，电信号随之被转换为血糖读数，再通过发射器到无线接收器上。在这些数据和直观图的指导下，临床医生能够全面了解患者24小时的血糖波动情况，必要时可配合胰岛素泵给患者注射胰岛素。</p><p>以下为传统血糖检测仪和动态血糖检测设备的具体对比<a href="连续血糖监测(CGM)——糖尿病领域新战场">^3</a><br><img src="https://img-blog.csdnimg.cn/2019061622144920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3-2-CGM技术分类与代表企业"><a href="#3-2-CGM技术分类与代表企业" class="headerlink" title="3.2 CGM技术分类与代表企业"></a>3.2 CGM技术分类与代表企业</h2><p>可喜的是我们中国还有不少企业涉及这个新兴领域。<br><img src="https://img-blog.csdnimg.cn/20190616215041145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>从这32家企业中，我们可以看到连续血糖监测系统（CGM）根据应用场景可分为医院用的和家庭用的，根据使用方法可分为有创型和无创型。若根据采用的技术，CGM又可分为主要的6大类<a href="CGM连续血糖监测领域盘点：13.7亿美元的市场，主要由这10家企业瓜分">^4</a>。</p><p><img src="https://img-blog.csdnimg.cn/20190616215440994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>比如，以美敦力和德康为代表的连续血糖监测仪，是通过插入探针传感器来测量血糖值，以 <strong><a href="https://www.abbott.com.cn/" target="_blank" rel="noopener">雅培</a>(我们今天的主角)</strong> 和Nemaura为代表的产品又是通过一个皮肤贴片来实现血糖监测。另外，还有经皮透析技术、拉曼光谱技术和光电容积脉搏波记录等方法。</p><h2 id="3-3-CGM-未来趋势"><a href="#3-3-CGM-未来趋势" class="headerlink" title="3.3 CGM 未来趋势"></a>3.3 CGM 未来趋势</h2><p>未来趋势：CGM系统+胰岛素泵=人造胰腺</p><p> <img src="https://img-blog.csdnimg.cn/20190616215452660.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>未来随着CGM技术的成熟，单纯的糖尿病监测已经不能满足人们的需求。<br><strong>现在已经有公司将连续血糖检测仪智能地与胰岛素泵结合，形成一个闭环人造胰腺系统。</strong><br>比如：强生、Insulet、Tandem、Ascensia和Pancreum等公司，都已经将美敦力和德康的CGM系统运用到自己的胰岛素泵中，组成一套糖尿病管理系统。</p><p>在最简单的CGM系统中，CGM数据近显示在手持设备或其他医疗产品设备上。现在将CGM系统与胰岛素泵紧密连接在一起，胰岛素泵可直接接收到CGM数据，并解读成相应的指令。例如，当患者的血糖值低于某个阈值时，则停止胰岛素输送。理论上说，若这种技术发展成熟后，意味着患者的血糖在任何时候都能保持在正常血糖范围内，这将是治愈糖尿病的最佳方法。</p><hr><h1 id="4-使用雅培瞬感传感器进行血糖监控"><a href="#4-使用雅培瞬感传感器进行血糖监控" class="headerlink" title="4. 使用雅培瞬感传感器进行血糖监控"></a>4. 使用雅培瞬感传感器进行血糖监控</h1><p>雅培设备全家福，一套下来传感器加两个贴片1千多，还是挺贵的。<br><img src="https://img-blog.csdnimg.cn/20190616220209983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="4-1-传感器使用"><a href="#4-1-传感器使用" class="headerlink" title="4.1 传感器使用"></a>4.1 传感器使用</h2><p>1.关注微信公众号</p><p><img src="https://img-blog.csdnimg.cn/20190616220600706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.回复数字1-9 获取对应操作视频<br><img src="https://img-blog.csdnimg.cn/20190616220612246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617002910541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>不得不说，瞬感的小姐姐还挺好看的，哈哈</p><p><img src="https://img-blog.csdnimg.cn/201906170030006.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>视频中她亲自示范带上了一个贴片<br><img src="https://img-blog.csdnimg.cn/20190617003131398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617003052588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190617003111474.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>戴上贴片后，用传感器扫描贴片激活后一小时就可以读数了。</p><h2 id="4-2-pc-端数据导出"><a href="#4-2-pc-端数据导出" class="headerlink" title="4.2 pc 端数据导出"></a>4.2 pc 端数据导出</h2><p>以使用 windows 为例，在雅培顺感官网下载客户端<br><a href="http://www.freestyle-libre.cn/Home/Download" target="_blank" rel="noopener">http://www.freestyle-libre.cn/Home/Download</a></p><h3 id="4-2-1-下载及安装"><a href="#4-2-1-下载及安装" class="headerlink" title="4.2.1 下载及安装"></a>4.2.1 下载及安装</h3><p> <img src="https://img-blog.csdnimg.cn/20190616220708259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>官网链接下载好后重启电脑，双击打开软件，通过usb 线链接检测仪器。看到如下所示页面。<br><img src="https://img-blog.csdnimg.cn/20190616220719189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>填写相关信息，设定目标葡萄糖范围为3.9 到7.8 mmol/L</p><h3 id="4-2-2-导出报告"><a href="#4-2-2-导出报告" class="headerlink" title="4.2.2 导出报告"></a>4.2.2 导出报告</h3><p>点击创建报告，勾选需要导出的报告维度。（这个和全量导出原始数据无关）<br><img src="https://img-blog.csdnimg.cn/20190616221038110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>全量导出原始数据<br>t依次点击，文件，导出数据，输入数据文件名（用户名_当前日期.txt, e.g season_20190528.txt）</p><p><img src="https://img-blog.csdnimg.cn/20190616221048796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>导出的样例数据和报告<br><img src="https://img-blog.csdnimg.cn/20190616221105819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="4-3-样例数据及报告"><a href="#4-3-样例数据及报告" class="headerlink" title="4.3 样例数据及报告"></a>4.3 样例数据及报告</h2><p>样例数据<br><img src="https://img-blog.csdnimg.cn/20190616222524619.png" alt="在这里插入图片描述"></p><p>报告</p><p><img src="https://img-blog.csdnimg.cn/20190616222437211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="4-4-web-端数据导出（目前需要挂代理，有报错）"><a href="#4-4-web-端数据导出（目前需要挂代理，有报错）" class="headerlink" title="4.4 web 端数据导出（目前需要挂代理，有报错）"></a>4.4 web 端数据导出（目前需要挂代理，有报错）</h2><p>登录后点击红框所示位置，这个功能应该是为了方便医生远程医疗。<br><a href="https://www1.libreview.com/" target="_blank" rel="noopener">https://www1.libreview.com/</a></p><p><img src="https://img-blog.csdnimg.cn/20190616221158950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019061622120936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="4-5-可视化展现"><a href="#4-5-可视化展现" class="headerlink" title="4.5 可视化展现"></a>4.5 可视化展现</h2><p>小写一点python代码 ，进行医学标准和我自己 检测结果的对比，可以看到，基本上我饭后血糖会有一个飙升，尤其是午饭后。这与陕西人饮食喜欢面食为主有关。</p><p>图中，紫色的为医学标准范围，青色的为我自身血糖动态变化的范围。整体随着时间的推移在逐渐向医学上限靠拢。说明我自身需要注意饮食结构 的调整。<br><img src="https://img-blog.csdnimg.cn/20190616233045485.gif" alt="在这里插入图片描述"></p><hr><h1 id="5-糖尿病预防"><a href="#5-糖尿病预防" class="headerlink" title="5. 糖尿病预防"></a>5. 糖尿病预防</h1><p>一般来说，出现下面这8种现象，你或许应该降血糖了</p><blockquote><ol><li>视力变差，看不清视物</li><li>体重莫名其妙的下降</li><li>一直口干舌燥</li><li>上厕所次数变多</li><li>一直觉得肚子饿</li><li>伤口一直不好</li><li>身体异常疲劳</li><li>皮肤变得干燥</li></ol></blockquote><h2 id="5-1-糖尿病自查"><a href="#5-1-糖尿病自查" class="headerlink" title="5.1 糖尿病自查"></a>5.1 糖尿病自查</h2><p>糖尿病，或者糖尿病前期的诊断标准有很多， 各国的标准也不太一样，基本可以按照下面标准进行对照总结。</p><p>对<strong>空腹血糖高低的判断标准</strong>总结如下：</p><blockquote><p>空腹血糖正常范围：3.9 - 6.1mmol/L<br>空腹血糖受损（糖尿病前期）：6.1 - 7.0mmol/L<br>糖尿病：空腹血糖大于 7.0 mmol/L</p></blockquote><p><strong>餐后2小时血糖水平高低的判断标准</strong>是：</p><blockquote><p>餐后2小时血糖正常范围：4.4 - 7.8mmol/L<br>餐后2小时血糖受损（糖尿病前期）：7.8 - 11.1mmol/L<br>糖尿病：餐后2小时血糖大于 11.1mmol/L</p></blockquote><h2 id="5-2-糖耐异常与饮食健康"><a href="#5-2-糖耐异常与饮食健康" class="headerlink" title="5.2 糖耐异常与饮食健康"></a>5.2 糖耐异常与饮食健康</h2><p>糖耐量异常 和糖尿病前期基本可以理解为同一个概念，从我个人的角度来说，影响血糖水平的三大因素：食物，运动，胰岛素。首先应该从饮食入手。那么</p><p>吃饭的量应该是多少呢？一图顶千言！</p><p><img src="https://img-blog.csdnimg.cn/20190616235402876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="5-3-健康的生活方式"><a href="#5-3-健康的生活方式" class="headerlink" title="5.3 健康的生活方式"></a>5.3 健康的生活方式</h2><p>一生不得糖尿病，该怎么办呢？<a href="很多人正处于糖尿病前期，不想得病，牢记这几句话！">^5</a></p><p><strong>1、减轻5％的体重</strong></p><p>哪怕你非常肥胖，而且不锻炼，但只要体重减轻5％，患糖尿病的危险就会降低70％。</p><p><strong>2、火腿香肠要少吃</strong></p><p>每周吃 5 次以上火腿或香肠，糖尿病危险会增加 43％，罪魁祸首是加工肉食中的添加剂。专家建议，应偶尔吃肉，多吃蔬菜。</p><p><strong>3、做事前3次深呼吸</strong><br>稳定情绪，减轻压力</p><p><strong>4、睡眠在6~8小时之间</strong></p><p><strong>5、不要独居</strong></p><p><strong>6、防治记个数字歌</strong></p><p>一个信念：与肥胖决裂；</p><p>两个要素：不多吃一口，不少走一步；</p><p>三个不沾：不吸烟，不饮酒，不熬夜；</p><p>四个检查：定期查体重、血压、血糖、血脂；</p><p>五六个月：减肥不求速成，每月减一两公斤即可，五六个月就见成效；</p><p>七八分饱：饮食上要“总量控制、结构调整、吃序颠倒”，即每餐只吃七八分饱，以素食为主，同时保证营养均衡；进餐时先吃青菜，快饱时再吃些主食、肉类。</p><p><strong>7、肌肉是天然降糖药</strong></p><p>现在多见的2型糖尿病，就和肌肉消失有关。因为胰岛素要发挥降血糖的作用，需要“助手”的帮忙，即胰岛素受体，而这个助手存在于肌肉细胞上。如果你长期不锻炼，随着肌肉减少，“助手”的数量减少，降糖的作用就渐渐发挥不出来，血糖就上去了。 所以运动锻炼，特别是负重锻炼，是保住肌肉最好的办法。</p><p><strong>8、45岁后多关注血糖</strong></p><p>血糖指数为 100~125毫克/分升的人，10 年内最易发生糖尿病。专家建议，45 岁后、肥胖者、有糖尿病家族史以及高胆固醇和高血压的人，应多关住。</p><hr><table><thead><tr><th></th><th>联系方式</th></tr></thead><tbody><tr><td>博客</td><td><a href="https://blog.csdn.net/wangyaninglm" target="_blank" rel="noopener">https://blog.csdn.net/wangyaninglm</a></td></tr><tr><td>公众号</td><td><img src="https://img-blog.csdnimg.cn/20190617004819852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9zZWFzb24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td></tr><tr><td>QQ交流群</td><td>593683975</td></tr></tbody></table><pre><code>THE ENDALL RIGHTS RESERVED! </code></pre><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="http://news.medlive.cn/endocr/info-progress/show-136057_46.html" target="_blank" rel="noopener">http://news.medlive.cn/endocr/info-progress/show-136057_46.html</a></p><p><a href="https://vcbeat.top/MTg3ZmU1M2I1NjYzYjIxYjQyMjgwZWFiNDc5OTU4YTk=" target="_blank" rel="noopener">https://vcbeat.top/MTg3ZmU1M2I1NjYzYjIxYjQyMjgwZWFiNDc5OTU4YTk=</a></p><p><a href="http://www.360doc.com/content/19/0405/10/52645714_826555753.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/19/0405/10/52645714_826555753.shtml</a></p><p><a href="https://vcbeat.top/NmZkZWYxNTI2NmQ4OWU1ODZiYzk0ZWFjNWJlODc4MjE=" target="_blank" rel="noopener">https://vcbeat.top/NmZkZWYxNTI2NmQ4OWU1ODZiYzk0ZWFjNWJlODc4MjE=</a></p><p><a href="http://www.sohu.com/a/244722253_100016900" target="_blank" rel="noopener">http://www.sohu.com/a/244722253_100016900</a></p>]]></content>
      
      
      <categories>
          
          <category> 老王和他的IT界朋友们 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oldITWANG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>做项目一定用得到的NLP资源</title>
      <link href="/2019/03/07/%E5%81%9A%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%AE%9A%E7%94%A8%E5%BE%97%E5%88%B0%E7%9A%84NLP%E8%B5%84%E6%BA%90/"/>
      <url>/2019/03/07/%E5%81%9A%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%AE%9A%E7%94%A8%E5%BE%97%E5%88%B0%E7%9A%84NLP%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>原文链接：<a href="https://github.com/fighting41love/funNLP" target="_blank" rel="noopener">https://github.com/fighting41love/funNLP</a></p><hr><p>最近需要从文本中抽取结构化信息，用到了很多github上的包，遂整理了一下，后续会不断更新。</p><p>涉及内容包括：<strong>中英文敏感词、语言检测、中外手机/电话归属地/运营商查询、名字推断性别、手机号抽取、身份证抽取、邮箱抽取、中日文人名库、中文缩写库、拆字词典、词汇情感值、停用词、反动词表、暴恐词表、繁简体转换、英文模拟中文发音、汪峰歌词生成器、职业名称词库、同义词库、反义词库、否定词库、汽车品牌词库、汽车零件词库、连续英文切割、各种中文词向量、公司名字大全、古诗词库、IT词库、财经词库、成语词库、地名词库、历史名人词库、诗词词库、医学词库、饮食词库、法律词库、汽车词库、动物词库、中文聊天语料、中文谣言数据、百度中文问答数据集、句子相似度匹配算法集合、bert资源、文本生成&amp;摘要相关工具、cocoNLP信息抽取工具、国内电话号码正则匹配、清华大学XLORE:中英文跨语言百科知识图谱、清华大学人工智能技术系列报告、自然语言生成、NLU太难了系列、自动对联数据及机器人、用户名黑名单列表、罪名法务名词及分类模型、微信公众号语料、cs224n深度学习自然语言处理课程、中文手写汉字识别、中文自然语言处理 语料/数据集、变量命名神器、分词语料库+代码、任务型对话英文数据集、ASR 语音数据集 + 基于深度学习的中文语音识别系统、笑声检测器、Microsoft多语言数字/单位/如日期时间识别包、中华新华字典数据库及api(包括常用歇后语、成语、词语和汉字)、文档图谱自动生成、SpaCy 中文模型、Common Voice语音识别数据集新版、神经网络关系抽取、基于bert的命名实体识别、关键词(Keyphrase)抽取包pke</strong>。</p><p><strong>1. textfilter: 中英文敏感词过滤</strong>  <a href="https://github.com/observerss/textfilter" target="_blank" rel="noopener">observerss/textfilter</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f = DFAFilter()</span><br><span class="line">&gt;&gt;&gt; f.add(&quot;sexy&quot;)</span><br><span class="line">&gt;&gt;&gt; f.filter(&quot;hello sexy baby&quot;)</span><br><span class="line">hello **** baby</span><br></pre></td></tr></table></figure></p><p>敏感词包括政治、脏话等话题词汇。其原理主要是基于词典的查找（项目中的keyword文件），内容很劲爆。。。</p><p><strong>2. langid：97种语言检测</strong> <a href="https://github.com/saffsd/langid.py" target="_blank" rel="noopener">https://github.com/saffsd/langid.py</a></p><blockquote><p>pip install langid</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import langid</span><br><span class="line">&gt;&gt;&gt; langid.classify(&quot;This is a test&quot;)</span><br><span class="line">(&apos;en&apos;, -54.41310358047485)</span><br></pre></td></tr></table></figure><p><strong>3. langdetect：另一个语言检测</strong><a href="https://code.google.com/archive/p/language-detection/" target="_blank" rel="noopener">https://code.google.com/archive/p/language-detection/</a></p><blockquote><p>pip install langdetect</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from langdetect import detect</span><br><span class="line">from langdetect import detect_langs</span><br><span class="line"></span><br><span class="line">s1 = &quot;本篇博客主要介绍两款语言探测工具，用于区分文本到底是什么语言，&quot;</span><br><span class="line">s2 = &apos;We are pleased to introduce today a new technology&apos;</span><br><span class="line">print(detect(s1))</span><br><span class="line">print(detect(s2))</span><br><span class="line">print(detect_langs(s3))    # detect_langs()输出探测出的所有语言类型及其所占的比例</span><br></pre></td></tr></table></figure><p>输出结果如下： 注：语言类型主要参考的是ISO 639-1语言编码标准，详见<a href="https://baike.baidu.com/item/ISO%20639-1" target="_blank" rel="noopener">ISO 639-1百度百科</a></p><p>跟上一个语言检测比较，准确率低，效率高。</p><p><strong>4. phone 中国手机归属地查询：</strong> <a href="https://github.com/ls0f/phone" target="_blank" rel="noopener">ls0f/phone</a></p><blockquote><p>已集成到 python package <a href="https://github.com/fighting41love/cocoNLP" target="_blank" rel="noopener">cocoNLP</a>中，欢迎试用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from phone import Phone</span><br><span class="line">p  = Phone()</span><br><span class="line">p.find(18100065143)</span><br><span class="line">#return &#123;&apos;phone&apos;: &apos;18100065143&apos;, &apos;province&apos;: &apos;上海&apos;, &apos;city&apos;: &apos;上海&apos;, &apos;zip_code&apos;: &apos;200000&apos;, &apos;area_code&apos;: &apos;021&apos;, &apos;phone_type&apos;: &apos;电信&apos;&#125;</span><br></pre></td></tr></table></figure><p>支持号段: 13<em>,15</em>,18*,14[5,7],17[0,6,7,8]</p><p>记录条数: 360569 (updated:2017年4月)</p><p>作者提供了数据<a href="https://github.com/lovedboy/phone/raw/master/phone/phone.dat" target="_blank" rel="noopener">phone.dat</a> 方便非python用户Load数据。</p><p><strong>5. phone国际手机、电话归属地查询：</strong><a href="https://github.com/AfterShip/phone" target="_blank" rel="noopener">AfterShip/phone</a></p><blockquote><p>npm install phone</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import phone from &apos;phone&apos;;</span><br><span class="line">phone(&apos;+852 6569-8900&apos;); // return [&apos;+85265698900&apos;, &apos;HKG&apos;]</span><br><span class="line">phone(&apos;(817) 569-8900&apos;); // return [&apos;+18175698900, &apos;USA&apos;]</span><br></pre></td></tr></table></figure><p><strong>6. ngender 根据名字判断性别：</strong><a href="https://github.com/observerss/ngender" target="_blank" rel="noopener">observerss/ngender</a> 基于朴素贝叶斯计算的概率</p><blockquote><p>pip install ngender</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import ngender</span><br><span class="line">&gt;&gt;&gt; ngender.guess(&apos;赵本山&apos;)</span><br><span class="line">(&apos;male&apos;, 0.9836229687547046)</span><br><span class="line">&gt;&gt;&gt; ngender.guess(&apos;宋丹丹&apos;)</span><br><span class="line">(&apos;female&apos;, 0.9759486128949907)</span><br></pre></td></tr></table></figure><p><strong>7. 抽取email的正则表达式</strong></p><blockquote><p>已集成到 python package <a href="https://github.com/fighting41love/cocoNLP" target="_blank" rel="noopener">cocoNLP</a>中，欢迎试用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">email_pattern = &apos;^[*#\u4e00-\u9fa5 a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]&#123;2,6&#125;$&apos;</span><br><span class="line">emails = re.findall(email_pattern, text, flags=0)</span><br></pre></td></tr></table></figure><p><strong>8. 抽取phone_number的正则表达式</strong></p><blockquote><p>已集成到 python package <a href="https://github.com/fighting41love/cocoNLP" target="_blank" rel="noopener">cocoNLP</a>中，欢迎试用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cellphone_pattern = &apos;^((13[0-9])|(14[0-9])|(15[0-9])|(17[0-9])|(18[0-9]))\d&#123;8&#125;$&apos;</span><br><span class="line">phoneNumbers = re.findall(cellphone_pattern, text, flags=0)</span><br></pre></td></tr></table></figure><p><strong>9. 抽取身份证号的正则表达式</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IDCards_pattern = r&apos;^([1-9]\d&#123;5&#125;[12]\d&#123;3&#125;(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])\d&#123;3&#125;[0-9xX])$&apos;</span><br><span class="line">IDs = re.findall(IDCards_pattern, text, flags=0)</span><br></pre></td></tr></table></figure></p><p><strong>10.  人名语料库：</strong> <a href="https://github.com/wainshine/Chinese-Names-Corpus" target="_blank" rel="noopener">wainshine/Chinese-Names-Corpus</a></p><blockquote><p>人名抽取功能 python package <a href="https://github.com/fighting41love/cocoNLP" target="_blank" rel="noopener">cocoNLP</a>，欢迎试用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">中文（现代、古代）名字、日文名字、中文的姓和名、称呼（大姨妈、小姨妈等）、英文-&gt;中文名字（李约翰）、成语词典</span><br></pre></td></tr></table></figure><p>（可用于中文分词、姓名识别）</p><p><strong>11. 中文缩写库：</strong><a href="https://github.com/zhangyics/Chinese-abbreviation-dataset/blob/master/dev_set.txt" target="_blank" rel="noopener">github</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">全国人大: 全国/n 人民/n 代表大会/n</span><br><span class="line">中国: 中华人民共和国/ns</span><br><span class="line">女网赛: 女子/n 网球/n 比赛/vn</span><br></pre></td></tr></table></figure></p><p><strong>12. 汉语拆字词典：</strong><a href="https://github.com/kfcd/chaizi" target="_blank" rel="noopener">kfcd/chaizi</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">漢字拆法 (一)拆法 (二)拆法 (三)</span><br><span class="line">拆手 斥扌 斥才 斥</span><br></pre></td></tr></table></figure></p><p><strong>13. 词汇情感值：</strong><a href="https://github.com/rainarch/SentiBridge/blob/master/Entity_Emotion_Express/CCF_data/pair_mine_result" target="_blank" rel="noopener">rainarch/SentiBridge</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">山泉水充沛0.4007045665410.370067395878</span><br><span class="line">视野        宽广0.3057627289320.325320747491</span><br><span class="line">大峡谷惊险0.3121379065170.378594957281</span><br></pre></td></tr></table></figure></p><p><strong>14. 中文词库、停用词、敏感词</strong> <a href="https://github.com/fighting41love/Chinese_from_dongxiexidian" target="_blank" rel="noopener">dongxiexidian/Chinese</a></p><p>此package的敏感词库分类更细：</p><p><a href="https://github.com/fighting41love/funNLP/tree/master/data/敏感词库" target="_blank" rel="noopener">反动词库</a>， <a href="https://github.com/fighting41love/funNLP/tree/master/data/敏感词库" target="_blank" rel="noopener">敏感词库表统计</a>， <a href="https://github.com/fighting41love/funNLP/tree/master/data/敏感词库" target="_blank" rel="noopener">暴恐词库</a>， <a href="https://github.com/fighting41love/funNLP/tree/master/data/敏感词库" target="_blank" rel="noopener">民生词库</a>， <a href="https://github.com/fighting41love/funNLP/tree/master/data/敏感词库" target="_blank" rel="noopener">色情词库</a></p><p><strong>15. 汉字转拼音：</strong><a href="https://github.com/mozillazg/python-pinyin" target="_blank" rel="noopener">mozillazg/python-pinyin</a></p><p>文本纠错会用到</p><p><strong>16. 中文繁简体互转：</strong><a href="https://github.com/skydark/nstools/tree/master/zhtools" target="_blank" rel="noopener">skydark/nstools</a></p><p><strong>17. 英文模拟中文发音引擎</strong> funny chinese text to speech enginee：<a href="https://github.com/tinyfool/ChineseWithEnglish" target="_blank" rel="noopener">tinyfool/ChineseWithEnglish</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">say wo i ni</span><br><span class="line">#说：我爱你</span><br></pre></td></tr></table></figure></p><p>相当于用英文音标，模拟中文发音。</p><p><strong>18. 汪峰歌词生成器：</strong><a href="https://github.com/phunterlau/wangfeng-rnn" target="_blank" rel="noopener">phunterlau/wangfeng-rnn</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我在这里中的夜里</span><br><span class="line">就像一场是一种生命的意旪</span><br><span class="line">就像我的生活变得在我一样</span><br><span class="line">可我们这是一个知道</span><br><span class="line">我只是一天你会怎吗</span><br></pre></td></tr></table></figure></p><p><strong>19. 同义词库、反义词库、否定词库：</strong><a href="https://github.com/guotong1988/chinese_dictionary" target="_blank" rel="noopener">guotong1988/chinese_dictionary</a></p><p><strong>20. 无空格英文串分割、抽取单词：</strong><a href="https://github.com/keredson/wordninja" target="_blank" rel="noopener">wordinja</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import wordninja</span><br><span class="line">&gt;&gt;&gt; wordninja.split(&apos;derekanderson&apos;)</span><br><span class="line">[&apos;derek&apos;, &apos;anderson&apos;]</span><br><span class="line">&gt;&gt;&gt; wordninja.split(&apos;imateapot&apos;)</span><br><span class="line">[&apos;im&apos;, &apos;a&apos;, &apos;teapot&apos;]</span><br></pre></td></tr></table></figure></p><p><strong>21. IP地址正则表达式：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)</span><br></pre></td></tr></table></figure></p><p><strong>22. 腾讯QQ号正则表达式：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1-9]([0-9]&#123;5,11&#125;)</span><br></pre></td></tr></table></figure></p><p><strong>23. 国内固话号码正则表达式：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0-9-()（）]&#123;7,18&#125;</span><br></pre></td></tr></table></figure></p><p><strong>24. 用户名正则表达式：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[A-Za-z0-9_\-\u4e00-\u9fa5]+</span><br></pre></td></tr></table></figure></p><p><strong>25. 汽车品牌、汽车零件相关词汇：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">见本repo的data文件 [data](https://github.com/fighting41love/funNLP/tree/master/data)</span><br></pre></td></tr></table></figure></p><p><strong>26. 时间抽取：</strong></p><blockquote><p>已集成到 python package <a href="https://github.com/fighting41love/cocoNLP" target="_blank" rel="noopener">cocoNLP</a>中，欢迎试用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">在2016年6月7日9:44执行測試，结果如下</span><br><span class="line"></span><br><span class="line">Hi，all。下周一下午三点开会</span><br><span class="line"></span><br><span class="line">&gt;&gt; 2016-06-13 15:00:00-false</span><br><span class="line"></span><br><span class="line">周一开会</span><br><span class="line"></span><br><span class="line">&gt;&gt; 2016-06-13 00:00:00-true</span><br><span class="line"></span><br><span class="line">下下周一开会</span><br><span class="line"></span><br><span class="line">&gt;&gt; 2016-06-20 00:00:00-true</span><br></pre></td></tr></table></figure><p><a href="https://github.com/shinyke/Time-NLP" target="_blank" rel="noopener">java version</a></p><p><a href="https://github.com/zhanzecheng/Time_NLP" target="_blank" rel="noopener">python version</a></p><p><strong>27. 各种中文词向量：</strong> <a href="https://github.com/Embedding/Chinese-Word-Vectors" target="_blank" rel="noopener">github repo</a></p><p>中文词向量大全</p><p><strong>28. 公司名字大全：</strong> <a href="https://github.com/wainshine/Company-Names-Corpus" target="_blank" rel="noopener">github repo</a></p><p><strong>29. 古诗词库：</strong> <a href="https://github.com/panhaiqi/AncientPoetry" target="_blank" rel="noopener">github repo</a> <a href="https://github.com/chinese-poetry/chinese-poetry" target="_blank" rel="noopener">更全的古诗词库</a></p><p><strong>30. THU整理的词库：</strong> <a href="http://thuocl.thunlp.org/sendMessage" target="_blank" rel="noopener">link</a></p><p>已整理到本repo的data文件夹中.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IT词库、财经词库、成语词库、地名词库、历史名人词库、诗词词库、医学词库、饮食词库、法律词库、汽车词库、动物词库</span><br></pre></td></tr></table></figure></p><p><strong>31. 中文聊天语料</strong> <a href="https://github.com/codemayq/chaotbot_corpus_Chinese" target="_blank" rel="noopener">link</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">该库搜集了包含:豆瓣多轮, PTT八卦语料, 青云语料, 电视剧对白语料, 贴吧论坛回帖语料,微博语料,小黄鸡语料</span><br></pre></td></tr></table></figure></p><p><strong>32. 中文谣言数据:</strong> <a href="https://github.com/thunlp/Chinese_Rumor_Dataset" target="_blank" rel="noopener">github</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">该数据文件中，每一行为一条json格式的谣言数据，字段释义如下：</span><br><span class="line"></span><br><span class="line">rumorCode: 该条谣言的唯一编码，可以通过该编码直接访问该谣言举报页面。</span><br><span class="line">title: 该条谣言被举报的标题内容</span><br><span class="line">informerName: 举报者微博名称</span><br><span class="line">informerUrl: 举报者微博链接</span><br><span class="line">rumormongerName: 发布谣言者的微博名称</span><br><span class="line">rumormongerUr: 发布谣言者的微博链接</span><br><span class="line">rumorText: 谣言内容</span><br><span class="line">visitTimes: 该谣言被访问次数</span><br><span class="line">result: 该谣言审查结果</span><br><span class="line">publishTime: 该谣言被举报时间</span><br></pre></td></tr></table></figure></p><p><strong>33. 情感波动分析：</strong><a href="https://github.com/CasterWx/python-girlfriend-mood/" target="_blank" rel="noopener">github</a></p><p>词库已整理到本repo的data文件夹中.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本repo项目是一个通过与人对话获得其情感值波动图谱, 内用词库在data文件夹中.</span><br></pre></td></tr></table></figure></p><p><strong>34. 百度中文问答数据集</strong>：<a href="https://pan.baidu.com/s/1QUsKcFWZ7Tg1dk_AbldZ1A" target="_blank" rel="noopener">链接</a> 提取码: 2dva</p><p><strong>35. 句子、QA相似度匹配:MatchZoo</strong>  <a href="https://github.com/NTMC-Community/MatchZoo" target="_blank" rel="noopener">github</a></p><p>文本相似度匹配算法的集合，包含多个深度学习的方法，值得尝试。</p><p><strong>36. bert资源：</strong></p><ul><li><p>Bert原作者的slides: <a href="https://pan.baidu.com/s/1OSPsIu2oh1iJ-bcXoDZpJQ" target="_blank" rel="noopener">link</a><br> 提取码: iarj </p></li><li><p>文本分类实践: <a href="https://github.com/NLPScott/bert-Chinese-classification-task" target="_blank" rel="noopener">github</a></p></li><li><p>bert tutorial文本分类教程: <a href="https://github.com/Socialbird-AILab/BERT-Classification-Tutorial" target="_blank" rel="noopener">github</a></p></li><li><p>bert pytorch实现:  <a href="https://github.com/huggingface/pytorch-pretrained-BERT" target="_blank" rel="noopener">github</a></p></li><li><p>bert用于中文命名实体识别 tensorflow版本: <a href="https://github.com/macanv/BERT-BiLSTM-CRF-NER" target="_blank" rel="noopener">github</a></p></li><li><p>bert 基于 keras 的封装分类标注框架 Kashgari，几分钟即可搭建一个分类或者序列标注模型: <a href="https://github.com/BrikerMan/Kashgari" target="_blank" rel="noopener">github</a></p></li><li><p>bert、ELMO的图解： <a href="https://jalammar.github.io/illustrated-bert/" target="_blank" rel="noopener">github</a></p></li><li><p>BERT: Pre-trained models and downstream applications: <a href="https://github.com/asyml/texar/tree/master/examples/bert" target="_blank" rel="noopener">github</a></p></li></ul><p><strong>37. Texar - Toolkit for Text Generation and Beyond</strong>: <a href="https://github.com/asyml/texar" target="_blank" rel="noopener">github</a></p><p>基于Tensorflow的开源工具包，旨在支持广泛的机器学习，特别是文本生成任务，如机器翻译、对话、摘要、内容处置、语言建模等</p><p><strong>38. 中文事件抽取：</strong> <a href="https://github.com/liuhuanyong/ComplexEventExtraction" target="_blank" rel="noopener">github</a></p><p>中文复合事件抽取，包括条件事件、因果事件、顺承事件、反转事件等事件抽取，并形成事理图谱。</p><p><strong>39. cocoNLP:</strong> <a href="https://github.com/fighting41love/cocoNLP" target="_blank" rel="noopener">github</a></p><p>人名、地址、邮箱、手机号、手机归属地 等信息的抽取，rake短语抽取算法。</p><blockquote><p>pip install cocoNLP</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from cocoNLP.extractor import extractor</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; ex = extractor()</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; text = &apos;急寻特朗普，男孩，于2018年11月27号11时在陕西省安康市汉滨区走失。丢失发型短发，...如有线索，请迅速与警方联系：18100065143，132-6156-2938，baizhantang@sina.com.cn 和yangyangfuture at gmail dot com&apos;</span><br><span class="line"></span><br><span class="line"># 抽取邮箱</span><br><span class="line">&gt;&gt;&gt; emails = ex.extract_email(text)</span><br><span class="line">&gt;&gt;&gt; print(emails)</span><br><span class="line"></span><br><span class="line">[&apos;baizhantang@sina.com.cn&apos;, &apos;yangyangfuture@gmail.com.cn&apos;]</span><br><span class="line"># 抽取手机号</span><br><span class="line">&gt;&gt;&gt; cellphones = ex.extract_cellphone(text,nation=&apos;CHN&apos;)</span><br><span class="line">&gt;&gt;&gt; print(cellphones)</span><br><span class="line"></span><br><span class="line">[&apos;18100065143&apos;, &apos;13261562938&apos;]</span><br><span class="line"># 抽取手机归属地、运营商</span><br><span class="line">&gt;&gt;&gt; cell_locs = [ex.extract_cellphone_location(cell,&apos;CHN&apos;) for cell in cellphones]</span><br><span class="line">&gt;&gt;&gt; print(cell_locs)</span><br><span class="line"></span><br><span class="line">cellphone_location [&#123;&apos;phone&apos;: &apos;18100065143&apos;, &apos;province&apos;: &apos;上海&apos;, &apos;city&apos;: &apos;上海&apos;, &apos;zip_code&apos;: &apos;200000&apos;, &apos;area_code&apos;: &apos;021&apos;, &apos;phone_type&apos;: &apos;电信&apos;&#125;]</span><br><span class="line"># 抽取地址信息</span><br><span class="line">&gt;&gt;&gt; locations = ex.extract_locations(text)</span><br><span class="line">&gt;&gt;&gt; print(locations)</span><br><span class="line">[&apos;陕西省安康市汉滨区&apos;, &apos;安康市汉滨区&apos;, &apos;汉滨区&apos;]</span><br><span class="line"># 抽取时间点</span><br><span class="line">&gt;&gt;&gt; times = ex.extract_time(text)</span><br><span class="line">&gt;&gt;&gt; print(times)</span><br><span class="line">time &#123;&quot;type&quot;: &quot;timestamp&quot;, &quot;timestamp&quot;: &quot;2018-11-27 11:00:00&quot;&#125;</span><br><span class="line"># 抽取人名</span><br><span class="line">&gt;&gt;&gt; name = ex.extract_name(text)</span><br><span class="line">&gt;&gt;&gt; print(name)</span><br><span class="line">特朗普</span><br></pre></td></tr></table></figure><p><strong>40. 国内电话号码正则匹配（三大运营商+虚拟等）:</strong> <a href="https://github.com/VincentSit/ChinaMobilePhoneNumberRegex" target="_blank" rel="noopener">github</a></p><p><strong>41. 清华大学XLORE:中英文跨语言百科知识图谱:</strong> <a href="https://xlore.org/download.html" target="_blank" rel="noopener">link</a><br>上述链接中包含了所有实体及关系的TTL文件，更多数据将在近期发布。<br>概念，实例，属性和上下位关系数目</p><table><thead><tr><th></th><th>百度</th><th>中文维基</th><th>英文维基</th><th>总数</th></tr></thead><tbody><tr><td>概念数量</td><td>32,009</td><td>150,241</td><td>326,518</td><td>508,768</td></tr><tr><td>实例数量</td><td>1,629,591</td><td>640,622</td><td>1,235,178</td><td>3,505,391</td></tr><tr><td>属性数量</td><td>157,370</td><td>45,190</td><td>26,723</td><td>229.283</td></tr><tr><td>InstanceOf</td><td>7,584,931</td><td>1,449,925</td><td>3,032,515</td><td>12,067,371</td></tr><tr><td>SubClassOf</td><td>2,784</td><td>191,577</td><td>555,538</td><td>749,899</td></tr></tbody></table><p>跨语言连接（概念/实例）</p><table><thead><tr><th></th><th>百度</th><th>中文维基</th><th>英文维基</th></tr></thead><tbody><tr><td>百度</td><td>-</td><td>10,216/336,890</td><td>4,846/303,108</td></tr><tr><td>中文维基</td><td>10,216/336,890</td><td>-</td><td>28,921/454,579</td></tr><tr><td>英文维基</td><td>4,846/303,108</td><td>28,921/454,579</td><td>-</td></tr></tbody></table><p><strong>42. 清华大学人工智能技术系列报告：</strong> <a href="https://reports.aminer.cn" target="_blank" rel="noopener">link</a><br>每年会出AI领域相关的报告，内容包含</p><ul><li>自然语言处理 <a href="https://static.aminer.cn/misc/article/nlp.pdf" target="_blank" rel="noopener">link</a></li><li>知识图谱 <a href="https://www.aminer.cn/research_report/5c3d5a8709%20e961951592a49d?download=true&amp;pathname=knowledgegraph.pdf" target="_blank" rel="noopener">link</a></li><li>数据挖掘 <a href="https://www.aminer.cn/research_report/5c3d5a5cecb160952fa10b76?download=true&amp;pathname=datamining.pdf" target="_blank" rel="noopener">link</a></li><li>自动驾驶 <a href="https://static.aminer.cn/misc/article/selfdriving.pdf" target="_blank" rel="noopener">link</a></li><li>机器翻译 <a href="https://static.aminer.cn/misc/article/translation.pdf" target="_blank" rel="noopener">link</a></li><li>区块链 <a href="https://static.aminer.cn/misc/article/blockchain_public.pdf" target="_blank" rel="noopener">link</a></li><li>机器人 <a href="https://static.aminer.cn/misc/article/robotics_beta.pdf" target="_blank" rel="noopener">link</a></li><li>计算机图形学 <a href="https://static.aminer.cn/misc/article/cg.pdf" target="_blank" rel="noopener">link</a></li><li>3D打印 <a href="https://static.aminer.cn/misc/article/3d.pdf" target="_blank" rel="noopener">link</a></li><li>人脸识别 <a href="https://static.aminer.cn/misc/article/facerecognition.pdf" target="_blank" rel="noopener">link</a></li><li>人工智能芯片 <a href="https://static.aminer.cn/misc/article/aichip.pdf" target="_blank" rel="noopener">link</a></li><li>等等</li></ul><p><strong>43.自然语言生成方面:</strong><br><a href="https://ehudreiter.com" target="_blank" rel="noopener">Ehud Reiter教授的博客</a>  北大万小军教授强力推荐，该博客对NLG技术、评价与应用进行了深入的探讨与反思。<br><a href="https://github.com/ChenChengKuan/awesome-text-generation" target="_blank" rel="noopener">文本生成相关资源大列表</a><br><a href="https://drive.google.com/file/d/1Mdna3q986k6OoJNsfAHznTtnMAEVzv5z/view" target="_blank" rel="noopener">自然语言生成：让机器掌握自动创作的本领 - 开放域对话生成及在微软小冰中的实践</a><br><a href="https://github.com/harvardnlp/Talk-Latent/blob/master/main.pdf" target="_blank" rel="noopener">文本生成控制</a>  </p><p><strong>44.:</strong><br><a href="https://github.com/fxsjy/jieba" target="_blank" rel="noopener">jieba</a>和<a href="https://github.com/hankcs/pyhanlp" target="_blank" rel="noopener">hanlp</a>就不必介绍了吧。</p><p><strong>45.NLP太难了系列:</strong> <a href="https://github.com/fighting41love/hardNLP" target="_blank" rel="noopener">github</a></p><ul><li>来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。” ​​​  </li><li>来到儿子等校车的地方，邓超对孙俪说：“我也想等等等等等过的那辆车。”  </li><li>赵敏说：我也想控忌忌己不想无忌。</li><li>你也想犯范范范玮琪犯过的错吗  </li><li>对叙打击是一次性行为？</li></ul><p><strong>46.自动对联数据及机器人:</strong><br><a href="https://github.com/wb14123/couplet-dataset" target="_blank" rel="noopener">70万对联数据 link</a><br><a href="https://github.com/wb14123/seq2seq-couplet" target="_blank" rel="noopener">代码 link</a>  </p><table><thead><tr><th>上联</th><th>下联  </th></tr></thead><tbody><tr><td>殷勤怕负三春意</td><td>潇洒难书一字愁</td></tr><tr><td>如此清秋何吝酒</td><td>这般明月不须钱</td></tr></tbody></table><p><strong>47.用户名黑名单列表：</strong> <a href="https://github.com/marteinn/The-Big-Username-Blacklist" target="_blank" rel="noopener">github</a><br>包含了用户名禁用列表，比如: <a href="https://github.com/marteinn/The-Big-Username-Blacklist/blob/master/list_raw.txt" target="_blank" rel="noopener">link</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">administrator</span><br><span class="line">administration</span><br><span class="line">autoconfig</span><br><span class="line">autodiscover</span><br><span class="line">broadcasthost</span><br><span class="line">domain</span><br><span class="line">editor</span><br><span class="line">guest</span><br><span class="line">host</span><br><span class="line">hostmaster</span><br><span class="line">info</span><br><span class="line">keybase.txt</span><br><span class="line">localdomain</span><br><span class="line">localhost</span><br><span class="line">master</span><br><span class="line">mail</span><br><span class="line">mail0</span><br><span class="line">mail1</span><br></pre></td></tr></table></figure></p><p><strong>48.罪名法务名词及分类模型:</strong>   <a href="https://github.com/liuhuanyong/CrimeKgAssitant" target="_blank" rel="noopener">github</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">包含856项罪名知识图谱, 基于280万罪名训练库的罪名预测,基于20W法务问答对的13类问题分类与法律资讯问答功能</span><br></pre></td></tr></table></figure></p><p><strong>49.微信公众号语料:</strong> <a href="https://github.com/nonamestreet/weixin_public_corpus" target="_blank" rel="noopener">github</a></p><p>3G语料，包含部分网络抓取的微信公众号的文章，已经去除HTML，只包含了纯文本。每行一篇，是JSON格式，name是微信公众号名字，account是微信公众号ID，title是题目，content是正文</p><p><strong>50.cs224n深度学习自然语言处理课程：</strong><a href="http://web.stanford.edu/class/cs224n/" target="_blank" rel="noopener">link</a>  </p><ul><li>课程中模型的pytorch实现 <a href="https://github.com/DSKSD/DeepNLP-models-Pytorch" target="_blank" rel="noopener">link</a></li><li>面向深度学习研究人员的自然语言处理实例教程 <a href="https://github.com/graykode/nlp-tutorial" target="_blank" rel="noopener">link</a></li></ul><p><strong>51.中文手写汉字识别：</strong><a href="https://github.com/chizhanyuefeng/Chinese_OCR_CNN-RNN-CTC" target="_blank" rel="noopener">github</a></p><p><strong>52.中文自然语言处理 语料/数据集：</strong><a href="https://github.com/SophonPlus/ChineseNlpCorpus" target="_blank" rel="noopener">github</a><br><a href="https://github.com/thunlp/THUOCL" target="_blank" rel="noopener">竞品：THUOCL（THU Open Chinese Lexicon）中文词库</a></p><p><strong>53.变量命名神器：</strong><a href="https://github.com/unbug/codelf" target="_blank" rel="noopener">github</a> <a href="https://unbug.github.io/codelf/" target="_blank" rel="noopener">link</a></p><p><strong>54.分词语料库+代码：</strong><a href="https://pan.baidu.com/s/1MXZONaLgeaw0_TxZZDAIYQ" target="_blank" rel="noopener">百度网盘链接</a>   </p><ul><li>提取码: pea6 </li><li><a href="https://github.com/GlassyWing/bi-lstm-crf" target="_blank" rel="noopener">keras实现的基于Bi-LSTM + CRF的中文分词+词性标注</a></li><li><a href="https://github.com/GlassyWing/transformer-word-segmenter" target="_blank" rel="noopener">基于Universal Transformer + CRF 的中文分词和词性标注</a></li><li><a href="https://github.com/yaoguangluo/NeroParser" target="_blank" rel="noopener">快速神经网络分词包 java version</a></li></ul><p><strong>55. NLP新书推荐《Natural Language Processing》by Jacob Eisenstein：</strong> <a href="https://github.com/jacobeisenstein/gt-nlp-class/blob/master/notes/eisenstein-nlp-notes.pdf" target="_blank" rel="noopener">link</a></p><p><strong>56. 任务型对话英文数据集：</strong>   <a href="https://github.com/AtmaHou/Task-Oriented-Dialogue-Dataset-Survey" target="_blank" rel="noopener">github</a><br>【最全任务型对话数据集】主要介绍了一份任务型对话数据集大全，这份数据集大全涵盖了到目前在任务型对话领域的所有常用数据集的主要信息。此外，为了帮助研究者更好的把握领域进展的脉络，我们以Leaderboard的形式给出了几个数据集上的State-of-the-art实验结果。</p><p><strong>57. ASR 语音数据集 + 基于深度学习的中文语音识别系统：</strong>  <a href="https://github.com/nl8590687/ASRT_SpeechRecognition" target="_blank" rel="noopener">github</a></p><ul><li><p>Data Sets 数据集</p><ul><li><p><strong>清华大学THCHS30中文语音数据集</strong></p><p>data_thchs30.tgz<br><a href="http://cn-mirror.openslr.org/resources/18/data_thchs30.tgz" target="_blank" rel="noopener">OpenSLR国内镜像</a><br><a href="http://www.openslr.org/resources/18/data_thchs30.tgz" target="_blank" rel="noopener">OpenSLR国外镜像</a></p><p>test-noise.tgz<br><a href="http://cn-mirror.openslr.org/resources/18/test-noise.tgz" target="_blank" rel="noopener">OpenSLR国内镜像</a><br><a href="http://www.openslr.org/resources/18/test-noise.tgz" target="_blank" rel="noopener">OpenSLR国外镜像</a></p><p>resource.tgz<br><a href="http://cn-mirror.openslr.org/resources/18/resource.tgz" target="_blank" rel="noopener">OpenSLR国内镜像</a><br><a href="http://www.openslr.org/resources/18/resource.tgz" target="_blank" rel="noopener">OpenSLR国外镜像</a></p></li><li><p><strong>Free ST Chinese Mandarin Corpus</strong> </p><p>ST-CMDS-20170001_1-OS.tar.gz<br><a href="http://cn-mirror.openslr.org/resources/38/ST-CMDS-20170001_1-OS.tar.gz" target="_blank" rel="noopener">OpenSLR国内镜像</a><br><a href="http://www.openslr.org/resources/38/ST-CMDS-20170001_1-OS.tar.gz" target="_blank" rel="noopener">OpenSLR国外镜像</a></p></li><li><p><strong>AIShell-1 开源版数据集</strong> </p><p>data_aishell.tgz<br><a href="http://cn-mirror.openslr.org/resources/33/data_aishell.tgz" target="_blank" rel="noopener">OpenSLR国内镜像</a><br><a href="http://www.openslr.org/resources/33/data_aishell.tgz" target="_blank" rel="noopener">OpenSLR国外镜像</a></p></li></ul><p>注：数据集解压方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar xzf data_aishell.tgz</span><br><span class="line">$ cd data_aishell/wav</span><br><span class="line">$ for tar in *.tar.gz;  do tar xvf $tar; done</span><br></pre></td></tr></table></figure><ul><li><p><strong>Primewords Chinese Corpus Set 1</strong> </p><p>primewords_md_2018_set1.tar.gz<br><a href="http://cn-mirror.openslr.org/resources/47/primewords_md_2018_set1.tar.gz" target="_blank" rel="noopener">OpenSLR国内镜像</a><br><a href="http://www.openslr.org/resources/47/primewords_md_2018_set1.tar.gz" target="_blank" rel="noopener">OpenSLR国外镜像</a></p></li></ul></li></ul><p><strong>58. 笑声检测器：</strong>  <a href="https://github.com/ideo/LaughDetection" target="_blank" rel="noopener">github</a></p><p><strong>59. Microsoft多语言数字/单位/如日期时间识别包：</strong> [github](<a href="https://github.com/Microsoft/Recognizers-Text" target="_blank" rel="noopener">https://github.com/Microsoft/Recognizers-Text</a></p><p><strong>60. chinese-xinhua 中华新华字典数据库及api，包括常用歇后语、成语、词语和汉字</strong> <a href="https://github.com/pwxcoo/chinese-xinhua" target="_blank" rel="noopener">github</a></p><p><strong>61. 文档图谱自动生成</strong> <a href="https://github.com/liuhuanyong/TextGrapher" target="_blank" rel="noopener">github</a>  </p><ul><li>TextGrapher - Text Content Grapher based on keyinfo extraction by NLP method。输入一篇文档，将文档进行关键信息提取，进行结构化，并最终组织成图谱组织形式，形成对文章语义信息的图谱化展示</li></ul><p><strong>62. SpaCy 中文模型</strong> <a href="https://github.com/howl-anderson/Chinese_models_for_SpaCy" target="_blank" rel="noopener">github</a>  </p><ul><li>包含Parser, NER, 语法树等功能。有一些英文package使用spacy的英文模型的，如果要适配中文，可能需要使用spacy中文模型。</li></ul><p><strong>63. Common Voice语音识别数据集新版</strong>  <a href="https://voice.mozilla.org/en/datasets" target="_blank" rel="noopener">link</a>  </p><ul><li>包括来自42,000名贡献者超过1,400小时的语音样本，涵github</li></ul><p><strong>64. 神经网络关系抽取 pytorch</strong>  <a href="https://github.com/ShulinCao/OpenNRE-PyTorch" target="_blank" rel="noopener">github</a>  </p><ul><li>暂不支持中文</li></ul><p><strong>65. 基于bert的命名实体识别 pytorch</strong>  <a href="https://github.com/Kyubyong/bert_ner" target="_blank" rel="noopener">github</a>  </p><ul><li>暂不支持中文</li></ul><p><strong>66. 关键词(Keyphrase)抽取包 pke</strong>  <a href="https://github.com/boudinfl/pke" target="_blank" rel="noopener">github</a><br><a href="http://aclweb.org/anthology/C16-2015" target="_blank" rel="noopener">pke: an open source python-based keyphrase extraction toolkit</a>  </p><ul><li>暂不支持中文，我于近期对其进行修改，使其适配中文。<br>请关注我的github动态，谢谢！  </li></ul><p><strong>67. 基于医疗领域知识图谱的问答系统</strong>  <a href="https://github.com/zhihao-chen/QASystemOnMedicalGraph" target="_blank" rel="noopener">github</a>  </p><ul><li>该repo参考了<a href="https://github.com/liuhuanyong/QASystemOnMedicalKG" target="_blank" rel="noopener">github</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 自然语言处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLP 太难了</title>
      <link href="/2019/03/07/NLU%EF%BC%88Natural%20Language%20Understanding%EF%BC%89%E5%A4%AA%E9%9A%BE%E4%BA%86/"/>
      <url>/2019/03/07/NLU%EF%BC%88Natural%20Language%20Understanding%EF%BC%89%E5%A4%AA%E9%9A%BE%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>原文链接：<a href="https://github.com/fighting41love/hardNLU" target="_blank" rel="noopener">https://github.com/fighting41love/hardNLU</a></p><hr><h1 id="NLU-is-hard"><a href="#NLU-is-hard" class="headerlink" title="NLU is hard!!!!!!"></a>NLU is hard!!!!!!</h1><p>一直关注<a href="https://weibo.com/liuqunmttodeath?refer_flag=1001030103_" target="_blank" rel="noopener">刘群老师</a>的微博，常常看见他分享的一些好玩的#自然语言理解太难了#。<br>遂整理了NLU实在是太难了系列语句，大家一笑无妨。这里列举了一些关于分词、实体识别、知识图谱相关的语句，按照难度从低到高排列，最高难度的放在了最后（需要强大的知识图谱哦，欢迎大家把答案开在issue里）。</p><h1 id="难度：※※-两颗星"><a href="#难度：※※-两颗星" class="headerlink" title="难度：※※ 两颗星"></a>难度：※※ 两颗星</h1><ol><li>来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”</li><li>来到儿子等校车的地方，邓超对孙俪说：“我也想等等等等等过的那辆车。”</li><li>赵敏说：我也想控忌忌己不想无忌。</li><li>你也想犯范范范玮琪犯过的错吗</li><li>对叙打击是一次性行为？<br><img src="https://upload-images.jianshu.io/upload_images/2528310-a0314dadb85937fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>《绿林俊杰》–林俊杰做错了什么？为什么要绿他<br><img src="https://upload-images.jianshu.io/upload_images/2528310-3d2e842b069d632b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"><h1 id="难度：※※※-三颗星"><a href="#难度：※※※-三颗星" class="headerlink" title="难度：※※※ 三颗星"></a>难度：※※※ 三颗星</h1></li><li>写给卖豆芽的对联： 长长长长长长长，长长长长长长长。(solution: changzhangchangzhangchangchangzhang zhangchangzhangchangzhangzhangchang,zhangchangchangzhangchangzhangchang，zhangchangzhangchangzhangchangchang)</li><li>季姬寂，集鸡，鸡即棘鸡。棘鸡饥叽，季姬及箕稷济鸡。鸡既济，跻姬笈，季姬忌，急咭鸡，鸡急，继圾几，季姬急，即籍箕击鸡，箕疾击几伎，伎即齑，鸡叽集几基，季姬急极屐击鸡，鸡既殛，季姬激，即记《季姬击鸡记》。</li><li>石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。施氏视是十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏使侍拭石室。石室拭，氏始试食是十狮尸。食时，始识是十狮尸，实十石狮尸。试释是事。《施氏食狮史》</li><li>去商店买东西一算账1001块，小王对老板说：“一块钱算了。” 老板说好的。于是小王放下一块钱就走了，老板死命追了小王五条街又要小王付了1000，小王感慨：#自然语言理解太难了# ​</li><li>“碳碳键键能能否否定定律一” ​</li><li>书《无线电法国别研究》<br><img src="https://upload-images.jianshu.io/upload_images/2528310-a80a498f5e42ebd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>要去见投资人，出门时，发现车钥匙下面压了一张员工的小字条，写着“老板，加油！”，瞬间感觉好有温度，当时心理就泪奔了。心里默默发誓：我一定会努力的！ 车开了15分钟后，没油了。。。<br><img src="https://upload-images.jianshu.io/upload_images/2528310-2232cd627f8ec39b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>他快抱不起儿子了，因为他太胖了</li><li>中文里面“大胜”和“大败”意思相同，刚发现英文里面也有类似的现象：valuable和invaluable都是表示非常有价值的意思</li><li>How can I help you? 我能帮您什么？我怎么可以帮你！米国某酒店前台翻译机<br><img src="https://upload-images.jianshu.io/upload_images/2528310-13a1aacd324fd1c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"> ​</li><li>一家名为“宝鸡有一群怀揣着梦想的少年相信在牛大叔的带领下会创造生命的奇迹网络科技有限公司”走红网络，该公司全名长达39个字，还是一句主谓宾齐全的句子。宝鸡工商部门表示，该公司属合法注册，但名字太长不利于刻公章开发票<br><img src="https://upload-images.jianshu.io/upload_images/2528310-6b60dbfc8ca2ad7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>“一位友好的哥谭市民” “一位友好/的哥/谭市民”<br><img src="https://upload-images.jianshu.io/upload_images/2528310-fcec3a4883bf8bb8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/2528310-cae0e2ba1e84dd74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"><h1 id="难度：※※※※-四颗星"><a href="#难度：※※※※-四颗星" class="headerlink" title="难度：※※※※ 四颗星"></a>难度：※※※※ 四颗星</h1></li><li>宝宝的经纪人睡了宝宝的宝宝，宝宝不知道宝宝的宝宝是不是宝宝的亲生的宝宝，宝宝的宝宝为什么要这样对待宝宝！宝宝真的很难过！宝宝现在最担心的是宝宝的宝宝是不是宝宝的宝宝，如果宝宝的宝宝不是宝宝的宝宝那真是吓死宝宝了。<br><img src="https://upload-images.jianshu.io/upload_images/2528310-7b4455feb9934234.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>中不不建交是受印度的影响，中不建交不受印度的影响。<h1 id="难度：※※※※※-五颗星"><a href="#难度：※※※※※-五颗星" class="headerlink" title="难度：※※※※※ 五颗星"></a>难度：※※※※※ 五颗星</h1></li><li>NLP同学接招。这玩意非得配合超强知识图谱才能解决，非单纯NLP技术搞的定<br><img src="https://upload-images.jianshu.io/upload_images/2528310-a79b54c3ab6c170a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li></ol><hr><h1 id="一些搞笑的"><a href="#一些搞笑的" class="headerlink" title="一些搞笑的"></a>一些搞笑的</h1><ol><li>台湾朋友发的[允悲]金门那边应对海漂死猪的防疫文件及吐槽<br><img src="https://upload-images.jianshu.io/upload_images/2528310-8a1c35e783ccbe62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>高兴地日韩游。接连看到这样两条微博，感叹取名字太难了，#自然语言理解太难了#<br><img src="https://upload-images.jianshu.io/upload_images/2528310-a85309c022fcaf91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/2528310-fe8689e733d22c07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>于谦的父亲，是个卖参的人</li><li>叫我起床<br><img src="https://upload-images.jianshu.io/upload_images/2528310-2c4ee6dba304ae3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="image.png"></li><li>这宣传标语，从左往右读和从右往左读意思截然相反啊<br><img src="https://wx4.sinaimg.cn/mw690/005WsNORly1fzpm2k0nwwj30go0m8jt1.jpg" width="167" height="223"></li></ol><h1 id="一些easy的作为结尾"><a href="#一些easy的作为结尾" class="headerlink" title="一些easy的作为结尾"></a>一些easy的作为结尾</h1><ol><li>校长说衣服上除了校徽别别别的</li><li>过几天天天天气不好</li><li>看见西门吹雪点上了灯，叶孤城冷笑着说：“我也想吹吹吹雪吹过的灯”，然后就吹灭了灯。</li><li>今天多得谢逊出手相救，在这里我想真心感谢“谢谢谢逊大侠出手”</li><li>灭霸把美队按在地上一边摩擦一边给他洗脑，被打残的钢铁侠说：灭霸爸爸叭叭叭叭儿的在那叭叭啥呢</li><li>姑姑你估估我鼓鼓的口袋里有多少谷和菇！！</li><li>“你看到王刚了吗”“王刚刚刚刚走”</li><li>张杰陪俩女儿跳格子：俏俏我们不要跳跳跳跳过的格子啦</li><li>骑车出门差点摔跤，还好我一把把把把住了</li><li>我朋友问父亲：我大大大（大大爷）和我姑姑谁年龄大？朋友爸爸说：你大大大大！</li><li>我背有点驼，麻麻说“你的背得背背背背佳</li><li>南京市长江大桥</li></ol>]]></content>
      
      
      <categories>
          
          <category> 自然语言处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指纹对比分析系统</title>
      <link href="/2019/02/14/%E6%8C%87%E7%BA%B9%E7%9A%84%E5%AF%B9%E6%AF%94%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
      <url>/2019/02/14/%E6%8C%87%E7%BA%B9%E7%9A%84%E5%AF%B9%E6%AF%94%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p><strong>毕业设计完成于2012年，现阶段关于图像的东西都是走神经网络了，本文仅可以作为背景知识和简单的课程设计参考,本文另附一个MFC演示程序见文末下载链接</strong></p><p><strong>摘要：</strong> 指纹识别技术作为生物识别技术中最为具有应用前景的技术之一，近年来取得了长足的发展，并广泛应用于各种场合。由于指纹所具有的唯一性和不变性，以及指纹识别技术具有很高的可行性和实用性，指纹识别成为目前最流行、最可靠的个人身份认证技术之一。所以对指纹识别技术的研究具有重要的理论和实际意义。<br>指纹识别的一般性过程分为三步：指纹图像的预处理，指纹特征提取以及特征匹配。本设计采用Visual Studio 2008 MFC依照软件开发自顶向下，逐步细化的经典模式，按上述步骤完成开发工作，成功实现了基于BMP格式指纹图像的增强，二值化，细化，特征提取以及对比分析工作。完成了具有一般性的指纹对比分析系统。</p><p><strong>关键词：</strong> 指纹识别；MFC；图像增强</p><p><strong>Abstract:</strong> The fingerprint identification technology act as the most promising application of biometric technologies, has made considerable development in recent years and is widely used in various occasions. Due to the uniqueness and invariability of fingerprints，the fingerprint recognition becomes the most popular and reliable personal authentication technology. As a consequence, the study of fingerprint identification technology  is of great theoretical and practical significance.<br>Fingerprint identification can be divided into three periods: preprocessing of fingerprint images, feature extraction and feature matching In this design, we adopt the visual studio 2008 edition’s MFC, in accordance with software development which uses top-to-down process and the gradual refinement of the classic model , and successfully achieve  enhancement ,binarization ,thinning of fingerprint image, based on the BMP format. Through the whole process, we finally complete a general fingerprint contrast and analysis system</p><p><strong>Key words:</strong> Fingerprint identification; MFC; enhancement</p><hr><p>@<a href="文章大纲">toc</a></p><hr><p>指纹的对比分析系统</p><h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><h2 id="1-1-课题背景——指纹识别的发展历史"><a href="#1-1-课题背景——指纹识别的发展历史" class="headerlink" title="1.1 课题背景——指纹识别的发展历史"></a>1.1 课题背景——指纹识别的发展历史</h2><p>指纹识别学是一门古老的学科，它是基于人体指纹特征的相对稳定与唯一这一统计学结果发展起来的。随着计算机和网络的迅速发展，人们对身份认证的准确性、安全性与实用性提出了更高的要求。在众多的生物识别技术中，指纹识别技术是发展最早、应用最广泛的一种。指纹识别技术充分利用了指纹的普遍性、唯一性和永久性的生物特征，已逐步取代了传统的基于标志和数字的识别方式，目前在网络、银行、金融、医疗和安检等行业均得到了广泛应用。本文对指纹识别系统的原理和基本过程进行了分析研究，重点研究了指纹图像预处理，细化，特征点比对等算法，并且设计实现了指纹对比分析系统，进行了模拟验证等工作。</p><p>随着现代社会经济的不断发展，越来越多的场合需要身份的确认手段。生物识别技术(Biometric Identification Technology)——是利用人体生物特征进行身份认证的一种技术。而指纹识别是生物识别技术中最成熟也是最可靠的识别技术之一</p><p>相关资料显示，中国是世界上最早应用指纹识别技术的国家。在西安半坡出土的距今六千多年的陶器上已发现了指纹的痕迹。从有据可查的资料中显示，我国对指纹的应用最早出现在中国古代秦朝以前，诸如南郑春秋商城遗址出土的春秋战国时代陶豆柄上的指印等。唐代时，以“按指为书”为代表的“指纹捺印”已经在文书、契约等民用场合被广泛采用。著名学者海因德尔（Heinai）在其权威的《指纹鉴定》著作中断定：“根据我国《周礼义疏》及《仪礼义疏》记载，中国第一个提到指纹鉴别个人的是唐代的作家贾公彦。他的作品大约写于公元650年，他是着重提到指纹是确定个人身份方法的世界上最早的作家。”自宋朝起，指纹则开始被用作刑事诉讼的物证。指纹在中国古代的借贷契约、买卖文凭、婚约休书、狱辞供状等方面得到广泛应用。<br>我国在广泛应用指、掌纹的漫长历史中，随着对外文化的交流，应用指纹的传统习惯传播到了世界上许多国家。中国也是世界公认的指纹发源地。</p><ul><li>公元1788年，梅耶(J. Mayer)首次著文指出了至今仍然被承认的指纹的两个重要特性，一是没有人的指纹是完全相同的(唯一性)，另外一个是指纹的式样终身不会改变(稳定性)。</li><li>公元1823年，珀金杰（J. Purkinie）首次把指纹纹形分成了9类。</li><li>公元1880年，福尔茨（Henry Fauld）发表了指纹认证的论文，第一次科学地提出了指纹的个体性和唯一性。指纹唯一性的发现，使得指纹作为一种更为有效的鉴别方法而得到采用。<ul><li>公元1889年，亨利（E. R. Henry）在总结前人研究成果的基础上，提出基于指纹细节特征识别（Minutia-Based）的理论，并提出了用指纹识别来进行确定罪犯身份的设想，从而奠定了现代指纹学的基础。直到一个世纪后的今天，采用基于Minutia- Based的指纹识别算法仍是主流。 </li></ul></li><li>公元1892年，英国的弗朗西斯·盖尔顿（Francis Galton）爵士对指纹进行了广泛的研究，写了《FingerPrint》一书，向世人介绍了用于单个指纹分类的细节特征，首次系统地阐述了指纹学。完善地确立了一整套指纹识别的方法，并且用于刑事侦察中对犯罪嫌疑人的甄别和鉴定。</li></ul><p>到本世纪初，指纹学的研究基本成熟，这时的指纹鉴别，主要由指纹专家根据指纹知识凭经验判断。世界上许多国家都建立了指纹库，仅美国联邦调查局的指纹库中就存有二亿多张指纹卡。然而传统的指纹识别方法面临着从指纹库中人工查找、对比指纹卡速度慢、效率低、对人员要求高等问题。从二十世纪六十年代开始，随着计算机技术的发展，传统的指纹识别技术发生了重大变化。人们开始利用计算机来建立指纹识别系统。</p><h2 id="1-2-指纹识别相对于其它识别技术的优势"><a href="#1-2-指纹识别相对于其它识别技术的优势" class="headerlink" title="1.2 指纹识别相对于其它识别技术的优势"></a>1.2 指纹识别相对于其它识别技术的优势</h2><p>目前有很多的生物测定技术可用于身份认证，包括虹膜识别技术、视网膜识别技术、面部识别、签名识别、声音识别技术、指纹识别等，具有安全、可靠的特点，其中指纹识别系统是目前研究最多、最有应用前景的生物识别系统。指纹识别技术的应用十分广泛，指纹因具有终生不变性及稳定性,而且不同人指纹相同的概率几乎为零,因此指纹自动识别系统被广泛应用于案例分析、商业活动中的身份鉴别等领域。指纹识别技术的发展得益于现代电子集成制造技术的进步和快速可靠的算法的研究。</p><p>表1-1 识别技术对比表一</p><table><thead><tr><th></th><th>类型</th><th>鉴别可靠度</th><th>可否运用一对一比照</th><th>可否运用一对多比照</th><th>传感器价格</th><th>尺寸</th></tr></thead><tbody><tr><td></td><td>虹膜</td><td>很好</td><td>是</td><td>是</td><td>高</td><td>较大</td><td></td></tr><tr><td></td><td>视网膜</td><td>很好</td><td>是</td><td>是</td><td>高</td><td>较大</td><td></td></tr><tr><td></td><td>面部</td><td>一般</td><td>是</td><td>否</td><td>低</td><td>中等</td><td></td></tr><tr><td></td><td>签名</td><td>一般</td><td>是</td><td>否</td><td>低</td><td>较小</td><td></td></tr><tr><td></td><td>语音</td><td>一般</td><td>是</td><td>否</td><td>极低</td><td>非常小</td><td></td></tr><tr><td></td><td>基因</td><td>最好</td><td>是</td><td>否</td><td>极高</td><td>很大</td><td></td></tr><tr><td></td><td>指纹</td><td>很好</td><td>是</td><td>是</td><td>较低</td><td>非常小</td><td></td></tr></tbody></table><p>表 1-2 识别技术对比表二<br><img src="https://img-blog.csdnimg.cn/20190215144454631.png" alt="在这里插入图片描述"></p><p>可以看出，在众多生物特征识别技术中，指纹识别是一种比较理想的基于生物特征的身份认证方式,随着科技的进步指纹识别技术在实际应用中表现除了越来越大的作用。在美国，9·11以后，三个相关的法案(爱国者法案、边境签证法案、航空安全法案)都要求必须采用生物识别技术作为法律实施保证。总体上来说，应用己经进入了以政府级应用为主的阶段，有着极其广阔的应用前景，其主要应用领域包括：</p><p>1) 机场、旅客控制Airport S／Traye；<br>2) 政府部门Government；<br>3) 个人使用(门禁、考勤)Per Sonnel；<br>4) 执法机构Law EnforCement：<br>5) 消费者管理系统Consumer／Retail；<br>6) 金融管理服务系统Fi nancial serriCeS；<br>7) 计算机登陆系统Computer；<br>8) 医疗保健系统HIPAA;</p><p>另外对生物识别(指纹识别)技术来说，被广泛应用意味着它能在影响亿万人的日常生活的各个地方使用。通过取代个人识别码和口令，生物识别（指纹识别）技术可以阻止非授权的“访问”，可以防止盗用ATM、蜂窝电话、智能卡、桌面PC、工作站及其计算机网络；在通过电话、网络进行的金融交易时进行身份认证；在建筑物或工作场所生物识别技术（指纹识别）可以取代钥匙、证件、图章等。生物识别(指纹识别)技术的飞速发展及其广泛应用将开创个人身份鉴别的新时代。指纹所具有的唯一性、不变性、易于获取、分类存储有规律等特性使其成为生物鉴定学中最为成熟的方式。</p><h2 id="1-3-指纹识别技术在国内外的研究现状"><a href="#1-3-指纹识别技术在国内外的研究现状" class="headerlink" title="1.3 指纹识别技术在国内外的研究现状"></a>1.3 指纹识别技术在国内外的研究现状</h2><p>指纹识别算法的研究方向主要分为：基于图像的识别算法和基于特征的识别算法。基于图像的识别算法认为，指纹图像的频域和空域信息可以用来唯一表示并识别不同的指纹。它是一种使用全局信息进行识别的方法，例如使用指纹图像的Fourier频谱来表示和识别指纹。这类算法的问题在于图像特征难以定义和匹配，因此算法的拒识率和误识率较高。基于特征的指纹识别算法是找到并比对指纹的特征。指纹特征的复杂度足以提供用于鉴别的足够特征。目前大多数的自动指纹识别系统使用的都是这类算法。指纹特征多种多样，有特征点、奇异点、域方向图、脊线数目，甚至脊线线型等。对应的匹配方法可以分为：基于点模式的匹配，基于脊线的匹配，基于纹理的匹配以及多种细节特征混合的匹配方法。</p><p>大多数基于特征的识别算法专注于脊线上的末梢点和分叉点，该方法根据各个特征点的位置和方向来表示和区分指纹，从而使指纹识别问题转化为判断两个特征点集间的最大相似度(最大重合度)的问题。提取该细节特征有多种方法：基于灰度指纹图像直接提取，基于二值图像的特征提取，基于细化图像的特征提取。</p><p>目前许多公司和研究所在指纹识别技术领域都取得了突破性的进展，推出许多指纹识别与传统IT技术完美结合的应用产品，这些产品已经被越来越多的用户所认可。</p><h3 id="1-3-1-国外研究现状"><a href="#1-3-1-国外研究现状" class="headerlink" title="1.3.1 国外研究现状"></a>1.3.1 国外研究现状</h3><p>在欧洲，现代的指纹匹配技术主要是16世纪后期产生。Henry Faulds在1880年，第一次科学的提出了指纹的两个重要特征：一是任何两个不同手指的指纹脊线的式样（ridge pattern）不同，二是指纹脊线的式样在人的一生中不会改变。这一发现奠定了现代指纹识别技术的理论基础，也使得指纹识别在罪犯鉴定中得到应用。Francis Galton对指纹进行深入研究，并于1888年引入了特征点的分类技术。1899年，Edward Henry学习了Galton的指纹科学，建立了著名的“Henry System”用于指纹分类。使用精准的指纹索引给专家指纹识别带来极大的便利。早在20世纪初期，司法部门己经正式采用指纹作为有效的身份标记，一些指纹识别机构建立了世界范围的罪犯指纹档案库。</p><p>1923年Purkinje首次对指纹进行了分类； 1960年，美国联邦调查局、英国内务部（Home offiee in the UK）和法国巴黎警察局联合开始投巨资研发指纹识别系统，并于1975年成功推出了第一个商业化系统，随后，各国研究机构和许多大公司开始指纹识别技术的研究和产品开发工作。国际上著名的指纹识别系统有：美国联邦调查局的AFIS系统，日本NEC公司的指纹鉴定系统，北美英弗公司的指纹鉴别系统等。目前，随着数字化、信息化社会对自动身份鉴别技术的要求的不断提高和AFIS在司法领域取得了巨大成功，随着计算机硬件性能的飞速提高和价格的不断降低，随着普通大众对指纹识别了解的深入和接受，指纹识别技术已经突破了司法、侦探领域进入民用领域，并取得了快速的发展。传统指纹识别算法（主要用于司法、刑侦领域）主要考虑降低拒识率，一般需要人工协助处理，而且存在误识率高、计算速度慢、资源消耗大等问题，并不适合于民用领域。同时，民用市场对指纹识别算法在自动化程度、拒识率和误识率、响应时间、资源消耗等方面也提出了更高的要求。</p><p>2006年初，澳大利亚成功发行世界上第一本生物识别护照。2007年11月，美国国土安全部宣布所有入境美国的非美国公民都要接受数字拍照及双手十指指纹扫描。指纹识别即将迎来迅速普及的发展时期。2009年，美国成功对指纹识别系统进行了更新的研究[2]。</p><h3 id="1-3-2-国内研究现状"><a href="#1-3-2-国内研究现状" class="headerlink" title="1.3.2 国内研究现状"></a>1.3.2 国内研究现状</h3><p>我国利用指纹识别身份的历史最早可以追溯到秦朝， 1903年,中国青岛市警察局首次应用汉堡式指纹法。此后我国相继开展了指纹的应用及研究,还曾建立过“指纹学会”。刘紫宛编写的《中华指纹法》一书是我国最早的指纹专著。全国解放后,我国对指纹研究一直比较重视。1955年编制了《中华人民共和国十指纹分析法》。这可以说是我国指纹的科学时期。</p><p>在国内，清华大学在80年代开始指纹识别的研究。中科院自动化所模式识别国家重点实验室自90年代以来，一直致力于“基于生物特征的身份鉴别”的研究，在指纹、虹膜、脸相识别等方面取得了很多的研究成果。北京大学视觉与听觉信息处理国家重点实验室先后承担了国家“七五”和“八五”，科技攻关项目，对指纹识别进行了长期的基础性研究，提出了一整套独创的理论和高效实用的算法。另外，自九十年代初以来，我国的北大方正集团、长春鸿达集团、西安青松集团等机构分别以所在地高校为技术依托，陆续开展了这方面的研究工作。总的来说，国内开展了很多研究，而且取得了很多成果。2002年，清华大学实现了在海量数据库上的人脸和指纹综合识别系统，在识别的过程采用的融合策略是先用人脸特征进行比对得到前n个候选，然后在这个范围内用指纹特征再进行比对。迄今为止，还没有综合生物特征的识别系统的产品问世，综合身份识别系统的研究有待于进一步发展。2009年中北大学信息与通信工程学院提出了一种基于傅立叶变换的指纹图像增强技术，大大提高了图像的清晰度。为后来的指纹识别技术作出了较大贡献。</p><p>与国外相比，我国在自动指纹识别技术的研究水平上还存在一定的差距。主要表现在：<br>(1)指纹录入设备的质量还不太过关：<br>(2)自动指纹识别算法研究水平还有待提高，在应用上的表现为产品适应性和易用性较差，对干、湿一些的指纹往往不能正确区别，对指纹录入时的旋转、平移比较敏感。</p><h3 id="1-3-3-研究现状小结"><a href="#1-3-3-研究现状小结" class="headerlink" title="1.3.3 研究现状小结"></a>1.3.3 研究现状小结</h3><p>现在国内外指纹识别大都采用基于细节特征点的指纹识别技术，即采用基于图像处理的指纹识别算法，其中比较有代表性的有两种。一种是基于方向滤波增强，并在指纹细化图上提取特征点的算法，另一种是直接从指纹灰度图上提取特征点的算法。指纹识别作为一种热门的生物识别技术受到越来越多人的关注，国内外许多机构和学者都采用了很多不同的算法对指纹图像进行预处理和匹配。但有些算法会由于指纹图像的噪音、皮肤弹性引起的非线性形变等多方面因素，导致在识别过程中出现误差，影响识别率等。</p><p>当下指纹识别技术已经越来越成熟，其应用日益普遍。除了刑事侦查以外，民用方面，如指纹门禁系统，指纹考勤系统，银行指纹身份认证系统等。社会各个方面对指纹识别系统有很大的需求。</p><h2 id="1-4-指纹识别的理论原理"><a href="#1-4-指纹识别的理论原理" class="headerlink" title="1.4 指纹识别的理论原理"></a>1.4 指纹识别的理论原理</h2><p>现代指纹识别源于16世纪后期。苏格兰医生Henry Fauld于1880年首次在英国《Nature》发表论文称，人的指纹各不相同且恒久不变，并可以利用现场指纹来鉴定罪犯。</p><p>相当数量的研究者在长期科学研究中发现两个人指纹相同的概率极小。单个手指指纹的概率小于七十亿分之一    。其次一个人指纹可以保持终生不变。美国最早于1963年首先开始指纹识别技术相关软件的研制。</p><p>当然指纹识别是一个复杂的过程。与人工处理不同，自动指纹识别技术并不直接储存指纹图像。多年来各个公司及其研究机构产生了许多数字化算法。但指纹识别算法的本质问题都归结为，在指纹图像上找到并对比指纹的特征。通过计算机模糊比较的办法，计算出它们的相似程度，并最终得到两个指纹的匹配结果。</p><p>实际应用中，人类指纹的纹形特征根据其形态的不同通常可以分为“弓型、箕型、斗型”三大类型，以及“孤形、帐形、正箕形、反箕形、环形、螺形、囊形、双箕形和杂形”等9种形态。根据上述模型特征比在计算机中建立数学模型进行数字匹配便是指纹识别的一般性原理。</p><h2 id="1-5-本论文的主要内容及工作"><a href="#1-5-本论文的主要内容及工作" class="headerlink" title="1.5 本论文的主要内容及工作"></a>1.5 本论文的主要内容及工作</h2><p>本文以研究指纹识别中指纹图像分割、细化、特征提取、匹配等若干问题为研究主体，针对指纹识别技术中分割、细化和匹配进行了仿真和修正。其中分割部分采用了方差均值的方法，细化选取了一种伪特征较少的模板，匹配时以分叉点和端点信息进行匹配。具体的章节和各章的内容安排如下：</p><p>第一章：介绍了研究背景，对现在发展和应用的各种生物识别技术进行了概<br>述，尤其重点阐述了其中指纹识别技术的发展、应用、研究概况、市场前景和存<br>在的难题以及研究方向。同时，说明了本论文的研究目的及意义。</p><p>第二章：为后续的研究工作奠定基础，本章介绍了指纹学基础知识：名词解释，指纹的分类，以及指纹识别的基本原理。</p><p>第三章：指纹识别工作中最重要的工作，是对已经采集了的指纹图片进行的一系列预处理工作，包括增强，二值化，细化等。本章主要的介绍了指纹图像预处理的流程和方法，并给出了仿真得到的结果。</p><p>第四章：介绍了指纹图像细化的方法并仿真得到结果。主要介绍了指纹图像细化后的特征提取，需要哪些特征，去除哪些伪特征，以方便和正确地进行匹配工作。</p><p>第五章：介绍了指纹图像匹配的概念、匹配问题的困难所在和常用方法，给出了一种修改基础上验证用的匹配方法。</p><p>第六章：总结本文所取得的一些研究成果，并对课题发展进行了展望。</p><hr><h1 id="第二章-指纹识别理论基础"><a href="#第二章-指纹识别理论基础" class="headerlink" title="第二章 指纹识别理论基础"></a>第二章 指纹识别理论基础</h1><h2 id="2-1-指纹学的基本知识及名称解释"><a href="#2-1-指纹学的基本知识及名称解释" class="headerlink" title="2.1 指纹学的基本知识及名称解释"></a>2.1 指纹学的基本知识及名称解释</h2><p>指纹：手指第一节(手指尖一节)指头表面乳突纹线。<br>指印：手指第一节乳突线与承受客体接触时留下的印痕。<br>脊线：是手指上的特殊的皮肤花纹的隆线。<br>谷线：两个脊线之间低陷的部分。<br>细节特征：指纹中出现的各种特征。而根据其出现的概率及在处理过程中的<br>稳定性，我们最常采用的就是脊线端点和分叉点，如图。</p><p><img src="https://img-blog.csdnimg.cn/20190215145315756.png" alt="在这里插入图片描述"><br>图2-1 两种基本的指纹细节特征</p><h2 id="2-2-指纹的总体特征及分类"><a href="#2-2-指纹的总体特征及分类" class="headerlink" title="2.2 指纹的总体特征及分类"></a>2.2 指纹的总体特征及分类</h2><p>总体特征是指那些用人眼直接就可以观察到的特征，包括基本纹路图案：环型（loop），弓型（arch），螺旋型（whorl）。其他的指纹图案都基于这三种基本图案。</p><p>指纹的脊纹形式是适应之间的球状表面和半圆形顶端以及横行的指间屈基线生长的，除少数弓形纹之外，绝大多数是箕、斗型纹（约占95%），（三种纹形的大致分布概率如表2-1）<br>表2-1 纹形的大致分布概率</p><table><thead><tr><th></th><th>基本纹型</th><th>弓型</th><th>箕型</th><th>斗型</th></tr></thead><tbody><tr><td></td><td>分布概率</td><td>5%</td><td>60%</td><td>35%</td><td></td></tr></tbody></table><p>纹型是指纹的基本分类，是按中心花纹和三角的基本形态划分的。纹形从属于型，以中心线的形状定名。按我国是指纹分析法，指纹分三大类型（如图2-2），五大种形态。可见，型与形是类与种的关系。<br><img src="https://img-blog.csdnimg.cn/20190215145437766.png" alt="在这里插入图片描述"></p><p>箕型             斗型               弓型</p><p>图2-2 指纹的纹形</p><p>进一步的细化分类可将指纹分为六种主要的类型：拱形(arch)、帐型(tended arch)、左箕型(1eft loop)、右箕型(right loop)、双箕型(double whorl)和斗型(whorl)。图为上述六种类型的指纹图示。<br><img src="https://img-blog.csdnimg.cn/20190215152633784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图2-3 指纹细化分类</p><h2 id="2-3-指纹的局部特征"><a href="#2-3-指纹的局部特征" class="headerlink" title="2.3 指纹的局部特征"></a>2.3 指纹的局部特征</h2><p>局部特征是指指纹上的节点的特征，这些具有某种特征的节点称为特征点。两枚指纹经常会具有相同的总体特征，但它们的局部特征—特征点（Minutia），却不可能完全相同。</p><p>指纹纹路并不是连续的、平滑笔直的，而是经常出现中断、分叉或打折。这些断点、分叉点和转折点就称为”特征点”。就是这些特征点提供了指纹唯一性的确认信息。特征点的分类有以下几种(如图2-4),最典型的是端点和分叉点。<br><img src="https://img-blog.csdnimg.cn/2019021515270395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图2-4指纹特征示意图</p><p>很多研究者试图解决指纹分类问题，其核心的问题就是指纹局部与整体特征的定义问题，至今分类算法的种类繁多，所以不同识别系统普遍存在误识率较高的问题。如何提高指纹分类的准确率在指纹识别研究中是一个较关键的问题。</p><h2 id="2-4-指纹的基本性质"><a href="#2-4-指纹的基本性质" class="headerlink" title="2.4 指纹的基本性质"></a>2.4 指纹的基本性质</h2><p>1) 确定性：指纹纹线的轮廓(纹型)和细节特征是基本不变的。从胚胎学<br>角度考察，胎儿3—4个月即产生了指纹，至6个月左右的胎儿就形成了完整的<br>指纹，出生后随着年龄的增长，纹线会变粗，花纹的面积会增大，但到了成年以<br>后，这些变化即无显著表现，而花纹的类型结构、细节特征的总体布局、脊线的<br>总数目等方面，自胚胎六个月到出生至死亡腐败之前，始终是无明显变化的，这<br>就充分地表明了指纹的确定性<br>2) 唯一性：由于指纹脊线的连接关系千变万化，因此，即使两个不同的指纹<br>有着相同的轮廓和相同数量的细节特征，它们的细节位置也是不可能完全相的。<br>3) 可分类性：指纹的纹型，中心点和三角点之间的脊线数，以及细节特征<br>间的关系，都可作为分类的依据。<br>4) 触物留痕：从严格定义上讲，自动指纹识别应该为自动“指印”识别。<br>指纹接触物体后留下的痕迹即为指印。正是因为这些性质，指纹被国内外许多专家、学者称为“证据之首”。</p><p>一切指纹识别系统，都是基于以上这些性质，从而进行身份的鉴别和确认的。</p><h2 id="2-5-指纹识别的基本原理"><a href="#2-5-指纹识别的基本原理" class="headerlink" title="2.5 指纹识别的基本原理"></a>2.5 指纹识别的基本原理</h2><p>指纹识别技术主要涉及四个功能：读取指纹图像、提取特征、保存数据和比对。通过指纹读取设备读取到人体指纹的图像，然后要对原始图像进行初步的处理，使之更清晰，再通过指纹辨识软件建立指纹的特征数据。软件从指纹上找到被称为“节点”（minutiae）的数据点，即指纹纹路的分叉、终止或打圈处的坐标位置，这些点同时具有七种以上的唯一性特征。通常手指上平均具有70个节点，所以这种方法会产生大约490个数据。这些数据，通常称为模板。通过计算机模糊比较的方法，把两个指纹的模板进行比较，计算出它们的相似程度，最终得到两个指纹的匹配结果。<br>其一般性过程如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20190215152743678.png" alt="在这里插入图片描述"><br>图2-5 指纹识别的一般性过程</p><hr><h1 id="第三章-指纹识别预处理和增强方法"><a href="#第三章-指纹识别预处理和增强方法" class="headerlink" title="第三章 指纹识别预处理和增强方法"></a>第三章 指纹识别预处理和增强方法</h1><p>在图像形成，传输或变换的过程中，由于受到其它客观因素诸如系统噪声、曝光不足或过量、相对运动等影响，获取图像往往会与原始图像之间产生某种差异(称为降质或退化)。退化后的图像通常模糊不清或者经过机器提取的信息量减少甚至错误，这些在实际应用中，具体表现有：</p><p>1.指纹模糊不清造成指纹纹线间的粘连、模糊或断裂,会导致产生虚假的指<br>纹细节特征点。<br>2.遗漏或忽略了正确的细节特征点。<br>3.在有关描述细节特征点的位置和方向等属性时产生严重失真。<br>因此指纹图像质量的高低直接关系到细节特征点提取的有效性和可信性影响系统在匹配时的拒认率和误识率，从而最终影响整个系统识别的结果。</p><p>由此可知，在进行指纹分类和细节特征匹配之前一定要先对采集到的指纹图像进行针对性的预处理。预处理是指纹自动识别系统中的最重要的一步,它的好坏直接影响着指纹识别的效果。图像增强技术正是在此意义上提出的，目的就是为了改善图像的质量。</p><h2 id="3-1-指纹图像预处理过程"><a href="#3-1-指纹图像预处理过程" class="headerlink" title="3.1 指纹图像预处理过程"></a>3.1 指纹图像预处理过程</h2><p>图像增强尚没有统一的理论方法，常用的图像增强技术有直方图修改、图像平滑滤波、图像锐化等。图像增强技术主要分为两类：频域增强法和空域增强法．频域增强法就是在图像的某种变换域中(通常是频率域内)对图像的变换值进行某种运算处理，然后变换回空间域。空域增强法是直接针对图像中的像素，对图像的灰度进行处理。空域法属于直接增强的方法，它包括扩展对比度的灰度变换和直方图变换、消除噪声的平滑法和增强边缘的锐化法。<br>指纹图像与处理的主要流程如下图所示：<br><img src="https://img-blog.csdnimg.cn/20190215152810419.png" alt="在这里插入图片描述"><br>图3-1 指纹图像预处理的主要流程</p><p>指纹图像预处理的过程核心就是人们通常所说的图像的滤波，既在图像增强前使用一些简单的图像处理手段对图像进行初加工。通常使用的预处理方法包括：</p><p>1.感性区域的分割，计算出指纹图像的边界，进行感性区域（ROI Region of Interest）的分割。<br>2.灰度均衡化：用以消除或减轻同一图像不同区域之间或者不同图像之间对比度的差异<br>3.方向场的计算：计算出指纹图像的方向场，这个步骤是指纹的滤波和增强所不可缺少的一个环节。<br>4.低通滤波，利用简单的低通滤波器去除图像中存在的椒盐，高斯等噪声。<br>上述方法将在后续章节中逐一介绍。</p><h2 id="3-2-指纹图像分割概述"><a href="#3-2-指纹图像分割概述" class="headerlink" title="3.2 指纹图像分割概述"></a>3.2 指纹图像分割概述</h2><p>在指纹识别系统中，指纹图像分割是图像预处理的一部分。指纹分割的最基本的依据是图像某些特征和特征集合。图像特征是指纹图像的固有属性,如灰度值,邻域关系,纹线的扭曲程度等。特征集合则是几种的结合。通过提取图像特征,可将原始图像映射到特征空间,使图像特征在特征空间中呈现一定的分布。因此根据以上的的灰度值领域关系，纹线的扭曲程度，指纹图像分割大致分为三类：基于像素的图像分割，基于块特征的图像分割以及基于全局的图像分割。</p><p>基于全局的图像分割则是根据情况特别是某些特殊场合的利用，如残缺指纹。全局的图像分割可以是人工选定几个特定点后再根据全局的特点来处理，此法也可运用于匹配。基于全局的指纹识别仍处于实验室探索阶段,应用领域中尚不广泛。</p><h2 id="3-3-均值方差法增强对比度"><a href="#3-3-均值方差法增强对比度" class="headerlink" title="3.3 均值方差法增强对比度"></a>3.3 均值方差法增强对比度</h2><p>在图像分割概述中，已经提到基于块特征的指纹图像分割。在这部分将重点介绍均值法差法的计算方法和在仿真中的运用。</p><p>该算法基于背景区灰度方差小，而指纹区方差大的思想，将指纹图像分成块，计算每一块的方差，如果该块的方差小于阈值为背景，否则为前景。具体步骤分以下三步：<br>(1)将低频图分成M×M大小的无重叠方块，方块的大小以一谷一脊为宜。<br>(2)计算出每一块的均值和方差。</p><p>设指纹图像I的大小为H×L，I(i,j)为像素点(i,j)的灰度，AVE和VAR分别为原指纹图像的均值和方差，AVE和VAR可以通过公式(3.1)和(3.2)计算得到。<br>|公式| 编号|<br>–|–<br><img src="https://img-blog.csdnimg.cn/20190215152846942.png" alt="在这里插入图片描述">   | （3.1）<br><img src="https://img-blog.csdnimg.cn/20190215152852403.png" alt="在这里插入图片描述">| （3.2）<br>(3)如果计算得到的方差几乎接近于0就认为是背景，对于方差不为零的区域在进行阈值分割算法，这种算法主要是根据计算得到的方差来决定其是否为背景区。</p><p>在使用方差均值法之前还要使用归一法将图变为低频图。归一化的目的是把不同原图像的对比度和灰度调整到一个固定的级别上，为后续处理提供一个较为统一的图像规格。指纹图像的归一化公式如式(3.3)所示，当大于平均值时为加。</p><table><thead><tr><th></th><th>公式</th><th>编号</th></tr></thead><tbody><tr><td> <img src="https://img-blog.csdnimg.cn/20190215153045631.png" alt="在这里插入图片描述"></td><td>（3.3）</td></tr></tbody></table><p>其中和为期望的灰度均值和方差。<br>均衡化后效果如下图所示：<br><img src="https://img-blog.csdnimg.cn/20190215153123550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图3-2 增强对比度前后效果</p><h2 id="3-4-Gabor滤波增强"><a href="#3-4-Gabor滤波增强" class="headerlink" title="3.4 Gabor滤波增强"></a>3.4 Gabor滤波增强</h2><p>众所周知，Gabor滤波器是带通滤波器，它以其在空域良好的方向选择性在频域有良好的频率选择性而在计算机视觉领域尤其纹理分析方面得到了广泛的应用。在指纹图像中对于灰度指纹图像，脊线和谷线在局部的小邻域可以认为是正弦波形状，具有一定的频率和方向。</p><p>利用Gabor滤波器良好的对方向和频率的选择性方向滤波是图像增强的一个很好的方案，实验表明，以Gabor函数的偶分量实部为模板，脊线于谷线形成的近似正弦波的频率为滤波器的频率，以指纹的局部方向构建的滤波器，去噪效果非常好，滤波后的指纹图像的灰度直方图以呈现明显的双峰性质。<br>Gabor滤波器的形式如下图所示：<br><img src="https://img-blog.csdnimg.cn/20190215153137779.png" alt="在这里插入图片描述"><br>图3-3 Gabor滤波器</p><p>滤波后的图像灰度值为：<br><img src="https://img-blog.csdnimg.cn/20190215153146748.png" alt="在这里插入图片描述"><br>图3-4 灰度值计算式<br>Gabor滤波增强后的效果图如下所示：<br><img src="https://img-blog.csdnimg.cn/20190215153152353.png" alt="在这里插入图片描述"><br>图3-5 Gabor增强局部效果图</p><h2 id="3-5-对指纹图像进行二值化处理"><a href="#3-5-对指纹图像进行二值化处理" class="headerlink" title="3.5 对指纹图像进行二值化处理"></a>3.5 对指纹图像进行二值化处理</h2><p>由于分割后的图像质量仍然不是很好，所以需要对其进行滤波、消除毛刺、空洞处理和二值化处理，以使指纹图像清晰，消除不必要的噪声，以利于进一步的辨识。</p><p>指纹图像二值化作为指纹预处理过程的一部分，是进行指纹图像细化处理的基础。目前指纹细化方法都是基于二值指纹图像进行的。对指纹图像二值化的好处在于使得图像的几何性质只0和1的位置有关，不再涉及像素的灰度值，使处理变得简单，这给存储和处理带来了很大的方便，同时也提高了系统的经济实用。一个好的算法可以得到一个高质量的二值图像。反之，如果该阶段引入噪声，就会直接降低图像质量，影响识别精度。对指纹图像进行二值化，其基本要求就是二值化后的图像能真实地再现原指纹。具体要求为：<br>1．脊线中不出现空白；<br>2．二值化后的脊线基本保持原来指纹的特征；<br>3．指纹的纹线不应有太多的间断和相连；<br>4．指纹纹线间的间距应大致相同。</p><p>指纹图像首先要进行中值滤波处理，去除噪声。然后进行二值化过程，变成二值图像。由于原始指纹图像不同区域深浅不一，如对整幅图像用同一阈值进行二值分割，会造成大量有用信息的丢失。这里我们使用自适应阈值二值化的思想，对每块指纹图像，选取的阈值应尽量使该块图像内大于该阈值的像素点数等于小于该阈值的像素点数。</p><p>一般灰度图像二值化的变换函数用下列公式表示，见式（3.4）：<br>|公式| 编号|<br>–|–<br><img src="https://img-blog.csdnimg.cn/20190215153222175.png" alt="在这里插入图片描述">   |（3.4）<br>公式(3.4)中为指定的阈值，为灰度值。</p><p>自适应阈值算法[9]首先是利用固定阈值算法的思想，然后根据图像中每一部分的明暗度来调整阈值。本文首先把图像分为若干个的方块，每一块根据自己的阈值进行二值化。这种算法充分利用了指纹图中脊线与谷线宽度大致相同的特点，即二值化后黑白像素的个数也应大致相同，首先利用固定阈值算法的特点对指纹图像中的每块确定一个大致的阈值，然后再利用自适应的思想对阈值进行准确的调整，即阈值的取值合适时图像是最光滑的，既没有“黑洞”阈值过大，也没有“白点”阈值过小，所以0－1之间的转换次数最少。下面为块区域阈值的选取算法：</p><p>1．将指纹图像划分为不重叠的大小为的块，求取该区域内所有像素的灰度平均值。在综合考虑算法速度和处理效果两方面的条件下，本文分块尺寸为8×8；为块的灰度平均值．见式（3.5）：<br>|公式| 编号|<br>–|–<br><img src="https://img-blog.csdnimg.cn/20190215153321710.png" alt="在这里插入图片描述">  |（3.5）<br><img src="https://img-blog.csdnimg.cn/20190215153431450.png" alt=""><br>自适应阈值二值化的流程图如图3-6所示：<br><img src="https://img-blog.csdnimg.cn/2019021515345269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图3-6 自适应阈值二值化流程图</p><p><img src="https://img-blog.csdnimg.cn/20190215153515899.png" alt=""></p><h2 id="3-6-指纹图像的细化"><a href="#3-6-指纹图像的细化" class="headerlink" title="3.6 指纹图像的细化"></a>3.6 指纹图像的细化</h2><p>细化是在不改变图像像素拓扑连接关系的条件下，连续擦除图像的边缘像素，把纹线粗细不均匀的指纹图像转化成线宽仅为一个像素的条纹中心线图像的过程。细化可以去除不必要的纹线粗细信息，使得指纹图像的数据量及连接结构更加突出，便于从指纹图像中提取细节特征，如图3-7从而在指纹特征提取和匹配环节上提高图像的处理速度和效率。<br><img src="https://img-blog.csdnimg.cn/20190215153529836.png" alt="在这里插入图片描述"><br>图3-7 纹线特征</p><p>指纹图像二值化后，纹线仍具有一定的宽度，而指纹识别只对纹线的走向感兴趣，不关心它的粗细。为了进一步压缩数据，得到更精确的细节特征，提高识别的准确性，对指纹图像进行细化处理是不可忽略的。</p><p>细化方法不同,细化结果就有差异。在指纹识别中要求在不改变原来指纹图像的拓朴连通性的同时,细化的结果应为严格的八邻域图像骨架;纹线中除去特征点以外,每个像素均只与相邻两个像素为八邻域,抹去任意一像素都将破坏纹线的连接性。概括起来说就是纹线细化处理要满足收敛性、连接性、拓朴性、保持性、细化性、中轴性、快速性的要求。</p><p>目前为止,关于细化方法的研究工作已有很多成果,所采用的方法从使用的观点来看,比较多的是采用模板匹配的方法(如迭代法、OPTA单连通法等)。这种方法是根据某个像素的局部邻域(如3×3,5×5等)的图像特征对其进行处理,此外也有采用边缘搜索编码、外轮廓计算以及神经网络等细化方法。从处理的过程来看,主要可以分为串行和并行两类,前者对图像中当前像素处理依据其邻域内像素的即时化结果,且不同的细化阶段采用不同的处理方法;后者对当前的像素处理该像素及其邻域内各像素的前一轮迭代处理的结果,自始至终采用相同的细化准则。</p><p>对于任意形状的区域，细化实质上是腐蚀操作的变体，细化过程中要根据每个像素点的八个相邻点的情况来判断该点是否可以剔除或保留。<br><img src="https://img-blog.csdnimg.cn/20190215153603411.png" alt="在这里插入图片描述"><br>图3-8 根据某点的八个相邻点的情况来判断该点是否能删除<br>图3-8给出了当前需要处理的像素点在不同的八邻域条件下的情况，可以看出：<br>(1)不能删，因为它是个内部点，我们要求的是骨架，如果连内部点也删了，骨架也会被掏空的；<br>(2)不能删，和(1)是同样的道理；<br>(3)可以删，这样的点不是骨架；<br>(4)不能删，因为删掉后，原来相连的部分断开了；<br>(5)可以删，这样的点不是骨架；<br>(6)不能删，因为它是直线的端点，如果这样的点删了，那么最后整个直线也被删了，剩不下什么；<br>(7)不能删，因为孤立点的骨架就是它自身。</p><p>总结上图，有如下的判据：</p><p>(1)内部点不能删除；<br>(2)孤立点不能删除；<br>(3)直线端点不能删除；<br>(4)如果P是边界点，去掉P后，如果连通分量不增加，则P可以删除。</p><p>我们可以根据上述的判据，事先做出一张表，从0到255共有256个元素，每个元素要么是0，要么是1。我们根据某点的八个相邻点的情况查表，若表中的元素是1，则表示该点可删，否则保留。查表的方法是，设白点为1，黑点为0；左上方点对应一个8位数的第一位（最低位），正上方点对应第二位，右上方点对应的第三位，左邻点对应第四位，右邻点对应第五位，左下方点对应第六位，正下方点对应第七位，右下方点对应的第八位，按这样组成的8位数去查表即可。考虑当前像素点的各种八邻域的情况，我们可以得到一个细化操作查找表，该表在下面的细化算法中详细介绍。</p><p>为了避免分裂指纹图像，细化的过程分为两个步骤，第一步是正常的腐蚀操作，但是它是有条件的，也就是说那些被标记的可除去的像素点并不立即消去；在第二步中，只将那些消除后并不破坏连通性的点消除，否则的话保留这些边界点。以上的步骤是在一个3×3邻域内运算，可以通过查表实现细化的操作。算法的实现步骤如下：</p><p>(1)定义一个3×3模板和一个查找表，模板和查找表分别如表3.1和图3.9所示：</p><p>表3-1 细化模板<br>1|    2    |4|<br>–|–|–<br>128    |256    |8<br>64|    32|    16<br><img src="https://img-blog.csdnimg.cn/20190215153721123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图3-9 细化查找表</p><p>(2)对二值图像从上到下、从左到右进行扫描；该过程结束后再对图像进行从左到右，从上到下的扫描；如果图像中当前像素点的灰度值为”0”，且其左右（第一次扫描过程考虑左右像素点）或上下（第二次扫描过程考虑上下两个像素点）两个像素点中有任意一个为”255”则转至步骤(3)，否则回转到步骤(2)；</p><p>(3)该像素点为中心的3×3区域内的各个像素值和定义的模板中的权值进行卷积求和，得到查找索引值k；</p><p>(4)根据这个索引值k得到表里相应的数据，如果为”1”，那么该像素点的灰度值设为”255”，如果为”0”，则该像素点的灰度值为”0”。</p><p>(5)图像从头至尾扫描二遍后，如果该次扫描修改了图像中的点，则跳转至步骤二，开始新的一轮扫描。否则图像细化结束。<br><img src="https://img-blog.csdnimg.cn/20190215153737368.png" alt="在这里插入图片描述"><br>图3-10 细化处理后的指纹图像</p><p>图3-10是一幅经过细化处理后的指纹图像，和原图像比较可知，细化后的指纹图像脊线的宽度由5到8个像素被压缩到一个像素，以便于后续特征提取的处理过程能够对脊线的断点和分叉点进行精确定位。</p><h2 id="3-7-预处理实验结果"><a href="#3-7-预处理实验结果" class="headerlink" title="3.7 预处理实验结果"></a>3.7 预处理实验结果</h2><table><thead><tr><th></th><th>a</th><th>b</th></tr></thead><tbody><tr><td><img src="https://img-blog.csdnimg.cn/20190215153844439.png" alt="在这里插入图片描述"></td><td><img src="https://img-blog.csdnimg.cn/20190215153852356.png" alt="在这里插入图片描述">       </td></tr><tr><td>原始图像（a－1）</td><td>原始图像（b－1）</td></tr></tbody></table><p>图3－11 原始图像</p><table><thead><tr><th></th><th>a</th><th>b</th></tr></thead><tbody><tr><td><img src="https://img-blog.csdnimg.cn/20190215153952644.png" alt="在这里插入图片描述"></td><td><img src="https://img-blog.csdnimg.cn/20190215153959200.png" alt="在这里插入图片描述"></td></tr><tr><td>分割图像（a－2）</td><td>分割图像（b－2）</td></tr></tbody></table><p>图3-12 分割后的图像</p><table><thead><tr><th></th><th>a</th><th>b</th></tr></thead><tbody><tr><td><img src="https://img-blog.csdnimg.cn/20190215154026423.png" alt="在这里插入图片描述"></td><td><img src="https://img-blog.csdnimg.cn/20190215154036567.png" alt="在这里插入图片描述"></td></tr><tr><td>二值化图像（a－3）</td><td>二值化图像（b－3）</td></tr></tbody></table><p>图3－13 二值化后的图像</p><table><thead><tr><th></th><th>a</th><th>b</th></tr></thead><tbody><tr><td><img src="https://img-blog.csdnimg.cn/20190215154102848.png" alt="在这里插入图片描述"></td><td><img src="https://img-blog.csdnimg.cn/20190215154110995.png" alt="在这里插入图片描述"> </td></tr><tr><td>细化图像（a－4）</td><td>细化图像（b－4）</td></tr></tbody></table><p>图3－14细化后的图像</p><h2 id="3-8-本章小结"><a href="#3-8-本章小结" class="headerlink" title="3.8 本章小结"></a>3.8 本章小结</h2><p>本章主要介绍了指纹图像预处理各个步骤的原理及实现，对各步骤的算法进行研究与实现，给出了各个算法的结果。在指纹分割的处理中采用了灰度方差发进行分割运算，得到了很好的效果，在细化的处理中采用了查表的方法进行细化并且比以往的常规算法要优越一些。</p><hr><h1 id="第四章-指纹特征的提取"><a href="#第四章-指纹特征的提取" class="headerlink" title="第四章 指纹特征的提取"></a>第四章 指纹特征的提取</h1><p>对于特征点提取的常用算法很多，如： </p><p>(1)基于二值化的特征提取方法：这种算法对于预处理和增强后得指纹图像进行二值化，然后再提取特征点。</p><p>(2)基于直接灰度的特征提取方法：这种方法直接从灰度图像出发，通过分析图像的纹理属性和拓扑结构提取特征点。</p><p>(3)基于细化图像的特征提取方法：这种方法是将指纹图像处理后得到细化图像，通过细化图像提取特征点。</p><p>为了比较两个指纹是否相同，需要从指纹图像中提取出能表示指纹唯一性的特征。Galton提出的指纹细节点是人工指纹匹配中最常用的特征。目前已定义的特征类型己达150多种，但是这些扩展的特征往往不易提取相互区分，并且它们都可以由端点和分叉点的组合进行描述，这使得端点和分叉点成为最常用的结构特征，也称为细节特征，它被认为是最稳定、最容易检查的，而且占全部特征点的80％以上。提取出的特征点还必须经过伪特征点的去除，尽可能地去除掉由于二值化、细化处理等过程引入的伪特征点。最后确定出特征点的类型、位置、方向。</p><p>本章就是根据端点和分叉点是最常用的结构特征，提取满足一定条件接近的点，再去除不是端点和分叉点的伪特征点，最终实现特征值的提取，有利于后面匹配的展开。</p><h2 id="4-1-特征点的提取"><a href="#4-1-特征点的提取" class="headerlink" title="4.1 特征点的提取"></a>4.1 特征点的提取</h2><p>特征提取一般是指提取指纹图像的局部特征，也就是细节点特征。在基于细节点的指纹自动识别系统中，特征提取是在细化后的指纹图像上进行的。</p><p>特征提取的首要问题是确定细节点和它的位置，细节点的位置和细节点间的相对位置很重要，尽管每个指纹中包括将近80个细节，只要确定十几个细节点就己经足够用来识别了。</p><p>探测细节点的算法很简单， M是待检测的点，是它的八邻域，沿顺时针方向排列。是细化后图像在处的灰度。如果M是端点，则它的八邻域满足：<br>|公式| |编号|<br>–|–|–<br><img src="https://img-blog.csdnimg.cn/2019021515425163.png" alt="在这里插入图片描述">|<img src="https://img-blog.csdnimg.cn/20190215154304278.png" alt="在这里插入图片描述"> |（3.13）<br>如果M是分叉点，则它的八邻域满足：<br>|公式| |编号|<br>–|–|–<br><img src="https://img-blog.csdnimg.cn/20190215154326471.png" alt="在这里插入图片描述">|<img src="https://img-blog.csdnimg.cn/20190215154335390.png" alt="，">  |（3.14）<br>这样我们就可以在细化后的图像中找到细节点(端点和分叉点)，并记录它们在图中的相对位置。<br><img src="https://img-blog.csdnimg.cn/20190215154459711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图4-1 指纹图像特征点提取结果</p><h2 id="4-2-假特征点的去除"><a href="#4-2-假特征点的去除" class="headerlink" title="4.2 假特征点的去除"></a>4.2 假特征点的去除</h2><p>这样得到的特征中存在由指纹质量、摄入噪声等原因造成的很多假特征，如下图3-12所示(a)和(b)中产生了假的端点；(c)和(d)中形成了错误的断开和连接；(e)中显示的是一个由不平滑的脊引起的毛刺，出现了假端点和假分叉两种特征：(f)~(g)是几种错误连接的例子，分别称为桥形、三角形、梯形结构。<br><img src="https://img-blog.csdnimg.cn/20190215154505777.png" alt="在这里插入图片描述"><br>图4-2 伪特征点</p><p>造成伪特征的原因有很多，指纹提取、二值化及细化等过程均可能引入伪特征。伪特征的存在将影响指纹的比对，降低识别率．(1)伪特征的分析。对于取端点及叉点作为特征算法，伪特征主要指图4-1中所示的几种种：毛刺；假桥；岛屿；断脊；短脊。对于这些伪特征的消除，文献[10]提出了基于纹线跟踪的后处理方法，文献[13]提出了基于知识的指纹后处理方法，将指纹后处理与指纹原灰度图联系了起来，文献[14]提出了基于统计与结构的指纹后处理方法。</p><p>分析这几种种伪特征，它们带来的伪特征点总是成对在近距离内出现而且除断脊外均有短脊线相连接。毛刺、短脊及岛屿均为从一个特征点出发经过很小的步长到达另一个特征点，可以采用沿脊线搜索特征点的方法去除伪特征对。假桥、断脊则要考虑伪特征的角度关系。</p><p>伪特征的去除，由于提取的特征集合P(P1，P2．．．，P n)全为端点与叉点，端点的伪形态有毛刺端点、短脊端点与断脊端点；叉点的伪形态有毛刺叉点、假桥叉点与岛屿叉点。我们可以分别从端点与叉点出发搜索其邻域，判断其真伪，全部伪特征被分为伪端点与伪叉点予以去除。根据上面的分析，伪特征可按如下规则去除：</p><ul><li><p>① 去除孤立点与边界点，边界点定义为掩膜值为0的任何区域的距离小于阈值的特征点。</p></li><li><p>② 对于各端点Pi，从该特征点出发沿脊线搜索，若经过很小的步长到达另一个特征点即搜索到一个脊线点满足C n(P)!=2或S n(P)!=2则分别当作短脊、毛刺所带来的伪特征点予以去除；若该端点不是毛刺、短脊引起的伪端点，则搜索其邻域是否有端点Pj满足Pi与Pj之间没有脊线，A与Ai或Aj的差小于30°即&lt;30°或&lt;30°，据此来判断该端点是否为断脊。</p></li><li><p>③ 对于各叉点Pi，从该特征点出发沿脊线搜索其中一个分支，若有两个分支经过很小的步长均到达同一个叉点则当作岛屿予以去除；若有一个分支经过很小的步长到达另一个叉点P且满足70°&lt;110°或70°&lt;&lt;110°，则可当作假桥剔除；若有一个分支经过很小的步长到达另一个端点Pj则可当作毛刺剔除。</p></li></ul><hr><h1 id="第五章-指纹图像的匹配与实验结果"><a href="#第五章-指纹图像的匹配与实验结果" class="headerlink" title="第五章 指纹图像的匹配与实验结果"></a>第五章 指纹图像的匹配与实验结果</h1><h2 id="5-1-指纹图像匹配方法简介"><a href="#5-1-指纹图像匹配方法简介" class="headerlink" title="5.1 指纹图像匹配方法简介"></a>5.1 指纹图像匹配方法简介</h2><p>指纹匹配要解决的是对两幅给定指纹图像的特征模式进行比对，判断这两幅图像是否来自同一个人的同一手指。指纹匹配是自动指纹识别的最后一步，也是非常关键的一步。</p><p>指纹图像匹配方面，主要有基于图像，脊线结构和特征点的方法。基于特征点的匹配算法具有简单、快速、鲁棒性等优点。目前最为常用的方法是FBI提出的细节点坐标模型来做细节匹配。它利用脊线上的端点和分叉点这两种关键点来鉴定指纹。通过将细节点表示为点模式，一个指纹识别问题可以转化为一个点模式匹配问题。点匹配算法是通过某些变换，如平移变换、旋转变化、伸缩变换，可以把两个点集中的对应点匹配起来。对于基于细节点的匹配思路大体分两种：基于直角坐标系的特征识别和基于极坐标系的特征识别。</p><p>点模式匹配将注册指纹和待识指纹的特征点定义为两个点集和P和Q通过平移和旋转使得两个点集重合点数最多。点模式匹配是著名的数学难题。目前的指纹识别系统主要采用基于节点的匹配方法，即点模式匹配。从模板指纹和输入指纹中选取一个节点作为参考节点对，在进行节点匹配时先利用基准点将指纹对齐，然后再评估其它节点的匹配程度。很多情况下选用图片的中心点。当然，他所带来的难题有：</p><ul><li>(1) 如何快速找到基准点把两幅指纹对齐。</li><li>(2) 图片A中有图片B中不存在的点，集合B中也有图片A中不存在的点，匹配的时候如何处理这些点。</li><li>(3) 由于指纹存在变形位移，任何一对匹配点之间都不是绝对相等，而是存在一定的差距。设计算法的时候，必须要有一定的容错能力。</li><li>(4) 最终得到的是两幅指纹的相似度，怎么确定相似度的计算方式。<br>另外，计算匹配的时间即效率性也很重要。参考点在指纹图像的识别中是也至关重要的。能获得参考点表明从被识别图像中获得的任意比特流与登记图像中获得的比特流相近，则有可能得出两图像相同的结果；没有参考点表明被识别图像完全是另一不同图像。</li></ul><h2 id="5-2-本文的匹配方法"><a href="#5-2-本文的匹配方法" class="headerlink" title="5.2 本文的匹配方法"></a>5.2 本文的匹配方法</h2><p>指纹匹配是模式识别中的一个有名的难题。它是对于两个含有不同数量的点集 和，如何找出它们之间的匹配关系。因此，一个好的指纹匹配算法应该能够有效地解决两个点集间的几何不变量问题。人们对一般的指纹匹配提出很多算法，比如松弛算法，其中有的文献只处理了点模式间因平移带来的偏差；也有文献处理了因平移和旋转带来的误差；另外有文献不仅考虑到位移和旋转误差，还处理了因伸缩尺度不同而带来的误差。</p><p>指纹图像匹配中的两个点集和，其中从第一幅图像抽取，有个特征点构成，从第二幅图像抽取，有个特征点构成，即和。因为在实际应用中，点的相对位置存在误差，所以它们之间的匹配就是对每一个特征点分别提取再相对于中心点取得的向量进行比对的过程，使两个点集有最大数量点对之间存在稳定的一一对应关系。</p><p>对于点集中的特征点，这里用方向和方向的坐标来描述，指纹图像每一特征点是一个五维向量，其中分别是该点的坐标位置，是特征点相对于中心点的方向向量，为特征点的类型(即是分叉点还是端点)，为特征点相对于中心点的距离向量。</p><p>可以通过一些合适的算法，通过在一定范围搜索参数空间，计算其匹配支持数，也就是在该参数空间里，有多少指纹对匹配。当匹配支持数最大时，也就得到了所需要的结果。<br>算法步骤：</p><p>（1）分别读取两个特征点集合中的特征点；<br>（2）对特征点进行分类。定义取“1”时，属于特征点端点分类，取“2”时，属于特征点分叉点分类；<br>（3）分别计算他们相对于中心点的方向向量和距离向量；<br>（4）若两特征点的距离向量之差小于“2”且梁特征点的方向向量小于等于，则认为两特征点匹配；<br>（5）若不满足（4）的条件则认为不匹配，并删除。</p><p>一般能找到13个相同的特征就可以认为这两个指纹出自同一个手指，但从匹配来看，平均50个特征匹配点会有3～4个误配，于是将成功匹配点设置为&gt;30个，认为是出自同一个手指。<br>匹配成功的特征点：端点用红色‘o’标注，分叉点用绿色标注‘o’。</p><h2 id="5-3-实验结果"><a href="#5-3-实验结果" class="headerlink" title="5.3 实验结果"></a>5.3 实验结果</h2><p>提取细化后图像的中心点，用 ‘o’标注。如图5－1所示：<br>a|b<br>–|–<br><img src="https://img-blog.csdnimg.cn/20190215154940155.png" alt="在这里插入图片描述">|<img src="https://img-blog.csdnimg.cn/20190215154944733.png" alt="在这里插入图片描述"><br>提取中心点（a－１） |          提取中心点（b－１）<br>图5－1 提取中心点后的细化图像</p><p>指纹图像细化处理后，标注特征点和中心点。特征端点用’o’标注，特征分叉点用’+’标注，中心点用’*’标注。如图4-2所示：<br>a|b<br>–|–<br><img src="https://img-blog.csdnimg.cn/20190215155011829.png" alt="在这里插入图片描述">|<img src="https://img-blog.csdnimg.cn/20190215155020757.png" alt="在这里插入图片描述"><br>特征提取图像（ｃ－2） |       特征提取图像（ｄ－2）</p><p>图5－2特征点提取后的图像</p><p>一般能找到13个相同的特征就可以认为这些指纹出自同一个手指，但从匹配来看，平均50个特征匹配点会有3～4个误配，于是将成功匹配点设置为&gt;30个，认为是出自同一个手指。匹配成功的特征点：端点用红色’o’标注，分叉点用绿色标注’o’。如图5－3所示：</p><p><img src="https://img-blog.csdnimg.cn/20190215155035190.png" alt="在这里插入图片描述"><br>图5-3 匹配后的图像</p><hr><h1 id="第六章-展望"><a href="#第六章-展望" class="headerlink" title="第六章 展望"></a>第六章 展望</h1><h2 id="6-1-系统结果及总结"><a href="#6-1-系统结果及总结" class="headerlink" title="6.1 系统结果及总结"></a>6.1 系统结果及总结</h2><p>本论文完成了指纹识别算法的设计与一个简单的实现，该算法主要分为三大<br>部分：</p><ul><li>指纹图像的预处理、</li><li>指纹特征提取</li><li>指纹图像的匹配(比对)。</li></ul><p>指纹图像预处理过程主要分为三个部分：<br>灰度图像方向图滤波去噪、图像二值化及图像细化三个部分。自适应二值化方法将灰度图像转化为二值图像，灰度图滤波去噪后，我们采用局部阈值取值的二值图像，在处理过程中，我们充分考虑到指纹图像的分布特点，对图像进行分块处理，设立动态阈值，细化过程我们分析邻域象素点的连通情况，采用逐层迭代的方法，对图像进行扫描，由周边向中间逐层细化，这样大大加快了处理速度，降低了处理的复杂性，同时细化之后，对细化图像再进行去噪。</p><p>整个预处理过程结果如下图6-1所示：<br><img src="https://img-blog.csdnimg.cn/20190215155147753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图6-1</p><p>指纹的特征提取主要提取脊线端点和分叉点两种细节特征及它们的位置。首先通过脊线跟踪将每一条脊线上的所有像素点按顺序编为一组，提取出端点和分叉点；</p><p>然后，根据端点和分叉点的拓扑特点，去除伪特征点。考虑到输入的指纹图像存在着不可避免的平移、旋转、伸缩、扭曲，为了提高细节信息的可靠性，本文是求出细节特征点的相对中心点的相对位置和角度进行匹配。</p><p>匹配结果如下图6-2所示：<br><img src="https://img-blog.csdnimg.cn/20190215155155493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图6-2</p><h2 id="6-2-下一步工作"><a href="#6-2-下一步工作" class="headerlink" title="6.2 下一步工作"></a>6.2 下一步工作</h2><p>在本次设计中，我发现指纹识别系统的设计过程中还存在着一些较难解决的瓶颈问题，阻碍了指纹识别系统的应用和普及。今后指纹识别整体的研究方向主要致力于解决这些问题，提高系统的识别率。这些问题如下：</p><p>1)指纹方向图(或方向场)的求取。</p><p>预处理的结果主要依赖于方向图的估计和求取。由于指纹图像中存在奇异点(中心点和三角点)，在奇异点附近，方向的变化特别剧烈，此时要估计出正确的方向是有一定困难的。不仅如此，奇异点主要是利用检测方向场变化的剧烈程度实现的，而采用分区估计方向的方法有可能模糊方向场的这种剧烈变化，会对后面的奇异点检测造成一定的影响。此外，由于输入的指纹图像存在平移、旋转和尺度变化，而划分子块时并不考虑这种变化，因此同一个手指在不同时间获得的指纹图像，其所得到的方向场是不同的，这对后面的预处理过程、特征提取、指纹分类、指纹比对会产生巨大的影响。</p><p>2)细节特征的提取。</p><p>现有的几乎所有的细节提取算法的性能都严重依赖于输入的指纹图像的质<br>量。而由于诸多的因素(譬如，指纹表面的异常信息，胎记，偶然的污迹，取像<br>系统的问题等等)，指纹图像中并不是总有完整的脊的结构。因此，可靠的细节<br>提取算法不能假定有很好的脊的结构，而应该对指纹图像的质量有很好的容忍<br>性。</p><p>3)匹配算法中的若干问题。</p><p>在基于细节的空间坐标以及细节点的方向，也就是细节的空间相对位置关系<br>的匹配方法中，初始匹配位置的对齐，即如何确定基准点或者说是坐标原点的定<br>位问题，包括原点和方向；尽管分类以及细分子类已经大大减少了匹配时搜索的<br>范围，但是对于大规模的指纹库来说，仍然需要进一步缩小指纹匹配的搜索范围，<br>同时引入辅助识别的信息；在指纹采集的过程中，指纹图像存在非线性变形，如<br>何克服这种变形。</p><p>当然，指纹识别的识别率以及识别速度的提高还取决于指纹采集设备精度以及处理速度的提高，但是算法的优劣仍然是影响系统性能的关键因素。</p><h2 id="6-3-展望"><a href="#6-3-展望" class="headerlink" title="6.3 展望"></a>6.3 展望</h2><p>总的来说，本文在针对指纹识别的各个环节尤其是指纹图像的预处理进行了相当的探索工作，当然这只是一个开始，许多地方有待于进一步的研究改进，还有很多后续工作有待于完成，例如在指纹图像的特征匹配方面还有很多工作有待于完善。</p><p>指纹识别技术是国内外研究的热点问题，实现指纹识别系统的实时性、网络化、提高系统识别率是人们研究的目标。相信不久以后，指纹识别将广</p><p>泛应用于我们的生活，为人们提供更方便更快捷的服务。</p><h1 id="全套资料下载链接"><a href="#全套资料下载链接" class="headerlink" title="全套资料下载链接"></a>全套资料下载链接</h1><p><a href="https://download.csdn.net/download/wangyaninglm/10957731" target="_blank" rel="noopener">https://download.csdn.net/download/wangyaninglm/10957731</a><br>如有需要，请加群免费赠送</p><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] R Clarke．Human identification in information systems：Management challenges and public policy issues[J]．Info．Technol．Peopie，1994.7(4)：6~37．<br>[2] 张志涌．精通MATLAB 6．5版[M]．北京：北京航空航天大学出版社.2003.3．<br>[3] 乔治宏．基于细节结构的指纹特征提取及匹配算法研究[D][硕士学位论文]．北京：北京工业大学硕士学位论文.2004，5．<br>[4] 罗希平，田捷．自动指纹识别中的图像增强和细节匹配算法[J]．软件学报，2002.5.13(5)：946~956．<br>[5] Dario Maio，Member，IEEE，and Davide  Maltoni．Direct grayscale minutiae detection in fingerprints[J]．IEEE transactions on pattern analysis and machine intelligence，1997，19(1)：27~40．<br>[6] 王家文，曹字．图形图像处理[M]．北京：国防工业出版社，2004.5．<br>[7] 田捷，杨鑫．生物特征识别技术理论与应用[M]．北京：电子工业出版社，2005．<br>[8] 张显全，唐莹，郭明明．一种改进的指纹快速细化算法[J]．广西科学院学报，2006，22(4)：237~239．<br>[9] 刘文星，王肇圻，母国光．纹线跟踪及其在细化指纹后处理中的应用[J]．光电子,激光，2002，13(2)：184~187．<br>[10] 缪绍纲．数字图像处理——活用MATLAB[M]．成都：西南交通大学出版社，2001<br>[11] 徐晓明.指纹图像的预处理及特征提取[硕士学位论文]，大连：大连理工大学，2005<br>[12]苏彦华．Visual C++数字图像识别技术典型案例[M]．北京：人民邮电出版社，2004．<br>[13]0’ORMANl, NICKERSONJN. An approach to fingerprintfilter design[J]．Pattern Recognition，1989，22(1)：29~38．<br>[14]林国清，李见为，王崇文．指纹图像预处理方法的研究[J]．光电工程，2002，29(5)：56—58．<br>[15]回红，陈祥献，周泓，等．Gabor函数实现基于结构的指纹识别[J]．浙江大学学报(工学版)，2004，38(6)：712~716．<br>[16]郭桂容．模糊模式识别[M]．长沙：国防科技大学出版社，1993．<br>[17]Kalle Kava．Fingerprint Classification[J]．Pattern Recognition，1996，<br>29(3)：389~404．<br>[18] 沈学宁．从指纹的原灰度图像上识别细节特征[J]．模式识别与人工智能，I989，2(4)：53~57．<br>[19] 简兵．基于脊线跟踪的指纹图细节提取算法[J]．电路与系统学报，2001,6(3)：1~5．<br>2002，16(1)：53~67<br>[20]QingHan Xiao．Fingerprint Image Post—Processing：A Combined Sta—iistical and Structural Approach[J]．Pattern Recognition，1991，24(10)：985~992．<br>[21] 韩伟红．指纹自动识别系统中的预处理技术[J]计算机研究与发展，1997，34(2):913~920．<br>[22] 马笑潇．指纹自动识别系统中的关键技术—— 方向图[J]，重庆大学学报，2001，24(3).91~94．<br>[23]JAIN A K．FARROKHNIA．F．Unsupervised Texture Segmentation Using Gabor Filters[J]．Pattern Recognition，1991,24(12)：l167~1186，<br>[24] 赵书兰.MATLAB R2008数字图像处理与分析实例教程[M].北京:化学工业出版社.2009,6.</p>]]></content>
      
      
      <categories>
          
          <category> 老王和他的IT界朋友们 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图形图像处理 </tag>
            
            <tag> 指纹识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/01/21/hello-world/"/>
      <url>/2019/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自然语言处理简介（1）----服务梳理与传统汉语分词</title>
      <link href="/2018/11/11/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AE%80%E4%BB%8B%EF%BC%881%EF%BC%89----%20%E6%9C%8D%E5%8A%A1%E6%A2%B3%E7%90%86%E4%B8%8E%E4%BC%A0%E7%BB%9F%E6%B1%89%E8%AF%AD%E5%88%86%E8%AF%8D/"/>
      <url>/2018/11/11/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AE%80%E4%BB%8B%EF%BC%881%EF%BC%89----%20%E6%9C%8D%E5%8A%A1%E6%A2%B3%E7%90%86%E4%B8%8E%E4%BC%A0%E7%BB%9F%E6%B1%89%E8%AF%AD%E5%88%86%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p><meta name="referrer" content="no-referrer"><br>同步发表于：本人所属公司博客&lt;知盛数据集团西安研发中心技术博客&gt;<br><a href="https://blog.csdn.net/Insightzen_xian/article/details/81168829" target="_blank" rel="noopener">https://blog.csdn.net/Insightzen_xian/article/details/81168829</a></p><p>@<a href="文章大纲">toc</a></p><hr><p><img src="https://img-blog.csdn.net/2018072316045736?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>大家好，今天和大家分享一下，我在自然语言处理（Natural Language Processing，NLP）的一些学习经验和心得体会。<br>主要内容分为两大部分，第一部分对汉语自然处理的服务提供商及其服务内容做一个简单的梳理，让大家能够更好的了解目前的技术手段，技术现状。第二部分，从汉语语言学，到传统的汉语自然语言处理方法的基础，汉语分词，力求在微观上让大家对汉语自然语言处理有一个全方位的认识。</p><h1 id="1-Nlp技术体系简介"><a href="#1-Nlp技术体系简介" class="headerlink" title="1.Nlp技术体系简介"></a>1.Nlp技术体系简介</h1><p>NLP 是人工智能和语言学领域的交叉学科，用于分析、理解和生成自然语言，以方便人和计算机设备进行交流，以及人与人之间的交流</p><p>自然语言处理在广义上分为两大部分：</p><ul><li>第一部分为自然语言理解，是指让计算机懂人类的语言。</li><li>第二部分为自然语言生成，是指把计算机数据转化为自然语言。</li></ul><p>NLP 技术按照由浅入深可以分为三个层次，分别为：</p><ul><li><strong>基础技术</strong></li><li><strong>核心技术</strong></li><li><strong>NLP+</strong></li></ul><p><img src="https://img-blog.csdn.net/20180723160510235?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="1-1-基础技术"><a href="#1-1-基础技术" class="headerlink" title="1.1 基础技术"></a>1.1 基础技术</h2><p>这三个层次中，基础技术主要是对自然语言中的基本元素进行表示和分析，比如词汇，短语，句子。</p><p>词汇短语分析中，大家熟知的分词技术，就是为了解决如下问题，比如：我去北京大学玩，北京大学独立成词，而不是分成北京和大学。</p><p>句法语义分析：对于给定的句子，进行分词、词性标记、命名实体识别和链接、句法分析、语义角色识别和多义词消歧。</p><h2 id="1-2-Nlp-核心技术"><a href="#1-2-Nlp-核心技术" class="headerlink" title="1.2 Nlp 核心技术"></a>1.2 Nlp 核心技术</h2><p>NLP 的核心技术是建立在基础技术之上的的技术产出，基础技术中如词法，句法的分析越准确，核心技术的产出才能越准确。核心技术主要包括以下几个方面：</p><ul><li><p><strong>信息抽取</strong><br>从给定文本中抽取重要的信息，比如，时间、地点、人物、事件、原因、结果、数字、日期、货币、专有名词等等。通俗说来，就是要了解谁在什么时候、什么原因、对谁、做了什么事、有什    么结果。涉及到实体识别、时间抽取、因果关系抽取等关键技术。</p></li><li><p><strong>文本挖掘（或者文本数据挖掘）</strong><br>包括文本聚类、分类、信息抽取、摘要、情感分析以及对挖掘的信息和知识的可视化、交互式的表达界面。目前主流的技术都是基于统计机器学习的。</p></li><li><p><strong>机器翻译</strong><br>把输入的源语言文本通过自动翻译获得另外一种语言的文本。根据输入媒介不同，可以细分为文本翻译、语音翻译、手语翻译、图形翻译等。机器翻译从最早的基于规则的方法到二十年前的基于统计的方法，再到今天的基于神经网络（编码-解码）的方法，逐渐形成了一套比较严谨的方法体系。</p></li><li><p><strong>信息检索</strong><br>对大规模的文档进行索引。可简单对文档中的词汇，赋之以不同的权重来建立索引，也可利用（句法分析，信息抽取，文本发掘）来建立更加深层的索引。在查询的时候，对输入的查询表达式比如一个检索词或者一个句子进行分析，然后在索引里面查找匹配的候选文档，再根据一个排序机制把候选文档排序，最后输出排序得分最高的文档。</p></li></ul><h2 id="1-3-NlP-（高端技术）"><a href="#1-3-NlP-（高端技术）" class="headerlink" title="1.3 NlP+（高端技术）"></a>1.3 NlP+（高端技术）</h2><p>能够真正影响我们生活的黑科技，能够通过图灵测试的机器问答系统，我们可以称之为NLP+</p><ul><li><p><strong>问答系统</strong><br>对一个自然语言表达的问题，由问答系统给出一个精准的答案。需要对自然语言查询语句进行某种程度的语义分析，包括实体链接、关系识别，形成逻辑表达式，然后到知识库中查找可能的候选答案并通过一个排序机制找出最佳的答案。</p></li><li><p><strong>对话系统</strong><br>系统通过一系列的对话，跟用户进行聊天、回答、完成某一项任务。涉及到用户意图理解、通用聊天引擎、问答引擎、对话管理等技术。此外，为了体现上下文相关，要具备多轮对话能力。</p></li><li><p><strong>AI助手</strong><br>目前自然语言处理的前沿，已经与人类真假难辨<br><a href="https://v.qq.com/x/page/w0648xqraxj.html" target="_blank" rel="noopener">https://v.qq.com/x/page/w0648xqraxj.html</a></p></li></ul><p>参考：<br><a href="https://www.zhihu.com/question/19895141/answer/149475410" target="_blank" rel="noopener">https://www.zhihu.com/question/19895141/answer/149475410</a></p><hr><h1 id="2-知名NLP-服务系统简介"><a href="#2-知名NLP-服务系统简介" class="headerlink" title="2.知名NLP 服务系统简介"></a>2.知名NLP 服务系统简介</h1><p>以下我们通过一些知名中文NLP服务提供商，包括我们熟知的云服务提供商BAT ,aws，以及两家科研院所的系统简介，来介绍以及宏观认识NLP的各种技术手段和应用场景。</p><p>首先介绍的是两家NLP基础分析，准确率很高的科研院所 的产品，源自北理工和哈工大，之后我们介绍知名云服务提供商的产品。</p><h2 id="2-1汉语分词系统ICTCLAS"><a href="#2-1汉语分词系统ICTCLAS" class="headerlink" title="2.1汉语分词系统ICTCLAS"></a>2.1汉语分词系统ICTCLAS</h2><p>主页：<a href="http://ictclas.nlpir.org/" target="_blank" rel="noopener">http://ictclas.nlpir.org/</a><br>在线演示系统：<a href="http://ictclas.nlpir.org/" target="_blank" rel="noopener">http://ictclas.nlpir.org/</a><br>Python版本：<a href="https://github.com/tsroten/pynlpir" target="_blank" rel="noopener">https://github.com/tsroten/pynlpir</a><br>（需要频繁更新key）<br><a href="https://blog.csdn.net/sinat_26917383/article/details/77067515" target="_blank" rel="noopener">https://blog.csdn.net/sinat_26917383/article/details/77067515</a></p><p><img src="https://img-blog.csdn.net/20180724110940533?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>对于习总书记这篇新闻稿 的实体抽取结果<br><a href="http://news.163.com/18/0715/14/DMOTHJEK000189FH.html" target="_blank" rel="noopener">http://news.163.com/18/0715/14/DMOTHJEK000189FH.html</a></p><p>该系统为汉语自然语言处理领域顶尖大牛，北京理工大学张华平博士20年的专业技术积累，NShort 革命性分词算法的发明者。</p><p>主要功能包括中文分词；英文分词；<strong>中英文混合分词</strong>，词性标注；命名实体识别；新词识别；关键词提取；支持用户专业词典与微博分析。NLPIR系统支持多种编码、多种操作系统、多种开发语言与平台。</p><p>该平台的特点为：功能丰富，分词，语义，实体发现准确率高，近期发布了最新的2018版。<br>（与熟知的jieba，ltp，清华thulac）</p><h2 id="2-2-哈工大语言云（Language-Technology-Platform，LTP）"><a href="#2-2-哈工大语言云（Language-Technology-Platform，LTP）" class="headerlink" title="2.2 哈工大语言云（Language Technology Platform，LTP）"></a>2.2 哈工大语言云（Language Technology Platform，LTP）</h2><p><a href="https://www.ltp-cloud.com/" target="_blank" rel="noopener">https://www.ltp-cloud.com/</a></p><p>源自哈工大知名的分词插件ltp，准确率高</p><p>Python版本：<a href="https://github.com/HIT-SCIR/pyltp" target="_blank" rel="noopener">https://github.com/HIT-SCIR/pyltp</a></p><p><img src="https://img-blog.csdn.net/20180724111044827?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>语言技术平台（Language Technology Platform，LTP）是哈工大社会计算与信息检索研究中心历时十年开发的一整套中文语言处理系统。LTP制定了基于XML的语言处理结果表示，并在此基础上提供了一整套自底向上的丰富而且高效的中文语言处理模块（包括词法、句法、语义等6项中文处理核心技术），以及基于动态链接库（Dynamic Link Library, DLL）的应用程序接口、可视化工具，并且能够以网络服务（Web Service）的形式进行使用。</p><p>“语言云”<br> 以哈工大社会计算与信息检索研究中心研发的 “语言技术平台（LTP）” 为基础，为用户提供高效精准的中文自然语言处理云服务。 使用 “语言云” 非常简单，只需要根据 API 参数构造 HTTP 请求即可在线获得分析结果，而无需下载 SDK 、无需购买高性能的机器，同时支持跨平台、跨语言编程等。 2014年11月，<strong>哈工大联合科大讯飞公司</strong>共同推出 “哈工大-讯飞语言云”，借鉴了讯飞在全国性大规模云计算服务方面的丰富经验，显著提升 “语言云” 对外服务的稳定性和吞吐量，为广大用户提供电信级稳定性和支持全国范围网络接入的语言云服务，有效支持包括中小企业在内开发者的商业应用需要。<br>有关更多语言云API的使用方法，请参考：<a href="http://www.ltp-cloud.com/document/" target="_blank" rel="noopener">http://www.ltp-cloud.com/document/</a></p><p>windows 下安装pyltp的话，应该是需要安装visual studio, 由于LTP是用c++写的，pyltp也是基于它封装而成的，需要调用 cl.exe 完成源码的编译。然后下载源码，使用python setup.py install 的方式进行安装就可以了。</p><h2 id="2-3-Amazon-Comprehend"><a href="#2-3-Amazon-Comprehend" class="headerlink" title="2.3 Amazon Comprehend"></a>2.3 Amazon Comprehend</h2><p><img src="https://img-blog.csdn.net/20180724112541674?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><a href="https://amazonaws-china.com/cn/comprehend/?nc2=h_a1" target="_blank" rel="noopener">https://amazonaws-china.com/cn/comprehend/?nc2=h_a1</a></p><p>Amazon Comprehend 是一项自然语言处理 (NLP) 服务，可利用机器学习发现文本中的见解和关系。Amazon Comprehend 可以识别文本语言，提取关键的短语、地点、人物、品牌或事件，了解文本的含义是肯定还是否定，还可以自动按主题整理一系列文本文件。</p><p>您可使用 Amazon Comprehend API 分析文本，并将结果进行广泛应用，包括客户意见分析、智能文档搜索以及 Web 应用程序的内容个性化设置。</p><p>该服务不断地通过各种信息来源 (包括世界上最大的自然语言数据集之一：<strong>Amazon.com 商品描述和买家评论</strong>) 学习和提升，    以跟上语言的发展演变。</p><p>实例：利用 AWS Comprehend 打造近实时文本情感分析<br><a href="https://amazonaws-china.com/cn/blogs/china/realizing-near-real-time-text-sentiment-analysis-with-aws-comprehend/" target="_blank" rel="noopener">https://amazonaws-china.com/cn/blogs/china/realizing-near-real-time-text-sentiment-analysis-with-aws-comprehend/</a></p><p>可以看到图中，aws 使用kibana 仪表盘和 Comprehend 服务组成了一个实时的电影评论实时分析系统，其实主要功能就是实现了分词和内容来源的地理位置统计，看起来很炫酷。</p><h2 id="2-4-阿里云NLP"><a href="#2-4-阿里云NLP" class="headerlink" title="2.4 阿里云NLP"></a>2.4 阿里云NLP</h2><p><img src="https://img-blog.csdn.net/20180724112553862?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><a href="https://data.aliyun.com/product/nlp?spm=5176.8142029.388261.396.63f36d3eoZ8kNK" target="_blank" rel="noopener">https://data.aliyun.com/product/nlp?spm=5176.8142029.388261.396.63f36d3eoZ8kNK</a></p><p>阿里的简介为：</p><pre><code>自然语言处理是为各类企业及开发者提供的用于文本分析及挖掘的核心工具，已经广泛应用在电商、文化娱乐、金融、物流等行业客户的多项业务中。自然语言处理API可帮助用户搭建内容搜索、内容推荐、舆情识别及分析、文本结构化、对话机器人等智能产品，也能够通过合作，定制个性化的解决方案。</code></pre><p>现在购买资源包，享受梯度优惠的同时，基础版API更有每天5万次免费调用额度。</p><p>值得注意的是阿里云的nlp 服务刚发布不到1年，应该算是领域内的<strong>新手</strong>，语料库应该和aws 一样，主要为商品描述和评论，所以它有一项功能叫做<strong>商品评价解析</strong></p><p><img src="https://img-blog.csdn.net/20180725095432843?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="2-5-腾讯云NLP"><a href="#2-5-腾讯云NLP" class="headerlink" title="2.5 腾讯云NLP"></a>2.5 腾讯云NLP</h2><p><img src="https://img-blog.csdn.net/20180724112612322?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><a href="https://cloud.tencent.com/product/nlp" target="_blank" rel="noopener">https://cloud.tencent.com/product/nlp</a></p><p>界面友好，功能丰富，语料库为海量综合性语料库</p><p>腾讯云智在线演示系统<br><a href="http://nlp.qq.com/semantic.cgi" target="_blank" rel="noopener">http://nlp.qq.com/semantic.cgi</a></p><h2 id="2-6-百度语言处理基础技术"><a href="#2-6-百度语言处理基础技术" class="headerlink" title="2.6 百度语言处理基础技术"></a>2.6 百度语言处理基础技术</h2><p><img src="https://img-blog.csdn.net/20180724112624527?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><a href="http://ai.baidu.com/tech/nlp" target="_blank" rel="noopener">http://ai.baidu.com/tech/nlp</a><br>依托海量检索数据，并且搜索引擎本身就是NLP 最终的结果产出，所以在NLP领域，百度无论是语料库丰富程度，技术先进性，以及服务多样性等都是遥遥领先其他厂家，基本上可以算作是中文NLP服务提供商的业界最佳实践。</p><h3 id="2-6-1-功能丰富且技术领先"><a href="#2-6-1-功能丰富且技术领先" class="headerlink" title="2.6.1 功能丰富且技术领先"></a>2.6.1 功能丰富且技术领先</h3><pre><code>- 词法分析   - 词向量表示 - 词义相似度 - 评论观点抽取- 文章标签  - 依存句法分析- DNN语言模型- 短文本相似度- 情感倾向分析- 文章分类- 对话情绪识别- 文本纠错</code></pre><p>等12个大类的服务,对于个人开发者来说，配比了免费额度，对于词向量来说，每秒免费的额度是5个词，基本可以够用拿来做点有趣的事情了。</p><p>从图中结果也可以看出，百度对词向量相似度的分析和我用余弦相似度的结果一样，可以推断出百度的算法比较接地气。</p><h3 id="2-6-2-DNN语言模型"><a href="#2-6-2-DNN语言模型" class="headerlink" title="2.6.2 DNN语言模型"></a>2.6.2 DNN语言模型</h3><p>Deep Neural Network（DNN）模型是基本的深度学习框架，DNN语言模型是通过计算给定词组成的句子的概率，从而判断所组成的句子是否符合客观语言表达习惯</p><p>通常用于机器翻译、拼写纠错、语音识别、问答系统、词性标注、句法分析和信息检索等<br>百度这个模型是大厂中首个公开提供服务接口的深度学习语言模型。</p><h3 id="2-6-3-调用方式简单"><a href="#2-6-3-调用方式简单" class="headerlink" title="2.6.3 调用方式简单"></a>2.6.3 调用方式简单</h3><p>提供更加简单的调用方式：类似aws boto3<br>如果已安装pip，执行pip install baidu-aip即可<br>Sdk 方式，安装<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipNlp</span><br><span class="line"> <span class="string">""" 你的 APPID AK SK """</span> </span><br><span class="line">APP_ID = <span class="string">'你的 App ID'</span> </span><br><span class="line">API_KEY = <span class="string">'你的 Api Key'</span> </span><br><span class="line">SECRET_KEY = <span class="string">'你的 Secret Key'</span> </span><br><span class="line">client = AipNlp(APP_ID, API_KEY, SECRET_KEY)</span><br><span class="line"></span><br><span class="line">word = <span class="string">"张飞"</span></span><br><span class="line"> <span class="string">""" 调用词向量表示 """</span> </span><br><span class="line">client.wordEmbedding(word);</span><br></pre></td></tr></table></figure></p><h2 id="2-7-准确率（离线模型靠不住，在线模型可更新）"><a href="#2-7-准确率（离线模型靠不住，在线模型可更新）" class="headerlink" title="2.7 准确率（离线模型靠不住，在线模型可更新）"></a>2.7 准确率（离线模型靠不住，在线模型可更新）</h2><p>THULAC实验室在统一测试环境下，对若干流行分词软件和THULAC进行了测试，使用的模型为各分词软件自带模型。THULAC使用的是随软件提供的简单模型Model_1。评测环境为 Intel Core i5 2.4 GHz 评测结果如下：</p><p>msr_test（560KB）</p><table><thead><tr><th>Algorithm</th><th>Time</th><th>Precision</th><th>Recall</th></tr></thead><tbody><tr><td>LTP-3.2.0</td><td>3.21s</td><td>0.867</td><td>0.896</td></tr><tr><td>ICTCLAS(2015版)</td><td>0.55s</td><td>0.869</td><td>0.914</td></tr><tr><td>jieba</td><td>0.26s</td><td>0.814</td><td>0.809</td></tr><tr><td>THULAC</td><td>0.62s</td><td>0.877</td><td>0.899</td></tr></tbody></table><p>pku_test（510KB）</p><table><thead><tr><th>Algorithm</th><th>Time</th><th>Precision</th><th>Recall</th></tr></thead><tbody><tr><td>LTP-3.2.0</td><td>3.83s</td><td>0.960</td><td>0.947</td></tr><tr><td>ICTCLAS(2015版)</td><td>0.53s</td><td>0.939</td><td>0.944</td></tr><tr><td>jieba</td><td>0.23s</td><td>0.850</td><td>0.784</td></tr><tr><td>THULAC</td><td>0.51s</td><td>0.944</td><td>0.908</td></tr></tbody></table><p>除了以上在标准测试集上的评测，我们也对各个分词工具在大数据上的速度进行了评测，结果如下：</p><p>CNKI_journal.txt（51 MB）</p><table><thead><tr><th>Algorithm</th><th>Time</th><th>Speed</th></tr></thead><tbody><tr><td>LTP-3.2.0</td><td>348.624s</td><td>149.80KB/s</td></tr><tr><td>ICTCLAS(2015版)</td><td>106.461s</td><td>490.59KB/s</td></tr><tr><td>jieba</td><td>22.5583s</td><td>2314.89KB/s</td></tr><tr><td>THULAC</td><td>42.625s</td><td>1221.05KB/s</td></tr></tbody></table><p>本文截取清华和部分网络评测，以及个人使用结果发现。最好使用的开源组件如python的jieba 分词准确度并不是很高，这是由于离线的模型很难在新词的发现上做出比较好的结果。由于云服务提供商的在线模型一般的更新频率 较快，所以准确度较高。</p><p>清华评测性能对比：<br><a href="http://thulac.thunlp.org/" target="_blank" rel="noopener">http://thulac.thunlp.org/</a><br>基于python 版本的评测：<br><a href="https://blog.csdn.net/riario/article/details/78259877" target="_blank" rel="noopener">https://blog.csdn.net/riario/article/details/78259877</a></p><h2 id="2-8-其他知名提供商"><a href="#2-8-其他知名提供商" class="headerlink" title="2.8 其他知名提供商"></a>2.8 其他知名提供商</h2><p>BosonNLP(界面，接口友好，准确率高)<br><a href="https://bosonnlp.com/demo" target="_blank" rel="noopener">https://bosonnlp.com/demo</a><br><img src="https://img-blog.csdn.net/20180724150443861?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>如果你在网上搜索汉语分词评测，十有八九你会搜索到专注于汉语自然语言处理技术的这家公司，以及下面这张评测结果：<br><img src="https://img-blog.csdnimg.cn/20181209154652370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h1 id="3-NLP开源组件简介"><a href="#3-NLP开源组件简介" class="headerlink" title="3. NLP开源组件简介"></a>3. NLP开源组件简介</h1><p>NLP 领域有非常多的开源组件可以用来快速构建开发的原型，我来简单介绍以下四个知名开源组件</p><h2 id="3-1-NLTK"><a href="#3-1-NLTK" class="headerlink" title="3.1 NLTK"></a>3.1 NLTK</h2><p><a href="http://www.nltk.org/" target="_blank" rel="noopener">http://www.nltk.org/</a></p><ul><li><strong>最常用的自然语言处理库</strong><br>NLTK是一个高效的Python构建的平台，用来处理人类自然语言数据。<strong>基本包含了NLP 中需要用到的所有技术</strong>。<br>它提供了易于使用的接口，通过这些接口可以访问超过50个语料库和词汇资源（如WordNet），还有一套用于分类、标记化、词干标记、解析和语义推理的文本处理库，以及工业级NLP库的封装器和一个活跃的讨论论坛。</li><li><strong>古腾堡项目（Project Gutenberg）</strong><br>NLTK 包含古腾堡项目（Project Gutenberg）中电子文本档案的经过挑选的一小部分文本。该项目大约有57,000 本免费电子图书，放在<a href="http://www.gutenberg.org/上。我们先要用Python" target="_blank" rel="noopener">http://www.gutenberg.org/上。我们先要用Python</a> 解释器加载NLTK 包，然后尝试nltk.corpus.gutenberg.fileids()，当然其中的中文语料也很丰富（都是没有版权的免费文档），比如李白文集，三字经，百家姓等等（要是用这些训练中文模型效果可想而知）</li></ul><h2 id="3-2-Jieba分词"><a href="#3-2-Jieba分词" class="headerlink" title="3.2 Jieba分词"></a>3.2 Jieba分词</h2><p><a href="https://github.com/fxsjy/jieba" target="_blank" rel="noopener">https://github.com/fxsjy/jieba</a></p><p>“结巴”中文分词：做最好的 Python 中文分词组件<br>“Jieba” (Chinese for “to stutter”) Chinese text segmentation: built to be the best Python Chinese word segmentation module.<br>实现基本功能的代码量在一千行左右，词典长度35w ，安装方式友好，简洁，高效，（<strong>但准确性已经跟不上时代</strong>！！！85%）</p><h2 id="3-3-ICTCLAS"><a href="#3-3-ICTCLAS" class="headerlink" title="3.3 ICTCLAS"></a>3.3 ICTCLAS</h2><p><a href="http://ictclas.nlpir.org/" target="_blank" rel="noopener">http://ictclas.nlpir.org/</a></p><p>主要功能包括中文分词；词性标注；中英混合分词；命名实体识别；用户词典功能；支持GBK编码、UTF8编码、BIG5编码。新增微博分词、新词发现与关键词提取；张华平博士先后倾力打造20余年，内核升级10次。</p><p>全球用户突破20万，先后获得了2010年钱伟长中文信息处理科学技术奖一等奖，2003年国际SIGHAN分词大赛综合第一名，2002年国内973评测综合第一名。</p><h2 id="3-4-Gensim"><a href="#3-4-Gensim" class="headerlink" title="3.4 Gensim"></a>3.4 Gensim</h2><p><a href="https://radimrehurek.com/gensim/" target="_blank" rel="noopener">https://radimrehurek.com/gensim/</a></p><p>它的 slogan 是：Topic modelling for humans.<br>Gensim提供了一个发现文档语义结构的工具，用于从原始的非结构化的文本中，无监督地学习到文本隐层的主题向量表达。它将语料（Corpus）向量化表示后，主要能够实现以下三个功能：</p><ul><li>建立语言模型</li><li>词嵌入模型的训练</li><li>检索和语义分析的神器</li></ul><p>简介参考：<a href="https://www.cnblogs.com/iloveai/p/gensim_tutorial.html" target="_blank" rel="noopener">https://www.cnblogs.com/iloveai/p/gensim_tutorial.html</a></p><hr><h1 id="4-汉语语言学"><a href="#4-汉语语言学" class="headerlink" title="4. 汉语语言学"></a>4. 汉语语言学</h1><p><img src="https://img-blog.csdn.net/20180724154959619?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>下面我们进入第二个部分的介绍，汉语语言学与汉语分词技术。</p><p>汉语，即汉族的语言，是中国通用语言，国际通用语言之一，属汉藏语系,汉语历史悠久，使用人数最多，世界上使用汉语的人数至少15亿 ，超过世界总人口的20%</p><p>汉字最早起源于商朝的甲骨文，距今已经有3000-4000年的历史了。文字的目的是为了记录，古汉语以独字为核心，即使隋唐以后汉语书面语逐渐向口语化发展，从甲骨文出现至今的4000年中，汉语基本的语法格局和造字方法始终没有本质变化。</p><h2 id="4-1-汉字的统一"><a href="#4-1-汉字的统一" class="headerlink" title="4.1 汉字的统一"></a>4.1 汉字的统一</h2><p>秦朝李斯受命统一文字，图中这种文字就是小篆。通行于秦代。形体偏长，匀圆齐整，由大篆衍变而成。小篆也叫“秦篆”。东汉许慎《说文解字·叙》 称：“秦始皇帝初兼天下……罢其不与秦文合者。”李斯作《仓颉篇》，中车府令赵高作《爰历篇》，太史令胡毋敬作《博学篇》，“皆取史籀大篆，或颇省改，所谓小篆者也。”今存《琅琊台刻石》、 《泰山刻石》残石，即小篆代表作。</p><p>汉字统一后，我们的祖先通过造字并且成词，成句，最终留下了浩如烟海的璀璨文化。</p><p>值得一提的是，对于计算机可以理解的语料库，知识库，我国起步很晚。</p><p><strong>1979年开始，中国开始机器可读的语料库的建设</strong>，至1991年开始建设国家级的语料库。现在我们使用汉语分词开源组件的大部分语料库都是基于《人民日报》加工的，一般项目包括词语切分、词性标注、专有名词（专有名词短语）标注。还要对多音词注音。</p><h2 id="4-2-印欧语系与汉藏语系"><a href="#4-2-印欧语系与汉藏语系" class="headerlink" title="4.2 印欧语系与汉藏语系"></a>4.2 印欧语系与汉藏语系</h2><p>从古至今，汉语的表达基本单位是字，造字的方法六书：</p><pre><code>象形，指事，会意，转注，假借，形声</code></pre><p>汉语中每个字都有非常丰富的含义。比如图片中的会意字，顺字，就在字本身上表达出了，柔顺通顺的含义。</p><p>当然印欧语系与汉语的诸多不同中，有如下两点是至关重要的。</p><ul><li>第一，印欧语系都实行分词连写，词与词之间用空格分割，因此没有分词问题。</li><li>第二，印欧语种大多数都通过形态变化构造语法结构，有很强 的规范性。</li></ul><p>基于印欧语系这些特点，在自然语言诞生的初期阶段，句法分析已经成为西方NLP的核心主题</p><p>在汉语自然语言处理的过程中，遇到的问题与印欧语言有诸多不同：首先中文分词就是西方语言所不曾遇到的问题<br>在句法解析环节，如果照搬西方语言的算法理论，越来越多 的事实证明，句法分析的在汉语上的精度要显著低于西方语言。</p><hr><h1 id="5-词汇与分词技术简介"><a href="#5-词汇与分词技术简介" class="headerlink" title="5. 词汇与分词技术简介"></a>5. 词汇与分词技术简介</h1><p>汉语词汇是汉语语言中能够独立运用的最小语言单位，是语言中的原子结构。独立运用意味着，单独做句法成分或单独起语法作用。</p><p>因此对中文进行分词就显的至关重要。汉字有5-20万多个，但是常用的汉字仅有6000个，在线新华字典中收录了约52万个汉语词汇。</p><p>在英文的行文中，单词之间是以空格作为自然分界符的，而中文只是字、句和段能通过明显的分界符来简单划界，唯独词没有一个形式上的分界符，虽然英文也同样存在短语的划分问题，不过在词这一层上，中文比之英文要复杂得多、困难得多。（比如北京大学的划分，是单独成词还是两个词，这样的中文词汇还有很多）</p><h2 id="5-1-汉语词汇"><a href="#5-1-汉语词汇" class="headerlink" title="5.1 汉语词汇"></a>5.1 汉语词汇</h2><p>说到汉语词汇，汉语词汇有三个重要特性：</p><p>1.稳固性<br>2.常用性<br>3.能产性</p><p>前两个特性很好理解，能产性说的是，人们给小孩子起名就是词汇能产性的生动体现，汉语的构词机制是一个动态的自组织认知系统，<strong>所以汉语自然语言处理的魅力就在于，对于此类在社会发展过程中出现的新词，人名，组织机构名，如何正确切分并且识别。</strong></p><h2 id="5-2-汉语分词技术"><a href="#5-2-汉语分词技术" class="headerlink" title="5.2 汉语分词技术"></a>5.2 汉语分词技术</h2><p>由于国际上常用的NLP算法，深层次的语法语义分析通常都是<strong>以词作为基本单位</strong>，很多中文的自然语言处理的任务，也就多了一个预处理的过程来把连续的汉字分隔成更具有语言语义学上意义的词。这个过程就叫做分词。</p><p>简要来说分词就是：<strong>把没有明显分界标志的字串切分为词串</strong></p><p>中文分词研究经历20于年，主要分化为三个流派。</p><p>1.机械式分词法（基于词典）<br>2.基于语法和规则的分词法<br>3.基于统计的分词法</p><p>最终较为成功的实现了中文词汇的自动切分技术（最近兴起的深度学习技术，又提供了新的分词思路）</p><p>尽管在语言学语义学上，词有着相对清晰的定义，对于计算机处理自然语言来说，分词很多时候没有放之四海皆准的共同标准。由于分词本身更多的时候是作为一个预处理的过程，判断其质量的好坏更多的时候需要结合下游的应用来进行。</p><p>分词问题为中文文本处理的基础性工作,分词效果的好坏对后面的中文信息处理其关键作用</p><p>参考：<br>深入NLP———看中文分词如何影响你的生活点滴<br><a href="https://baike.baidu.com/tashuo/browse/content?id=d276fc8ff138ce5c74e7683b&amp;lemmaId=&amp;fromLemmaModule=pcBottom" target="_blank" rel="noopener">https://baike.baidu.com/tashuo/browse/content?id=d276fc8ff138ce5c74e7683b&amp;lemmaId=&amp;fromLemmaModule=pcBottom</a></p><h1 id="6-汉语分词技术—-以jieba-分词为例"><a href="#6-汉语分词技术—-以jieba-分词为例" class="headerlink" title="6.汉语分词技术—-以jieba 分词为例"></a>6.汉语分词技术—-以jieba 分词为例</h1><p><img src="https://img-blog.csdn.net/20180724173740545?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>以我认为使用起来最友好的jieba 分词为例，我们来认识一下基于统计类算法的汉语分词流程。<br>图片中例子参考：<a href="http://www.cnblogs.com/zhbzz2007/p/6076246.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhbzz2007/p/6076246.html</a></p><h2 id="6-1-Jieba分词的特点"><a href="#6-1-Jieba分词的特点" class="headerlink" title="6.1 Jieba分词的特点"></a>6.1 Jieba分词的特点</h2><p>结巴分词安装好即可使用，自带一个35w 的语料库，其中标注了汉语常见词汇的词频，和词性。<br>概况来说，结巴分词主要有以下三个特点。</p><p>1.基于前缀词典实现高效的词图扫描，生成句子中汉字所有可能成词情况所构成的有向无环图 (DAG)<br>2.采用了动态规划查找最大概率路径, 找出基于词频的最大切分组合<br>3.对于未登录词，采用了基于汉字成词能力的 HMM 模型，使用了 Viterbi 算法</p><h2 id="6-2-分词算法"><a href="#6-2-分词算法" class="headerlink" title="6.2 分词算法"></a>6.2 分词算法</h2><p>jieba 分词算法的主要流程为三步</p><p>0.首先加载词库，完成初试环境设置</p><p>1.对于给定待分词的句子, 使用正则获取匹配的中文字符(和英文字符)切分成的短语列表（在语料库中）；<br> 即，对指定的词库dict.txt进行计算生成前缀词典，到jieba进程的初始化工作完成后就调用get_DAG获得句子的DAG（有向无环图）；</p><p>2.根据句子的DAG则使用DAG(查字典)和动态规划, 得到最大概率路径, 对DAG中那些没有在字典中查到的字, 组合成一个新的片段短语, 使用HMM模型进行分词, 也就是识别新词, 即识别字典外的新词</p><h2 id="6-3-未登录词识别与词性标注"><a href="#6-3-未登录词识别与词性标注" class="headerlink" title="6.3 未登录词识别与词性标注"></a>6.3 未登录词识别与词性标注</h2><h3 id="6-3-1-未登录词识别"><a href="#6-3-1-未登录词识别" class="headerlink" title="6.3.1 未登录词识别"></a>6.3.1 未登录词识别</h3><p>如果没有前缀词典或者有些词不在前缀词典中，则可以利用HMM模型进行分词，主要是将分词问题视为一个序列标注（sequence labeling）问题，其中，句子为观测序列，分词结果为状态序列。首先通过语料训练出HMM相关的模型，然后利用Viterbi算法进行求解，最终得到最优的状态序列，然后再根据状态序列，输出分词结果。</p><p>HMM（Hidden Markov Model） 隐马尔可夫模型，一种简单的网络图模型，同时是一种产生式模型是为了弄清楚并模拟数据产生的原理和机制。</p><p>HMM模型+viterbi算法（高通公司的联合创始人发明）进行分词的主要思想就是：<br>给定训练好的模型(如HMM)参数(λ=(A,B,π)), 然后对模型进行载入，再运行一遍Viterbi算法，就可以找出每个字对应的状态（B, M, E, S），这样就可以根据状态也就可以对句子进行分词。</p><p>4-tag，也就是每个字处在词语中的4种可能状态：</p><pre><code>B、M、E、S，分别表示- Begin（这个字处于词的开始位置）- Middle（这个字处于词的中间位置）- End（这个字处于词的结束位置）- Single（这个字是单字成词）</code></pre><p>基本规则<br>B后面只能接（M或者E），不可能接（B或者S）；而M后面也只能接（M或者E），不可能接（B或者S）</p><p>具体如下图所示，“去”和“玩”都是单字成词，因此状态就是S，“北京大学”是多字组合成的词，因此“北”、“京”、“大”、“学”分别位于“北京大学”中的B、M、M、E。</p><p>序列标注，就是将输入句子和分词结果当作两个序列，句子为观测序列，分词结果为状态序列，当完成状态序列的标注，也就得到了分词结果。实际上词性标注问题是一个解码问题。</p><p>由Viterbi算法得到状态序列（包含分词及词性标注），也就可以根据状态序列得到分词结果。其中状态以B开头，离它最近的以E结尾的一个子状态序列或者单独为S的子状态序列，就是一个分词。以”去北京大玩学城“为例，其中，“去“和”北京”在前缀词典中有，因此直接通过词–词性词典对其匹配即可，它俩的词性分别为“去/v”，“北京/ns”；而对于”大玩学城“这个句子，是未登录词，因此对其利用隐马尔科夫模型对其进行词性标志，它的隐藏状态序列就是[(u’S’, u’a’), (u’B’, u’n’), (u’E’, u’n’), (u’B’, u’n’)]这个列表，列表中的每个元素为一个元组，则分词为”S / BE / B“，对应观测序列，也就是”大 / 玩学 / 城”。</p><p>参考：<a href="https://www.cnblogs.com/baiboy/p/jieba2.html" target="_blank" rel="noopener">https://www.cnblogs.com/baiboy/p/jieba2.html</a></p><h3 id="6-3-2-词性标注"><a href="#6-3-2-词性标注" class="headerlink" title="6.3.2 词性标注"></a>6.3.2 词性标注</h3><p><img src="https://img-blog.csdn.net/20180725162207173?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20180726141000773?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>词性标注和未登录词的发现方法一样，都可以使用HMM模型来解决这样的问题。</p><p>给定词串W=w1w2…wn，和词性标记集，求对应的词性标记串T=t1t2…tn。<br>因为有些词有多个词性，所以从概率的角度看就是：给定W的条件下，求使得概率P（T|W）最高的那个词性标注串，即：<br><img src="https://img-blog.csdn.net/20180726142301954?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0luc2lnaHR6ZW5feGlhbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>从图论的角度来看，就是求解图中哪条路径的权重最大，进而将这个问题转化为使用基于动态规划的viterbi 算法求解一系列相似的子问题，得到权重最大的路径。</p><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>我爱自然语言处理<br><a href="http://www.52nlp.cn/" target="_blank" rel="noopener">http://www.52nlp.cn/</a></p><p>深度学习与中文短文本分析总结与梳理<br><a href="https://blog.csdn.net/wangyaninglm/article/details/66477222" target="_blank" rel="noopener">https://blog.csdn.net/wangyaninglm/article/details/66477222</a></p><p>分析了近5万首《全唐诗》，发现了这些有趣的秘密<br><a href="http://www.growthhk.cn/cgo/9542.html" target="_blank" rel="noopener">http://www.growthhk.cn/cgo/9542.html</a></p><p>万字干货｜10款数据分析“工具”，助你成为新媒体运营领域的“增长黑客”<br><a href="http://www.woshipm.com/data-analysis/553180.html" target="_blank" rel="noopener">http://www.woshipm.com/data-analysis/553180.html</a></p><p>jieba分词简介与解析<br><a href="https://www.cnblogs.com/baiboy/p/jieba2.html" target="_blank" rel="noopener">https://www.cnblogs.com/baiboy/p/jieba2.html</a></p><p>有哪些好的汉语分词方案<br><a href="https://www.zhihu.com/question/19578687" target="_blank" rel="noopener">https://www.zhihu.com/question/19578687</a><br>基于分布式的短文本命题实体识别之—-人名识别（python实现）<br><a href="https://blog.csdn.net/wangyaninglm/article/details/75042151" target="_blank" rel="noopener">https://blog.csdn.net/wangyaninglm/article/details/75042151</a></p>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从前有一个程序员，成天写代码，后来，他屎了。。。</title>
      <link href="/2016/11/11/%E4%BB%8E%E5%89%8D%E6%9C%89%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%EF%BC%8C%E6%88%90%E5%A4%A9%E5%86%99%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%90%8E%E6%9D%A5%EF%BC%8C%E4%BB%96%E5%B1%8E%E4%BA%86%E3%80%82%E3%80%82%E3%80%82/"/>
      <url>/2016/11/11/%E4%BB%8E%E5%89%8D%E6%9C%89%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%EF%BC%8C%E6%88%90%E5%A4%A9%E5%86%99%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%90%8E%E6%9D%A5%EF%BC%8C%E4%BB%96%E5%B1%8E%E4%BA%86%E3%80%82%E3%80%82%E3%80%82/</url>
      
        <content type="html"><![CDATA[<p>之前这里是网易云音乐 的外链，许巍演唱版本的《执着》，我们搞IT 的多少都有些执着，后来网页没有了版权，我只好放上来歌词了。 如果对文章没有太多兴趣，可以只读一遍歌词，或者听一遍歌，哈哈。</p><p>每个夜晚来临的时候<br>孤独总在我左右<br>每个黄昏心跳的等候<br>是我无限的温柔<br>每次面对你时候<br>不敢看你的双眸<br>在我温柔的笑容背后<br>有多少泪水哀愁<br>不管时空怎么转变<br>世界怎么改变<br>你的爱总在我心间<br>你是否明白<br>我想超越这平凡的生活<br>注定现在暂时漂泊<br>无法停止我内心的狂热<br>对未来的执著</p><p>拥抱着你Oh my baby<br>你看到我在流泪<br>是否爱你让我伤悲<br>让我心碎<br>拥抱着你Oh my baby<br>可你知道我无法后退<br>纵然使我苍白憔悴<br>伤痕累累</p><hr><p>@<a href="文章大纲">toc</a></p><hr><p>每天你都有机会和很多人擦身而过，而你或者对他们一无所知，不过也许有一天他会变成你的朋友或是知己……</p><p><strong>先来看看老王和他的IT界朋友们吧</strong></p><hr><p><img src="https://img-blog.csdn.net/20171024125629300?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125645854?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125658552?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125711063?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125754723?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125900730?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125912692?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024125929546?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024130841305?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20171024130055123?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3lhbmluZ2xt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>p.s 经常有人问我，老王，你明明可以穿的挺帅，为什么总是穿的很随意呢？</p><p>其实道理很简单，我是做技术活的，打扮太好人家会以为我技术不行。</p><hr><h1 id="从前有一个程序员，成天写代码，后来，他屎了"><a href="#从前有一个程序员，成天写代码，后来，他屎了" class="headerlink" title="从前有一个程序员，成天写代码，后来，他屎了"></a><strong>从前有一个程序员，成天写代码，后来，他屎了</strong></h1><p><strong>1.一门可以靠手艺混饭的专业</strong><br>你好，非常荣幸能够步入改变世界的软件开发行业，接下来我们聊点正经的。回首近7-8年来的时光，发现自己可能将要走向程序员这条道路的时候最早可以追溯到2008年高考完填写志愿，那时候分数所迫，二本学校的好专业都上不了，我就想有什么专业是可以不靠学校名声而靠自己努力成就一番霸业的？思来想去选择了–计算机，作为第二志愿。。。显然那时候会计这个专业更火一些。</p><p>入学一年以后我有了自己第一台笔记本电脑，然而第一个装上的应用程序居然就是魔兽争霸之冰封王座，后来我们的基本修养是从练习打字，office软件开始，我是有点不屑于这样很low的东西，然而这些都是基本功，好像少林拳法，你得把少林长拳练个一年半载再练什么韦陀掌罗汉拳修习内功心法十几年有了根基再练七十二绝技，其实<br>不要轻视任何一种编程语言或者技术，这些很low的东西确确实实作为基础存在为后续高端东西铺路的。</p><p><strong>2.出来混，迟早要还</strong><br>当时学校开设了vb，我又开始犯眼高手低的毛病觉得这玩意是吧，拖拖控件有什么前途？直到我看见雷总设计的十字路口交通信号灯模拟，车子随机出现带有阴影并且看到红灯能够减速，直到很多年后我才明白，技术只是手段其本身并没有优劣高下，主要看你的应用场景。就好像马克思说的武器不重要，重要的是人，一切语言技术都是服务于自己的思想的。后面还学习了几门印象深刻的课程，《网页设计》，同样给我潜意识里造成前端工作没啥技术含量的一门课程，从龙哥那里摸来了一个可以实现字幕的滚动效果的标签<marquee>，就给自己网站首页index.html所有标题乐此不疲的加上，还有通过修改html把百度一下改成百度两下。这样的无知少年终于招来了老司机的呵呵，也是从那时候起，看了一本对我职业生涯影响深远的电子书《IT小小鸟》，从此泡上了论坛，从此不太看电视了，从此去了大学就喜欢在分类号TP391下面来回转转。</marquee></p><p>后面学到c++，java，听30几岁的秃顶老师站在台上用20年的开发经验鄙视java效率太差的时候，我的内心充满了崇拜。后面大家拼了命的照着马士兵的视频敲坦克大战，我对此嗤之以鼻。结果JAVA没怎么学，jsp也挂科了，因为两者是一个老师教的，我对java的鄙视甚至延伸到了老师身上，觉的那个老师也效率低下。不过好像确实如此，从来没见过他用快捷键调试jsp，都是后来去企业实训，代课大牛用myeclipse调试的飞起，我才恍然大悟——这玩意还能调试？！</p><p>那时候班里学c++的人不多，好像这个成了偏门一样，大家都去外面报了班培训三大框架，祥龙学安全方面的内容，我在学习MFC，当然其实跟没学没啥两样，代码自己就没有敲过多少行，一心就想着考研了。大学期间学过仅有的有意义的课程当属《操作系统》《数据库》，当然还是两位老师的人格魅力更加出众，几种解决同步互斥的算法我至今不是太清楚，数据库化简关系模式的算法也得上网搜了才会算。《计算机网络》《数据结构》这两门课呢，一个猥琐的抠脚大叔（没错真的是在办公室抠脚的学院当时唯一一个教授）教的，基本全靠自学，应了本段的标题，在研究生找工作期间，c++方向的面试基本全部围绕了网络进行深入探讨，滑动窗口，三次握手，拥塞控制，手写快排等等一个都跑不了，于是我面的c++岗位基本没过几个面试。出来混，迟早要还。</p><p><strong>3.培养自己独立解决复杂问题的能力</strong><br>回想后来大学时候在沉静下来的日子里自己还是干了点实事，系统的学习了photoshop，这激发了后来我走上计算机视觉的道路，虽然我在自然图像处理上主要用opencv库，python等封装好的算法接口，基本对图形图像处理这个行业有了整体的感觉，有什么需求大概能知道需要什么样的技术手段去解决，15年底我成为了CSDN图形图像处理版的版主，2016年6月终于凭借一些图像图像处理领域的博文评上了博客专家。我很欣慰在即将到来的生日迎来这个蛮光荣的称号。</p><p>上研究生后，选择导师时候希望继续学习图形图像处理，计算机视觉的相关内容，我导师的主要研究方向是搞三维重建听起来也是非常高大上，其实现在的VR就是三维重建的高端应用的吧。后来老师一直比较忙，而且到了我们这里项目没有衔接上，科研的方向选择就出现了青黄不接的尴尬情形。我从最开始老师推荐的图割算法研究的初始方向入手，从图像分割研究到立体匹配，用一句话概况就是如何改进提高图割算法在图像分割和立体匹配两个应用问题上面的性能。要么降低网络图的规模，要么改进图割算法。前人挖了个大坑，我看明白算法才深深体会到了自己做了三年的填坑工作。</p><p>三年的研究生涯，我在学术上面看到的论文仅仅是明白了其他人做研究的方法，对于如何创新的提出自己原创的idea去解决问题这样的能力培养基本为零，也没有能很好的锻炼出复现别人论文中代码的能力，要是别人的好方法没有给出代码，那么这个领域的问题研究就无法开展。这样的后果是严重的。直到快要毕业，才找到了立体匹配领域里面应该看的网站，文章，比如ipol，比如Middlebury，比如KITTI。</p><p>从开学初始，当老师问我想读博还是工作时候，年轻的我就希望早点工作赚钱，现在看来这个决定还是太草率。快要毕业了，这才心有不甘。希望自己在工作岗位上，面对各种诱惑，对于前面学过的知识做到常读常新，把基础巩固好，这样才能具有独立解决复杂问题的能力。</p><p><strong>4.唯手熟尔</strong><br>上大学时候，可能很多人想去做做兼职，挣点小钱喝点小酒，这样的想法也就延伸到研究生期间来，我们看到其实几年来潜心在实验室呆着的同志科研成果都非常好，这样在一个领域混熟了，把理论都研究透了，就是这个领域的专家。</p><p>再拿数学举个例子，高等代数，矩阵论里面成天算特征值特征向量，到底有啥用？现在机器学习这么火，稀疏矩阵降维就是用这两个东西表征的嘛，大学时候这些东西我们都学了，却为什么见了阿尔法狗那么遥不可及？基础啊，基础东西很重要。我认为只有将基础的东西融会贯通，烂熟于心，才能完成第三点，独立完成复杂的任务。这才是企业，科研单位需要的高级人才，也是三年到五年工作经验中我们应该着力培养的点。</p><p>我其实实习过不少单位，深圳中软，西安天文点，IBM，研究所，一路走来无论是大公司还是小单位，在我每天完成工作日志的时候，我确实发现会和熟是两码事，也许你会说他们中间的区别就是忘记了百度一下，但成年累月下来，就是软件行业加班恶习的罪魁祸首，以及自我提升的最大拦路虎(比如有的研究所就是没有外网碰到配置JAVA环境变量，或者部署机器怎么办？)。在工作中，我们强调设计模式和经验，这些都是套路，唯手熟尔！</p><hr><h1 id="有天坐公交车上来个傻子，不停的说笑，后来全车人都被他逗笑了，他却冷下脸来看着其他人说：傻子，你笑什么？"><a href="#有天坐公交车上来个傻子，不停的说笑，后来全车人都被他逗笑了，他却冷下脸来看着其他人说：傻子，你笑什么？" class="headerlink" title="有天坐公交车上来个傻子，不停的说笑，后来全车人都被他逗笑了，他却冷下脸来看着其他人说：傻子，你笑什么？"></a><strong>有天坐公交车上来个傻子，不停的说笑，后来全车人都被他逗笑了，他却冷下脸来看着其他人说：傻子，你笑什么？</strong></h1><hr><p>快毕业了，读了几本书，贾平凹废都写九十年代的陕西出了一帮子浪子闲汉，他们总是不满意这个不满意那个，浮躁的像一群绿头苍蝇，然后我看了陈忠实的康家小院，萧红的呼兰河传，又是不同的风格，到头来发现前辈们在书中文字里都有一种平和纯粹的专注美。《白鹿原》不愧为获得了茅盾文学奖的宏大作品，当一个老陕用地道的关中话在心里朗读这些文字的时候，你才能体会到这部作品带给你真实的，自己现实经历过地风土人情。</p><p>回顾自己三年的研究生学习确实浮躁，做了很多浅尝辄止的事情，比如做学生干部，却也没去高校读博当老师，也没去考考公务员，比如做计算机双目立体视觉，却连双目摄像头都没买一个，听了机器学习的课程却没有坚持下来。这个时代需要为自己做做减法，一个人在信息爆炸的时代，需要沉浸下来，专心致志的把一件事情做好。我一直有这种想法，希望为时不晚。</p><p>最近一段时间同学们的离校，让我心中充满了前所未有的不甘与疲惫，我们这个年龄的人大都有着同样的困惑，爱情事业，choise a f**king life。人生中黄金的三年恍如看电影按了快进。我选择的路，值么？</p><hr><h1 id="如果不献身给一个伟大的理想，生命就是毫无意义的。—-何塞，黎萨尔"><a href="#如果不献身给一个伟大的理想，生命就是毫无意义的。—-何塞，黎萨尔" class="headerlink" title="如果不献身给一个伟大的理想，生命就是毫无意义的。—-何塞，黎萨尔"></a><strong>如果不献身给一个伟大的理想，生命就是毫无意义的。—-何塞，黎萨尔</strong></h1><hr><p>1947年，在给长子毛岸英的信中，毛泽东写道：“一个人无论学什么或者做什么，只要有热情，有恒心，不要那种无着落的与人民利益不相符合的个人主义虚荣心，总会有进步的。”还特意在这段话下划了横线。那一年毛岸英25岁</p><p>“生存还是毁灭，这是一个问题。”哈姆雷特的这句话，给我留下了极为深刻的印象。年轻的我，在当年陕北贫瘠的黄土地上，不断思考着“生存还是毁灭”的问题，最后我立下为祖国、为人民奉献自己的信念。那一年习总书记16岁刚刚当选为生产队支部书记。</p><p>在 2012-13 赛季，邓肯减轻了 15 磅的体重。波波维奇透露，邓肯通过沙滩跑，扔铁饼、拳击等方式减重。此外，圣安东尼奥当地记者麦克卡尼开玩笑说，邓肯的饮食就像是一只老鹰的菜单（只吃鸡肉）。 当然了，邓肯只能延缓衰老，却不能逃避。于是，当身体机能不可能避免地下降时，他便靠改变打法，以及经验、意识和基本功去弥补。为什么有了 4 个冠军，他依旧要这样过这样苦行僧一样的生活呢？邓肯说，他喜欢跟队友一起坐飞机，一起去客场比赛的感觉。</p><p>他纯粹就是热爱篮球。所以，蒂姆·邓肯，他到底是年轻，还是老呢？他大一时就已经可以进入 NBA，但为了完成心理学学位，他一直等到大学毕业才参加选秀。这在今天，他等于放弃了一千万美元。还没 20 岁，他就像中年人般自律成熟。但在 38 岁的时候，他的赤子之心依旧没有变。在奠定了历史第一大前的地位，赚到了上亿美元以后，他依旧像新秀一样努力。他不为金钱和荣耀，只是为热爱而打球。诺维斯基在采访中说：“他（邓肯）永远只想着赢球，从来不会想着为自己打造品牌，这就是我最钦佩他的地方。”并不是热泪盈眶才叫青春，也不是莽撞热血才叫年轻。不忘初心，便始终都是年轻。悲哀的是，多少人把放纵当热血，并把早熟和自律当做陈腐来嬉笑。岁月还未过多流逝之前，他们的身体和精神就已经被掏空，提早告别了青春。</p><p>不忘初心，严格自律，正是这些杰出人物的共同特点。在此，老王和大家共勉。</p><p>关注我的订阅号：<strong>老王和他的IT界朋友们</strong>，我们在这里缅怀IT人的情怀，在这里think different，在这里stay hungry，站在老王他们家隔壁的风口上灰翔！！！</p><table><thead><tr><th></th><th><img src="https://img-blog.csdn.net/20160714211019204" alt="这里写图片描述"></th><th></th></tr></thead><tbody><tr><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 老王和他的IT界朋友们 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oldITWANG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我所理解的生活</title>
      <link href="/2013/07/19/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB%EF%BC%81/"/>
      <url>/2013/07/19/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<hr><p>  写于:2013-7</p><hr><font face="楷体"><br>  无码的睁大眼睛看，有码的眯起眼睛看，没有情节的直接删除<br><br>   <font face="楷体"><br>   ———————-这就是我所理解的生活！<br><br><br></font> <hr><p>   我也许能够一直打着寻找自我的幌子，继续在这个社会招摇撞骗。凭良心说我喜欢千奇百怪的结果，于是这个刚刚走出校园的年头像一个gap year一样，我带着那个偏光镜把花花世界看了个遍，口水撒了一地。但是人不能太贪心，没有回国立西安大学当校长之前，我还是希望自己安生的积淀一点厚度。</p><p>每年的这个时候，好像年中工作总结一般的也要百无聊赖的憋出点感想出来，当然今年的这一篇是为了纪念这初出茅庐的一年，刻骨铭心的一年，以及这么灿烂绚丽的23岁。。。</p><p> 这一年的时光铭记在人生历史长河中的时候，朋友们的脚印首先留下了浓墨重彩的一笔。</p><p>   去年的这个时候，在单曲循环了无数次小虎队的《祝你一路顺风》之后，我在深圳城中村臭水沟和按摩城边上的一个快要废弃的小别墅里安顿了下来。后来发现这里蟑螂有异形那么大，台风能把不锈钢脸盆从阳台吹到客厅，后院为KFC供货的公鸡吃了激素每天从凌晨4点开始失眠，我也就养成了早起的好习惯。怪不得两百平米800块一个月！这么物美价廉。其实从在chinasoft报道的那天起，我就很庆幸之前培养了篮球这个爱好，是它在一开始打破了隔阂，先聚起了一小波人，中锋鹏鸣，大前锋峰哥和李明辉，小前锋我，后卫队长。半场4v4正好多了一个轮换阵容，但是只要我在场上进攻总是始于我没理由的浪投，止于其他三人稳定的发挥。后来博和其他几个人也加入了我们，可是没打几场，九月底，中软实习生篮球部就因为大家各走阳关道解散了。这里面深层次的原因竟然牵扯到了美国国家安全局棱镜项目以及欧盟对华为交换机的贸易反制，蝴蝶效应哇！</p><p>   打篮球的几个Intern本身就是很幽默的家伙，博和建斌是两个更有趣的人，我们三个吃木桶饭的时候会伺机把最漂亮的小妹叫过来说来一个“手撕粉木耳”把，小妹妹总是笑笑说这个没有，完后博拿起菜单指着最下面最后一行最贵价值20元的那个“香辣带皮牛肉饭”，很认真的问：什么是‘香辣带皮’？</p><p>   建斌是个高级技术宅，南方人外加标准普通港台腔，他总用工资买了最好的播放器和耳机听最高端的音乐以及最高端的计算机技术书籍。考研考了320分结果没去，自信满满的对自己考上的同学说：三年之后咱们比比看，到底谁比较厉害！可是刚来中软没几天他就认怂了，这么坑爹的公司哇可能我要输了。我走以后他进了项目组，有一天他说：其实工作吧，也就是那么回事，工作不能让你学会什么而是能让你明白，你不会什么，搞明白自己不会什么，这才真正重要！在这一点上，我是深以为然的。</p><p>   我的卖萌室友博，是个武汉人，鸭脖子热干面吃多了就有点那种萌劲。博有一个梦想，将来开一个心理诊所，原来他这几年打定主意卧薪尝胆的搞IT都是为了以后能让世界上少几个我一样的神经病。共处一室他首先开始健身，后来我们一起为了腹肌留了很多汗。博有一个最大的优点就是坚持，坚持每天只吃千张肉丝美白肌肤，不管多累回来就是要坚持完成健身科目。而我因为每天早餐就要吃掉一份肠粉4个包子2个韭菜饼一个鸡蛋一杯豆浆一瓶果汁几个月下来效果很不明显，只练成了一块腹肌。</p><p>   公司不能玩游戏，博就给我们写了一个贪吃蛇，群众喜闻乐见，只是蛇不能太长不然容易崩溃。后来听说，博在中软抗了六个月，也没有项目给他做，他于是过年都没有回家打工挣钱垒代码。我想这家伙应该明年就报考北大心理学了吧，精彩的青春果然是留给奋斗的人生的。</p><p>   深圳一别，不知何时再能和这些一入IT深似海的实习生再见。终于，我也赶在中秋前夜，回到了生我养我的那片热土。</p><p>   接着就马不停蹄的在省图开启另一次抱佛脚的旅途，这期间时光飞逝，插曲有两段。<br>    其一是不小心打了一个也是学计算机挑衅占座的，比我还羸弱，当我用单手把他甩出去三米远眼镜都飞到楼下去的时候，他果断拨打了110并告诉我你等着吧，我没有迟疑。。。跑了。。。</p><p>   之后依然是老哥自残式的做高数，我则无压力继续同济课后题，人吃呢？他一直二在奔三的路上，偶尔会有两个女生停下来欣赏他规划出来的城市CBD，我抹干净口水再默写一遍图的深度优先搜索。</p><p>   最后的插曲是最后十天左右的样子，和可亲的学姐互相搭讪了，学姐的名字很有意境，性格又善解人意，给当时以及后来一段时间的生活平添了许多少年维特的烦恼，学姐善于夸奖别人，很多次我忍不住问你能不能不夸我了，她说那就没什么好说的了。</p><p>   后来我又马不停蹄的找了工作，开始了规律的生活，将近六个月的时间，在百度，google，csdn的帮助下给老系统添加了新功能，并着手开发了一套新系统。从过年之后，忽然觉的这一年寻找存在感的旅途少了点什么，就趁着周末约见了曾经的一些姑娘和女神。一个姐姐告诉我原来最难的不是改变而是永不改变，徐言对此评论说这个操蛋的社会是总能让夜来香在白天也绽放的！！！这样的每个周末都注定是忙碌的，社会交给我了很多的新功能需要匆忙上线，周六雷打不动回文理打球。周一回去上班顺便补充睡眠。</p><p>   即使档期安排的这么满，我依然没有忘记我们的龙仔需要加戏！！！</p><p>   龙仔信佛，但是某个时刻我知道龙仔找了个女朋友的时候，我心想TMD这年头和尚都没有节操了！龙仔在国立西安大学的饭堂吃了四年的西红柿鸡蛋面，我首先代表未来的校长为你道歉，若干年后我接管这里，一定要下大力气提升学校的素食水平，不要让西红柿鸡蛋面看起来像是番茄酱拌面。</p><p>   大学4年的时间一晃而过，当我们搬到了二号公寓楼的时候，每次去图书馆装逼路过龙仔他们宿舍，我会机械性的看看多子团灭了没有，雷哥又下了什么片子，龙仔在看什么漫画打什么单机rpg，最后叫醒学长，一起去搞基。龙仔在专业方面一直是剑走偏锋的安全方面，当然在我们系自己搞点啥都算是剑走偏锋。</p><p>   再后来，这厮说跟他女朋友分手了，我只能说真不明白现在的和尚都什么专业素养。。。龙仔似乎毕业之后进了一家比中软还坑的坑爹企业，老板辞退了清洁工让龙仔顺便兼职也没有加工资，这种事情换做是我，老板的骨灰现在应该已经飘散在祖国的大江南北。但是龙仔信佛，慈悲为怀，也没有计较，努力工作为和谐社会添砖加瓦。早知道龙仔要离开西安了，也并不是多么突然，只是，这种感觉就好像去年我发毕业证盖完章子锁上大门，砰的一声，回荡在悠长的走廊里，4021教室里还会不会再坐满你们？</p><p>   转眼间，生命中或多或少的这一个年头又要悄悄溜走了，我还没有顾得上和某个善良的女生交流人生。朋友已经有人结婚有人读博，眼见感情生活这一章又要继续在这个年头停滞不前了。<br>这时候。</p><p>龙哥告诉我说：我们还有篮球！<br>没错，你说的有道理！！！我说——</p><p><img src="https://img-blog.csdnimg.cn/20181226231105136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>THE END<br>ALL RIGHTS RESERVED! </p><hr><p>PS.我曾经希望，某个时段人生的背景音乐可以用《豪勇七蛟龙》，这个时段，我想应该可以试试了。<br>但是 但是，这一首更好！</p><p>最后的最后：是一张龙仔的高清无码大图！！！</p><p><img src="https://img-blog.csdnimg.cn/20181226231119340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5YW5pbmdsbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></font>]]></content>
      
      
      <categories>
          
          <category> 老王和他的IT界朋友们 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oldITWANG </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
